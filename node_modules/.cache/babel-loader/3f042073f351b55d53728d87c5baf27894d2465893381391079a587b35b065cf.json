{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsuna\\\\reading-experiment\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Home from './components/Home';\nimport TutorialReading from './tutorial/TutorialReading';\nimport TutorialQuiz from './tutorial/TutorialQuiz';\nimport TutorialResult from './tutorial/TutorialResult';\nimport ExperimentReading from './experiment/ExperimentReading';\nimport ExperimentQuiz from './experiment/ExperimentQuiz';\nimport ExperimentResult from './experiment/ExperimentResult';\nimport { getOrCreateUserId } from './utils/user';\nimport FAQ from './components/FAQ';\nimport Results from './components/Results';\nimport NavBar from './components/NavBar';\nimport { GoogleOAuthProvider, useGoogleLogin } from '@react-oauth/google';\nimport LoadingScreen from './components/LoadingScreen';\nimport Profile from './components/Profile';\nimport TermsOfService from './components/TermsOfService';\nimport PrivacyPolicy from './components/PrivacyPolicy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\nconst tutorialText = `Welcome to Read Racer!\n\nIn this tutorial, you'll experience how our experiment works.\n\nYou'll be shown either a full passage or an AI-generated summary. After reading, you'll answer a short quiz to test how well you understood the content.\n\nThe goal of this experiment is to explore how using AI summaries affects reading performance—specifically, whether they improve reading speed and how much they may reduce comprehension.\n\nAt the end, you'll see two reading speed metrics:\n- Real Reading Speed (WPM): Words per Minute based on the actual number of words you read.\n- Effective Reading Speed (WPM): Words per Minute calculated using the full passage length, even if you read only the summary.\n\nBy comparing these values and your quiz score, we can study the trade-off between speed and understanding.\n\nLet’s get started!`;\nconst correctAnswers = {\n  q1: 'Read a passage and answer questions',\n  q2: 'How well you understand what you read',\n  q3Keywords: ['passage', 'summary']\n};\nfunction App() {\n  _s();\n  const [page, setPage] = useState('home');\n  const [mode, setMode] = useState(null);\n  const [user, setUser] = useState(null);\n  const [useSummary, setUseSummary] = useState(null);\n  const [experimentAnswers, setExperimentAnswers] = useState({});\n  const [experimentSummary, setExperimentSummary] = useState('');\n  const [experimentQuizAnswers, setExperimentQuizAnswers] = useState(null);\n  const [experimentText, setExperimentText] = useState('');\n  const [experimentQuestions, setExperimentQuestions] = useState([]);\n  const [experimentReadingTime, setExperimentReadingTime] = useState(null);\n  const [summaryText, setSummaryText] = useState('');\n  const [tutorialReadingTime, setTutorialReadingTime] = useState(null);\n  const [tutorialQuizAnswers, setTutorialQuizAnswers] = useState(null);\n  const [loadingMessage, setLoadingMessage] = useState(\"Generating your reading content...\");\n  useEffect(() => {\n    const storedUserStr = localStorage.getItem(\"user\");\n    if (!storedUserStr) {\n      console.log(\"No user found in localStorage\");\n      setUser(null);\n      return;\n    }\n    try {\n      const storedUser = JSON.parse(storedUserStr);\n      console.log(\"Loaded user from localStorage:\", storedUser);\n      setUser(storedUser);\n    } catch (e) {\n      console.error(\"Failed to parse stored user:\", e);\n      localStorage.removeItem(\"user\");\n      setUser(null);\n    }\n  }, []);\n  const login = useGoogleLogin({\n    onSuccess: async tokenResponse => {\n      try {\n        const res = await fetch('https://www.googleapis.com/oauth2/v3/userinfo', {\n          headers: {\n            Authorization: `Bearer ${tokenResponse.access_token}`\n          }\n        });\n        const userInfo = await res.json();\n        console.log(\"Google user info:\", userInfo);\n        const profileRes = await fetch(\"https://read-racer.azurewebsites.net/api/getUserProfile\", {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: userInfo.email\n          })\n        });\n        const profileData = await profileRes.json();\n        console.log(\"Backend profile data:\", profileData);\n        let uuid = profileData.userId || getOrCreateUserId();\n        localStorage.setItem(\"userId\", uuid);\n        const userWithProfile = {\n          ...userInfo,\n          uuid,\n          displayName: profileData.displayName || '',\n          leaderboardOptIn: profileData.leaderboardOptIn || false,\n          totalExperiments: profileData.totalExperiments || 0,\n          summaryExperiments: profileData.summaryExperiments || 0,\n          fullPassageExperiments: profileData.fullPassageExperiments || 0,\n          dateJoined: profileData.dateJoined || new Date().toISOString().slice(0, 10)\n        };\n        setUser(userWithProfile);\n        localStorage.setItem(\"user\", JSON.stringify(userWithProfile));\n        setPage('home');\n      } catch (error) {\n        alert('Failed to fetch user info');\n      }\n    },\n    onError: () => alert('Login Failed')\n  });\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    setUser(null);\n    if (page === \"profile\") setPage(\"home\");\n  };\n  const handleNavigate = targetPage => {\n    if (targetPage === \"profile\" && !user) {\n      alert(\"Please sign in to view your profile.\");\n      return;\n    }\n    setPage(targetPage);\n  };\n  function startTutorial() {\n    setMode('tutorial');\n    setPage('reading');\n  }\n  function finishTutorialReading(time) {\n    setTutorialReadingTime(time);\n    setPage('quiz');\n  }\n  function submitTutorialQuiz(answers) {\n    const result = checkAnswers(answers);\n    setTutorialQuizAnswers({\n      ...answers,\n      ...result\n    });\n    localStorage.setItem(\"tutorialCompleted\", \"true\");\n    setPage('finished');\n  }\n  async function startExperiment() {\n    if (!user) {\n      alert(\"Please sign in to participate in the experiment.\");\n      return;\n    }\n    const tutorialCompleted = localStorage.getItem(\"tutorialCompleted\");\n    if (tutorialCompleted !== \"true\") {\n      setMode('tutorial');\n      setPage('reading');\n      return;\n    }\n    await beginExperiment();\n  }\n  async function beginExperiment() {\n    setMode('experiment');\n    setLoadingMessage(\"Generating your reading content...\");\n    setPage('loading');\n    const assignedSummary = Math.random() < 0.5;\n    setUseSummary(assignedSummary);\n    try {\n      const response = await fetch('https://read-racer.azurewebsites.net/api/generateContent', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: \"any prompt or your own prompt\"\n        })\n      });\n      const data = await response.json();\n      setExperimentText(data.passage || data.generatedText || '');\n      setExperimentQuestions(data.questions || []);\n      setExperimentAnswers(data.answers || {});\n      if (assignedSummary) {\n        const summaryResponse = await fetch('https://read-racer.azurewebsites.net/api/summarizeText', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text: data.passage || data.generatedText\n          })\n        });\n        const summaryData = await summaryResponse.json();\n        setExperimentSummary(summaryData.summary || '');\n        setSummaryText(summaryData.summary || '');\n      }\n      setPage('reading');\n    } catch (error) {\n      alert('Failed to load experiment data. Please try again.');\n      setMode(null);\n      setPage('home');\n    }\n  }\n  async function submitExperimentQuiz(userAnswers) {\n    setLoadingMessage(\"Grading your answers...\");\n    setPage('loading');\n    try {\n      const res = await fetch('https://read-racer.azurewebsites.net/api/analyzeExperimentAnswers', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          answers: userAnswers,\n          questions: experimentQuestions,\n          passage: experimentText\n        })\n      });\n      const result = await res.json();\n      setExperimentQuizAnswers(result);\n      setPage('finished');\n    } catch (err) {\n      alert('Failed to submit quiz. Please try again.');\n      setPage('quiz');\n    }\n  }\n  function finishExperimentReading(time) {\n    setExperimentReadingTime(time);\n    setPage('quiz');\n  }\n  function checkAnswers(userAnswers) {\n    let score = 0;\n    const total = 3;\n    if ((userAnswers.q1 || '').toLowerCase() === correctAnswers.q1.toLowerCase()) score++;\n    if ((userAnswers.q2 || '').toLowerCase() === correctAnswers.q2.toLowerCase()) score++;\n    const answerText = (userAnswers.q3 || '').toLowerCase();\n    const containsKeyword = correctAnswers.q3Keywords.some(keyword => answerText.includes(keyword));\n    if (containsKeyword) score++;\n    return {\n      score,\n      total,\n      passed: score / total >= 0.8\n    };\n  }\n  function backToHome() {\n    setMode(null);\n    setPage('home');\n    setTutorialReadingTime(null);\n    setTutorialQuizAnswers(null);\n    setExperimentText('');\n    setExperimentQuestions([]);\n    setExperimentQuizAnswers(null);\n    setExperimentReadingTime(null);\n    setUseSummary(null);\n  }\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: clientId,\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      onNavigate: handleNavigate,\n      user: user,\n      onLogin: login,\n      onLogout: handleLogout,\n      activePage: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [page === 'home' && /*#__PURE__*/_jsxDEV(Home, {\n        onStartTutorial: startTutorial,\n        onStartExperiment: startExperiment,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), page === 'profile' && user && /*#__PURE__*/_jsxDEV(Profile, {\n        user: user,\n        setUser: setUser,\n        onLogout: handleLogout,\n        onBackHome: backToHome,\n        setPage: setPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this), mode === 'tutorial' && page === 'reading' && /*#__PURE__*/_jsxDEV(TutorialReading, {\n        text: tutorialText,\n        onFinish: finishTutorialReading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), mode === 'tutorial' && page === 'quiz' && /*#__PURE__*/_jsxDEV(TutorialQuiz, {\n        onSubmit: submitTutorialQuiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), mode === 'tutorial' && page === 'finished' && /*#__PURE__*/_jsxDEV(TutorialResult, {\n        quizAnswers: tutorialQuizAnswers,\n        readingTime: tutorialReadingTime,\n        onBackHome: backToHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), mode === 'experiment' && page === 'loading' && /*#__PURE__*/_jsxDEV(LoadingScreen, {\n        message: loadingMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 57\n      }, this), mode === 'experiment' && page === 'reading' && /*#__PURE__*/_jsxDEV(ExperimentReading, {\n        passageText: experimentText,\n        summaryText: summaryText,\n        onFinish: finishExperimentReading,\n        useSummary: useSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), mode === 'experiment' && page === 'quiz' && /*#__PURE__*/_jsxDEV(ExperimentQuiz, {\n        questions: experimentQuestions,\n        onSubmit: submitExperimentQuiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), mode === 'experiment' && page === 'finished' && /*#__PURE__*/_jsxDEV(ExperimentResult, {\n        quizAnswers: experimentQuizAnswers,\n        readingTime: experimentReadingTime,\n        passageText: experimentText,\n        summaryText: summaryText,\n        useSummary: useSummary,\n        onBackHome: backToHome,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), page === 'faq' && /*#__PURE__*/_jsxDEV(FAQ, {\n        onBackHome: backToHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 28\n      }, this), page === 'results' && /*#__PURE__*/_jsxDEV(Results, {\n        user: user,\n        onBackHome: backToHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 32\n      }, this), page === 'terms' && /*#__PURE__*/_jsxDEV(TermsOfService, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 30\n      }, this), page === 'privacy' && /*#__PURE__*/_jsxDEV(PrivacyPolicy, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ydWydhruqjlSSWX9YBBh9X6/ak8=\", false, function () {\n  return [useGoogleLogin];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Home","TutorialReading","TutorialQuiz","TutorialResult","ExperimentReading","ExperimentQuiz","ExperimentResult","getOrCreateUserId","FAQ","Results","NavBar","GoogleOAuthProvider","useGoogleLogin","LoadingScreen","Profile","TermsOfService","PrivacyPolicy","jsxDEV","_jsxDEV","clientId","process","env","REACT_APP_GOOGLE_CLIENT_ID","tutorialText","correctAnswers","q1","q2","q3Keywords","App","_s","page","setPage","mode","setMode","user","setUser","useSummary","setUseSummary","experimentAnswers","setExperimentAnswers","experimentSummary","setExperimentSummary","experimentQuizAnswers","setExperimentQuizAnswers","experimentText","setExperimentText","experimentQuestions","setExperimentQuestions","experimentReadingTime","setExperimentReadingTime","summaryText","setSummaryText","tutorialReadingTime","setTutorialReadingTime","tutorialQuizAnswers","setTutorialQuizAnswers","loadingMessage","setLoadingMessage","storedUserStr","localStorage","getItem","console","log","storedUser","JSON","parse","e","error","removeItem","login","onSuccess","tokenResponse","res","fetch","headers","Authorization","access_token","userInfo","json","profileRes","method","body","stringify","email","profileData","uuid","userId","setItem","userWithProfile","displayName","leaderboardOptIn","totalExperiments","summaryExperiments","fullPassageExperiments","dateJoined","Date","toISOString","slice","alert","onError","handleLogout","handleNavigate","targetPage","startTutorial","finishTutorialReading","time","submitTutorialQuiz","answers","result","checkAnswers","startExperiment","tutorialCompleted","beginExperiment","assignedSummary","Math","random","response","prompt","data","passage","generatedText","questions","summaryResponse","text","summaryData","summary","submitExperimentQuiz","userAnswers","err","finishExperimentReading","score","total","toLowerCase","answerText","q3","containsKeyword","some","keyword","includes","passed","backToHome","children","onNavigate","onLogin","onLogout","activePage","fileName","_jsxFileName","lineNumber","columnNumber","onStartTutorial","onStartExperiment","onBackHome","onFinish","onSubmit","quizAnswers","readingTime","message","passageText","_c","$RefreshReg$"],"sources":["C:/Users/tsuna/reading-experiment/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Home from './components/Home';\nimport TutorialReading from './tutorial/TutorialReading';\nimport TutorialQuiz from './tutorial/TutorialQuiz';\nimport TutorialResult from './tutorial/TutorialResult';\nimport ExperimentReading from './experiment/ExperimentReading';\nimport ExperimentQuiz from './experiment/ExperimentQuiz';\nimport ExperimentResult from './experiment/ExperimentResult';\nimport { getOrCreateUserId } from './utils/user';\nimport FAQ from './components/FAQ';\nimport Results from './components/Results';\nimport NavBar from './components/NavBar';\nimport { GoogleOAuthProvider, useGoogleLogin } from '@react-oauth/google';\nimport LoadingScreen from './components/LoadingScreen';\nimport Profile from './components/Profile';\nimport TermsOfService from './components/TermsOfService';\nimport PrivacyPolicy from './components/PrivacyPolicy';\n\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\n\nconst tutorialText = `Welcome to Read Racer!\n\nIn this tutorial, you'll experience how our experiment works.\n\nYou'll be shown either a full passage or an AI-generated summary. After reading, you'll answer a short quiz to test how well you understood the content.\n\nThe goal of this experiment is to explore how using AI summaries affects reading performance—specifically, whether they improve reading speed and how much they may reduce comprehension.\n\nAt the end, you'll see two reading speed metrics:\n- Real Reading Speed (WPM): Words per Minute based on the actual number of words you read.\n- Effective Reading Speed (WPM): Words per Minute calculated using the full passage length, even if you read only the summary.\n\nBy comparing these values and your quiz score, we can study the trade-off between speed and understanding.\n\nLet’s get started!`;\n\nconst correctAnswers = {\n  q1: 'Read a passage and answer questions',\n  q2: 'How well you understand what you read',\n  q3Keywords: ['passage', 'summary'],\n};\n\nfunction App() {\n  const [page, setPage] = useState('home');\n  const [mode, setMode] = useState(null);\n  const [user, setUser] = useState(null);\n  const [useSummary, setUseSummary] = useState(null);\n  const [experimentAnswers, setExperimentAnswers] = useState({});\n  const [experimentSummary, setExperimentSummary] = useState('');\n  const [experimentQuizAnswers, setExperimentQuizAnswers] = useState(null);\n  const [experimentText, setExperimentText] = useState('');\n  const [experimentQuestions, setExperimentQuestions] = useState([]);\n  const [experimentReadingTime, setExperimentReadingTime] = useState(null);\n  const [summaryText, setSummaryText] = useState('');\n  const [tutorialReadingTime, setTutorialReadingTime] = useState(null);\n  const [tutorialQuizAnswers, setTutorialQuizAnswers] = useState(null);\n  const [loadingMessage, setLoadingMessage] = useState(\"Generating your reading content...\");\n\nuseEffect(() => {\n  const storedUserStr = localStorage.getItem(\"user\");\n  if (!storedUserStr) {\n    console.log(\"No user found in localStorage\");\n    setUser(null);\n    return;\n  }\n  try {\n    const storedUser = JSON.parse(storedUserStr);\n    console.log(\"Loaded user from localStorage:\", storedUser);\n    setUser(storedUser);\n  } catch (e) {\n    console.error(\"Failed to parse stored user:\", e);\n    localStorage.removeItem(\"user\");\n    setUser(null);\n  }\n}, []);\n\n\n  const login = useGoogleLogin({\n    onSuccess: async (tokenResponse) => {\ntry {\n    const res = await fetch('https://www.googleapis.com/oauth2/v3/userinfo', {\n      headers: { Authorization: `Bearer ${tokenResponse.access_token}` },\n    });\n    const userInfo = await res.json();\n    console.log(\"Google user info:\", userInfo);\n\n    const profileRes = await fetch(\"https://read-racer.azurewebsites.net/api/getUserProfile\", {\n      method: \"POST\",\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email: userInfo.email }),\n    });\n\n    const profileData = await profileRes.json();\n    console.log(\"Backend profile data:\", profileData);\n\n\n        let uuid = profileData.userId || getOrCreateUserId();\n        localStorage.setItem(\"userId\", uuid);\n\n        const userWithProfile = {\n          ...userInfo,\n          uuid,\n          displayName: profileData.displayName || '',\n          leaderboardOptIn: profileData.leaderboardOptIn || false,\n          totalExperiments: profileData.totalExperiments || 0,\n          summaryExperiments: profileData.summaryExperiments || 0,\n          fullPassageExperiments: profileData.fullPassageExperiments || 0,\n          dateJoined: profileData.dateJoined || new Date().toISOString().slice(0, 10),\n        };\n\n        setUser(userWithProfile);\n        localStorage.setItem(\"user\", JSON.stringify(userWithProfile));\n        setPage('home');\n      } catch (error) {\n        alert('Failed to fetch user info');\n      }\n    },\n    onError: () => alert('Login Failed'),\n  });\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    setUser(null);\n    if (page === \"profile\") setPage(\"home\");\n  };\n\n  const handleNavigate = (targetPage) => {\n    if (targetPage === \"profile\" && !user) {\n      alert(\"Please sign in to view your profile.\");\n      return;\n    }\n    setPage(targetPage);\n  };\n\n  function startTutorial() {\n    setMode('tutorial');\n    setPage('reading');\n  }\n\n  function finishTutorialReading(time) {\n    setTutorialReadingTime(time);\n    setPage('quiz');\n  }\n\n  function submitTutorialQuiz(answers) {\n    const result = checkAnswers(answers);\n    setTutorialQuizAnswers({ ...answers, ...result });\n    localStorage.setItem(\"tutorialCompleted\", \"true\");\n    setPage('finished');\n  }\n\n  async function startExperiment() {\n    if (!user) {\n      alert(\"Please sign in to participate in the experiment.\");\n      return;\n    }\n\n    const tutorialCompleted = localStorage.getItem(\"tutorialCompleted\");\n    if (tutorialCompleted !== \"true\") {\n      setMode('tutorial');\n      setPage('reading');\n      return;\n    }\n\n    await beginExperiment();\n  }\n\n  async function beginExperiment() {\n    setMode('experiment');\n    setLoadingMessage(\"Generating your reading content...\");\n    setPage('loading');\n\n    const assignedSummary = Math.random() < 0.5;\n    setUseSummary(assignedSummary);\n\n    try {\n      const response = await fetch('https://read-racer.azurewebsites.net/api/generateContent', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ prompt: \"any prompt or your own prompt\" }),\n      });\n      const data = await response.json();\n\n      setExperimentText(data.passage || data.generatedText || '');\n      setExperimentQuestions(data.questions || []);\n      setExperimentAnswers(data.answers || {});\n\n      if (assignedSummary) {\n        const summaryResponse = await fetch('https://read-racer.azurewebsites.net/api/summarizeText', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ text: data.passage || data.generatedText }),\n        });\n        const summaryData = await summaryResponse.json();\n        setExperimentSummary(summaryData.summary || '');\n        setSummaryText(summaryData.summary || '');\n      }\n\n      setPage('reading');\n    } catch (error) {\n      alert('Failed to load experiment data. Please try again.');\n      setMode(null);\n      setPage('home');\n    }\n  }\n\n  async function submitExperimentQuiz(userAnswers) {\n    setLoadingMessage(\"Grading your answers...\");\n    setPage('loading');\n    try {\n      const res = await fetch('https://read-racer.azurewebsites.net/api/analyzeExperimentAnswers', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          answers: userAnswers,\n          questions: experimentQuestions,\n          passage: experimentText\n        }),\n      });\n      const result = await res.json();\n      setExperimentQuizAnswers(result);\n      setPage('finished');\n    } catch (err) {\n      alert('Failed to submit quiz. Please try again.');\n      setPage('quiz');\n    }\n  }\n\n  function finishExperimentReading(time) {\n    setExperimentReadingTime(time);\n    setPage('quiz');\n  }\n\n  function checkAnswers(userAnswers) {\n    let score = 0;\n    const total = 3;\n    if ((userAnswers.q1 || '').toLowerCase() === correctAnswers.q1.toLowerCase()) score++;\n    if ((userAnswers.q2 || '').toLowerCase() === correctAnswers.q2.toLowerCase()) score++;\n    const answerText = (userAnswers.q3 || '').toLowerCase();\n    const containsKeyword = correctAnswers.q3Keywords.some((keyword) =>\n    answerText.includes(keyword)\n);\n\nif (containsKeyword) score++;\n    return { score, total, passed: score / total >= 0.8 };\n  }\n\n  function backToHome() {\n    setMode(null);\n    setPage('home');\n    setTutorialReadingTime(null);\n    setTutorialQuizAnswers(null);\n    setExperimentText('');\n    setExperimentQuestions([]);\n    setExperimentQuizAnswers(null);\n    setExperimentReadingTime(null);\n    setUseSummary(null);\n  }\n\n  return (\n    <GoogleOAuthProvider clientId={clientId}>\n      <NavBar onNavigate={handleNavigate} user={user} onLogin={login} onLogout={handleLogout} activePage={page} />\n      <main>\n        {page === 'home' && (\n          <Home onStartTutorial={startTutorial} onStartExperiment={startExperiment} user={user} />\n        )}\n        {page === 'profile' && user && (\n          <Profile user={user} setUser={setUser} onLogout={handleLogout} onBackHome={backToHome} setPage={setPage} />\n        )}\n        {mode === 'tutorial' && page === 'reading' && (\n          <TutorialReading text={tutorialText} onFinish={finishTutorialReading} />\n        )}\n        {mode === 'tutorial' && page === 'quiz' && (\n          <TutorialQuiz onSubmit={submitTutorialQuiz} />\n        )}\n        {mode === 'tutorial' && page === 'finished' && (\n          <TutorialResult quizAnswers={tutorialQuizAnswers} readingTime={tutorialReadingTime} onBackHome={backToHome} />\n        )}\n        {mode === 'experiment' && page === 'loading' && <LoadingScreen message={loadingMessage} />}\n        {mode === 'experiment' && page === 'reading' && (\n          <ExperimentReading passageText={experimentText} summaryText={summaryText} onFinish={finishExperimentReading} useSummary={useSummary} />\n        )}\n        {mode === 'experiment' && page === 'quiz' && (\n          <ExperimentQuiz questions={experimentQuestions} onSubmit={submitExperimentQuiz} />\n        )}\n        {mode === 'experiment' && page === 'finished' && (\n          <ExperimentResult quizAnswers={experimentQuizAnswers} readingTime={experimentReadingTime} passageText={experimentText} summaryText={summaryText} useSummary={useSummary} onBackHome={backToHome} user={user} />\n        )}\n        {page === 'faq' && <FAQ onBackHome={backToHome} />}\n        {page === 'results' && <Results user={user} onBackHome={backToHome} />}\n        {page === 'terms' && <TermsOfService />}\n        {page === 'privacy' && <PrivacyPolicy />}\n      </main>\n    </GoogleOAuthProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}