{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsuna\\\\reading-experiment\\\\src\\\\components\\\\PersonalResults.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\n\n// Custom Tooltip to show key info only\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload\n}) => {\n  if (active && payload && payload.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-2 rounded shadow border text-sm\",\n      children: payload.map((entry, index) => {\n        var _data$value;\n        const data = entry.payload;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 border-b last:border-b-0 pb-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Reading Speed:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 18\n            }, this), \" \", Math.round((_data$value = data.value) !== null && _data$value !== void 0 ? _data$value : data.realWPM), \" WPM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Accuracy:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 18\n            }, this), \" \", (data.accuracy * 100 || 0).toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), \"points\" in data && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Points:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 20\n            }, this), \" \", data.points.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_c = CustomTooltip;\nconst PersonalResults = ({\n  userId\n}) => {\n  _s();\n  const [summaryAttempts, setSummaryAttempts] = useState([]);\n  const [fullPassageAttempts, setFullPassageAttempts] = useState([]);\n  const [globalAverages, setGlobalAverages] = useState({\n    summary: null,\n    full: null\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [mode, setMode] = useState(\"effective\");\n  useEffect(() => {\n    if (!userId) return;\n    async function fetchData() {\n      setLoading(true);\n      setError(null);\n      try {\n        const res = await fetch(`https://read-racer.azurewebsites.net/api/getUserResults?userId=${encodeURIComponent(userId)}`);\n        if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);\n        const data = await res.json();\n        const results = Array.isArray(data) ? data : data.results || [];\n        const summary = results.filter(r => r.useSummary === true || r.useSummary === \"true\" || r.useSummary === \"True\");\n        const full = results.filter(r => !(r.useSummary === true || r.useSummary === \"true\" || r.useSummary === \"True\"));\n        setSummaryAttempts(summary);\n        setFullPassageAttempts(full);\n        setGlobalAverages({\n          summary: data.summaryAvg || null,\n          full: data.passageAvg || null\n        });\n      } catch (err) {\n        console.error(\"Failed to load user results:\", err);\n        setError(err.message || \"Failed to load user results\");\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, [userId]);\n  const renderCombinedChart = () => {\n    var _ref6, _ref7, _globalAverages$summa, _globalAverages$summa2, _globalAverages$summa3, _globalAverages$summa4, _ref8, _ref9, _globalAverages$summa5, _globalAverages$summa6, _globalAverages$summa7, _globalAverages$summa8, _ref0, _globalAverages$full$, _globalAverages$full, _globalAverages$full2, _globalAverages$summa9, _globalAverages$full$2;\n    if (!summaryAttempts.length && !fullPassageAttempts.length || !globalAverages) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No attempts yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 14\n      }, this);\n    }\n    const summaryData = summaryAttempts.map((a, index) => {\n      var _ref, _ref2, _a$effectiveWPM, _ref3, _ref4, _a$realWPM, _a$points;\n      return {\n        id: index,\n        value: mode === \"effective\" ? (_ref = (_ref2 = (_a$effectiveWPM = a.effectiveWPM) !== null && _a$effectiveWPM !== void 0 ? _a$effectiveWPM : a.realWPM) !== null && _ref2 !== void 0 ? _ref2 : a.readingSpeed) !== null && _ref !== void 0 ? _ref : 0 : (_ref3 = (_ref4 = (_a$realWPM = a.realWPM) !== null && _a$realWPM !== void 0 ? _a$realWPM : a.effectiveWPM) !== null && _ref4 !== void 0 ? _ref4 : a.readingSpeed) !== null && _ref3 !== void 0 ? _ref3 : 0,\n        accuracy: a.total > 0 ? a.score / a.total : 0,\n        points: (_a$points = a.points) !== null && _a$points !== void 0 ? _a$points : null\n      };\n    });\n    const passageData = fullPassageAttempts.map((a, index) => {\n      var _ref5, _a$realWPM2, _a$points2;\n      return {\n        id: index + 10000,\n        value: (_ref5 = (_a$realWPM2 = a.realWPM) !== null && _a$realWPM2 !== void 0 ? _a$realWPM2 : a.readingSpeed) !== null && _ref5 !== void 0 ? _ref5 : 0,\n        accuracy: a.total > 0 ? a.score / a.total : 0,\n        points: (_a$points2 = a.points) !== null && _a$points2 !== void 0 ? _a$points2 : null\n      };\n    });\n    const summaryAvgValue = mode === \"effective\" ? (_ref6 = (_ref7 = (_globalAverages$summa = (_globalAverages$summa2 = globalAverages.summary) === null || _globalAverages$summa2 === void 0 ? void 0 : _globalAverages$summa2.effectiveWPM) !== null && _globalAverages$summa !== void 0 ? _globalAverages$summa : (_globalAverages$summa3 = globalAverages.summary) === null || _globalAverages$summa3 === void 0 ? void 0 : _globalAverages$summa3.realWPM) !== null && _ref7 !== void 0 ? _ref7 : (_globalAverages$summa4 = globalAverages.summary) === null || _globalAverages$summa4 === void 0 ? void 0 : _globalAverages$summa4.readingSpeed) !== null && _ref6 !== void 0 ? _ref6 : 0 : (_ref8 = (_ref9 = (_globalAverages$summa5 = (_globalAverages$summa6 = globalAverages.summary) === null || _globalAverages$summa6 === void 0 ? void 0 : _globalAverages$summa6.realWPM) !== null && _globalAverages$summa5 !== void 0 ? _globalAverages$summa5 : (_globalAverages$summa7 = globalAverages.summary) === null || _globalAverages$summa7 === void 0 ? void 0 : _globalAverages$summa7.effectiveWPM) !== null && _ref9 !== void 0 ? _ref9 : (_globalAverages$summa8 = globalAverages.summary) === null || _globalAverages$summa8 === void 0 ? void 0 : _globalAverages$summa8.readingSpeed) !== null && _ref8 !== void 0 ? _ref8 : 0;\n    const passageAvgValue = (_ref0 = (_globalAverages$full$ = (_globalAverages$full = globalAverages.full) === null || _globalAverages$full === void 0 ? void 0 : _globalAverages$full.realWPM) !== null && _globalAverages$full$ !== void 0 ? _globalAverages$full$ : (_globalAverages$full2 = globalAverages.full) === null || _globalAverages$full2 === void 0 ? void 0 : _globalAverages$full2.readingSpeed) !== null && _ref0 !== void 0 ? _ref0 : 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-2 text-gray-700\",\n        children: mode === \"effective\" ? \"Effective WPM (AI Summaries) vs Reading Speed (Full Passage)\" : \"Real WPM (AI Summaries) vs Reading Speed (Full Passage)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"mr-2 font-semibold\",\n          children: \"Select Graph Mode:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: mode,\n          onChange: e => setMode(e.target.value),\n          className: \"border rounded p-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"effective\",\n            children: \"Effective WPM (AI Summaries)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"real\",\n            children: \"Real WPM (AI Summaries)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 350,\n        children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n          margin: {\n            top: 10,\n            right: 20,\n            bottom: 20,\n            left: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            type: \"number\",\n            dataKey: \"value\",\n            name: \"Reading Speed (WPM)\",\n            unit: \" WPM\",\n            domain: [\"auto\", \"auto\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            type: \"number\",\n            dataKey: \"accuracy\",\n            name: \"Accuracy\",\n            domain: [0, 1],\n            tickFormatter: tick => `${(tick * 100).toFixed(0)}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 31\n            }, this),\n            cursor: {\n              strokeDasharray: \"3 3\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            formatter: value => {\n              if (value === \"AI Summaries\") return \"AI Summaries (Attempts)\";\n              if (value === \"Full Passage\") return \"Full Passage (Attempts)\";\n              if (value === \"Avg AI Summaries\") return \"Average AI Summaries\";\n              if (value === \"Avg Full Passage\") return \"Average Full Passage\";\n              return value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"AI Summaries\",\n            data: summaryData,\n            fill: \"#3b82f6\",\n            shape: \"circle\",\n            dataKey: {\n              x: \"value\",\n              y: \"accuracy\"\n            }\n          }, \"summary\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Full Passage\",\n            data: passageData,\n            fill: \"#10b981\",\n            shape: \"circle\",\n            dataKey: {\n              x: \"value\",\n              y: \"accuracy\"\n            }\n          }, \"passage\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), globalAverages.summary && /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Avg AI Summaries\",\n            data: [{\n              value: summaryAvgValue,\n              accuracy: (_globalAverages$summa9 = globalAverages.summary.accuracy) !== null && _globalAverages$summa9 !== void 0 ? _globalAverages$summa9 : 0\n            }],\n            fill: \"#ef4444\",\n            shape: \"star\",\n            dataKey: {\n              x: \"value\",\n              y: \"accuracy\"\n            }\n          }, \"avg-summary\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), globalAverages.full && /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Avg Full Passage\",\n            data: [{\n              value: passageAvgValue,\n              accuracy: (_globalAverages$full$2 = globalAverages.full.accuracy) !== null && _globalAverages$full$2 !== void 0 ? _globalAverages$full$2 : 0\n            }],\n            fill: \"#fbbf24\",\n            shape: \"star\",\n            dataKey: {\n              x: \"value\",\n              y: \"accuracy\"\n            }\n          }, \"avg-passage\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  };\n  if (!userId) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Please log in to see your personal results.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 23\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading your results...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-red-600 font-semibold\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-gray-800\",\n      children: \"Your Personal Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), renderCombinedChart()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(PersonalResults, \"M9b9fzaH7KRI8j6+AOdnQdpuyEY=\");\n_c2 = PersonalResults;\nexport default PersonalResults;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"PersonalResults\");","map":{"version":3,"names":["React","useEffect","useState","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","CustomTooltip","active","payload","length","className","children","map","entry","index","_data$value","data","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","value","realWPM","accuracy","toFixed","points","_c","PersonalResults","userId","_s","summaryAttempts","setSummaryAttempts","fullPassageAttempts","setFullPassageAttempts","globalAverages","setGlobalAverages","summary","full","loading","setLoading","error","setError","mode","setMode","fetchData","res","fetch","encodeURIComponent","ok","Error","status","json","results","Array","isArray","filter","r","useSummary","summaryAvg","passageAvg","err","console","message","renderCombinedChart","_ref6","_ref7","_globalAverages$summa","_globalAverages$summa2","_globalAverages$summa3","_globalAverages$summa4","_ref8","_ref9","_globalAverages$summa5","_globalAverages$summa6","_globalAverages$summa7","_globalAverages$summa8","_ref0","_globalAverages$full$","_globalAverages$full","_globalAverages$full2","_globalAverages$summa9","_globalAverages$full$2","summaryData","a","_ref","_ref2","_a$effectiveWPM","_ref3","_ref4","_a$realWPM","_a$points","id","effectiveWPM","readingSpeed","total","score","passageData","_ref5","_a$realWPM2","_a$points2","summaryAvgValue","passageAvgValue","onChange","e","target","width","height","margin","top","right","bottom","left","type","dataKey","name","unit","domain","tickFormatter","tick","content","cursor","strokeDasharray","formatter","fill","shape","x","y","_c2","$RefreshReg$"],"sources":["C:/Users/tsuna/reading-experiment/src/components/PersonalResults.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\n// Custom Tooltip to show key info only\r\nconst CustomTooltip = ({ active, payload }) => {\r\n  if (active && payload && payload.length > 0) {\r\n    return (\r\n      <div className=\"bg-white p-2 rounded shadow border text-sm\">\r\n        {payload.map((entry, index) => {\r\n          const data = entry.payload;\r\n          return (\r\n            <div key={index} className=\"mb-2 border-b last:border-b-0 pb-1\">\r\n              <p><strong>Reading Speed:</strong> {Math.round(data.value ?? data.realWPM)} WPM</p>\r\n              <p><strong>Accuracy:</strong> {(data.accuracy * 100 || 0).toFixed(1)}%</p>\r\n              {\"points\" in data && (\r\n                <p><strong>Points:</strong> {data.points.toFixed(2)}</p>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst PersonalResults = ({ userId }) => {\r\n  const [summaryAttempts, setSummaryAttempts] = useState([]);\r\n  const [fullPassageAttempts, setFullPassageAttempts] = useState([]);\r\n  const [globalAverages, setGlobalAverages] = useState({ summary: null, full: null });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [mode, setMode] = useState(\"effective\");\r\n\r\n  useEffect(() => {\r\n    if (!userId) return;\r\n\r\n    async function fetchData() {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const res = await fetch(\r\n          `https://read-racer.azurewebsites.net/api/getUserResults?userId=${encodeURIComponent(userId)}`\r\n        );\r\n        if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);\r\n        const data = await res.json();\r\n\r\n        const results = Array.isArray(data) ? data : data.results || [];\r\n        const summary = results.filter(\r\n          (r) => r.useSummary === true || r.useSummary === \"true\" || r.useSummary === \"True\"\r\n        );\r\n        const full = results.filter(\r\n          (r) => !(r.useSummary === true || r.useSummary === \"true\" || r.useSummary === \"True\")\r\n        );\r\n\r\n        setSummaryAttempts(summary);\r\n        setFullPassageAttempts(full);\r\n\r\n        setGlobalAverages({\r\n          summary: data.summaryAvg || null,\r\n          full: data.passageAvg || null,\r\n        });\r\n      } catch (err) {\r\n        console.error(\"Failed to load user results:\", err);\r\n        setError(err.message || \"Failed to load user results\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, [userId]);\r\n\r\n  const renderCombinedChart = () => {\r\n    if ((!summaryAttempts.length && !fullPassageAttempts.length) || !globalAverages) {\r\n      return <p>No attempts yet.</p>;\r\n    }\r\n\r\n    const summaryData = summaryAttempts.map((a, index) => ({\r\n      id: index,\r\n      value:\r\n        mode === \"effective\"\r\n          ? a.effectiveWPM ?? a.realWPM ?? a.readingSpeed ?? 0\r\n          : a.realWPM ?? a.effectiveWPM ?? a.readingSpeed ?? 0,\r\n      accuracy: a.total > 0 ? a.score / a.total : 0,\r\n      points: a.points ?? null,\r\n    }));\r\n\r\n    const passageData = fullPassageAttempts.map((a, index) => ({\r\n      id: index + 10000,\r\n      value: a.realWPM ?? a.readingSpeed ?? 0,\r\n      accuracy: a.total > 0 ? a.score / a.total : 0,\r\n      points: a.points ?? null,\r\n    }));\r\n\r\n    const summaryAvgValue =\r\n      mode === \"effective\"\r\n        ? globalAverages.summary?.effectiveWPM ?? globalAverages.summary?.realWPM ?? globalAverages.summary?.readingSpeed ?? 0\r\n        : globalAverages.summary?.realWPM ?? globalAverages.summary?.effectiveWPM ?? globalAverages.summary?.readingSpeed ?? 0;\r\n\r\n    const passageAvgValue =\r\n      globalAverages.full?.realWPM ?? globalAverages.full?.readingSpeed ?? 0;\r\n\r\n    return (\r\n      <div className=\"mb-8\">\r\n        <h3 className=\"text-xl font-semibold mb-2 text-gray-700\">\r\n          {mode === \"effective\"\r\n            ? \"Effective WPM (AI Summaries) vs Reading Speed (Full Passage)\"\r\n            : \"Real WPM (AI Summaries) vs Reading Speed (Full Passage)\"}\r\n        </h3>\r\n\r\n        <div className=\"mb-4\">\r\n          <label className=\"mr-2 font-semibold\">Select Graph Mode:</label>\r\n          <select\r\n            value={mode}\r\n            onChange={(e) => setMode(e.target.value)}\r\n            className=\"border rounded p-1\"\r\n          >\r\n            <option value=\"effective\">Effective WPM (AI Summaries)</option>\r\n            <option value=\"real\">Real WPM (AI Summaries)</option>\r\n          </select>\r\n        </div>\r\n\r\n        <ResponsiveContainer width=\"100%\" height={350}>\r\n          <ScatterChart margin={{ top: 10, right: 20, bottom: 20, left: 0 }}>\r\n            <CartesianGrid />\r\n            <XAxis\r\n              type=\"number\"\r\n              dataKey=\"value\"\r\n              name=\"Reading Speed (WPM)\"\r\n              unit=\" WPM\"\r\n              domain={[\"auto\", \"auto\"]}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              dataKey=\"accuracy\"\r\n              name=\"Accuracy\"\r\n              domain={[0, 1]}\r\n              tickFormatter={(tick) => `${(tick * 100).toFixed(0)}%`}\r\n            />\r\n            <Tooltip content={<CustomTooltip />} cursor={{ strokeDasharray: \"3 3\" }} />\r\n            <Legend\r\n              formatter={(value) => {\r\n                if (value === \"AI Summaries\") return \"AI Summaries (Attempts)\";\r\n                if (value === \"Full Passage\") return \"Full Passage (Attempts)\";\r\n                if (value === \"Avg AI Summaries\") return \"Average AI Summaries\";\r\n                if (value === \"Avg Full Passage\") return \"Average Full Passage\";\r\n                return value;\r\n              }}\r\n            />\r\n            <Scatter\r\n              name=\"AI Summaries\"\r\n              data={summaryData}\r\n              fill=\"#3b82f6\"\r\n              shape=\"circle\"\r\n              key=\"summary\"\r\n              dataKey={{ x: \"value\", y: \"accuracy\" }}\r\n            />\r\n            <Scatter\r\n              name=\"Full Passage\"\r\n              data={passageData}\r\n              fill=\"#10b981\"\r\n              shape=\"circle\"\r\n              key=\"passage\"\r\n              dataKey={{ x: \"value\", y: \"accuracy\" }}\r\n            />\r\n            {globalAverages.summary && (\r\n              <Scatter\r\n                name=\"Avg AI Summaries\"\r\n                data={[{ value: summaryAvgValue, accuracy: globalAverages.summary.accuracy ?? 0 }]}\r\n                fill=\"#ef4444\"\r\n                shape=\"star\"\r\n                key=\"avg-summary\"\r\n                dataKey={{ x: \"value\", y: \"accuracy\" }}\r\n              />\r\n            )}\r\n            {globalAverages.full && (\r\n              <Scatter\r\n                name=\"Avg Full Passage\"\r\n                data={[{ value: passageAvgValue, accuracy: globalAverages.full.accuracy ?? 0 }]}\r\n                fill=\"#fbbf24\"\r\n                shape=\"star\"\r\n                key=\"avg-passage\"\r\n                dataKey={{ x: \"value\", y: \"accuracy\" }}\r\n              />\r\n            )}\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (!userId) return <p>Please log in to see your personal results.</p>;\r\n  if (loading) return <p>Loading your results...</p>;\r\n  if (error) return <p className=\"text-red-600 font-semibold\">Error: {error}</p>;\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-4xl mx-auto\">\r\n      <h2 className=\"text-3xl font-bold mb-6 text-gray-800\">Your Personal Results</h2>\r\n      {renderCombinedChart()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalResults;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}