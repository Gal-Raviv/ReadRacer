{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsuna\\\\reading-experiment\\\\src\\\\components\\\\GlobalResults.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GlobalStats = () => {\n  _s();\n  var _data$summaryAvg$real, _data$summaryAvg$effe, _data$passageAvg$real;\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('https://read-racer.azurewebsites.net/api/getGlobalStats').then(res => res.json()).then(json => {\n      const filter = attempts => attempts.filter(a => (a.realWPM || a.readingSpeed) > 30 && (a.realWPM || a.readingSpeed) < 2000 && a.accuracy >= 0 && a.accuracy <= 1);\n      setData({\n        summary: filter(json.summaryAttempts || []),\n        passage: filter(json.passageAttempts || []),\n        summaryAvg: json.summaryAvg,\n        passageAvg: json.passageAvg,\n        leaderboard: json.leaderboard || []\n      });\n      setLoading(false);\n    }).catch(err => {\n      console.error('Failed to fetch global stats:', err);\n      setError('Failed to load data');\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-6\",\n    children: \"Loading global stats...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-6 text-red-500\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold text-center\",\n      children: \"Global Experiment Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-2 text-blue-700\",\n        children: \"AI Summary Group \\u2014 Real vs Effective Reading Speed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            type: \"number\",\n            dataKey: \"value\",\n            name: \"Speed\",\n            unit: \" WPM\",\n            domain: ['auto', 'auto']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            type: \"number\",\n            dataKey: \"accuracy\",\n            name: \"Accuracy\",\n            domain: [0, 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            cursor: {\n              strokeDasharray: '3 3'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Real WPM\",\n            data: data.summary.map(a => {\n              var _a$realWPM;\n              return {\n                value: (_a$realWPM = a.realWPM) !== null && _a$realWPM !== void 0 ? _a$realWPM : a.readingSpeed,\n                accuracy: a.accuracy\n              };\n            }),\n            fill: \"#3b82f6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Effective WPM\",\n            data: data.summary.map(a => ({\n              value: a.effectiveWPM,\n              accuracy: a.accuracy\n            })),\n            fill: \"#10b981\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), data.summaryAvg && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Scatter, {\n              name: \"Avg Real WPM\",\n              data: [{\n                value: (_data$summaryAvg$real = data.summaryAvg.realWPM) !== null && _data$summaryAvg$real !== void 0 ? _data$summaryAvg$real : data.summaryAvg.readingSpeed,\n                accuracy: data.summaryAvg.accuracy\n              }],\n              fill: \"#ef4444\",\n              shape: \"star\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n              name: \"Avg Effective WPM\",\n              data: [{\n                value: (_data$summaryAvg$effe = data.summaryAvg.effectiveWPM) !== null && _data$summaryAvg$effe !== void 0 ? _data$summaryAvg$effe : data.summaryAvg.readingSpeed,\n                accuracy: data.summaryAvg.accuracy\n              }],\n              fill: \"#fbbf24\",\n              shape: \"star\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-2 text-green-700\",\n        children: \"Full Passage Group \\u2014 Reading Speed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            type: \"number\",\n            dataKey: \"value\",\n            name: \"Speed\",\n            unit: \" WPM\",\n            domain: ['auto', 'auto']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            type: \"number\",\n            dataKey: \"accuracy\",\n            name: \"Accuracy\",\n            domain: [0, 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            cursor: {\n              strokeDasharray: '3 3'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Reading Speed\",\n            data: data.passage.map(a => {\n              var _a$realWPM2;\n              return {\n                value: (_a$realWPM2 = a.realWPM) !== null && _a$realWPM2 !== void 0 ? _a$realWPM2 : a.readingSpeed,\n                accuracy: a.accuracy\n              };\n            }),\n            fill: \"#6366f1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), data.passageAvg && /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Avg Reading Speed\",\n            data: [{\n              value: (_data$passageAvg$real = data.passageAvg.realWPM) !== null && _data$passageAvg$real !== void 0 ? _data$passageAvg$real : data.passageAvg.readingSpeed,\n              accuracy: data.passageAvg.accuracy\n            }],\n            fill: \"#facc15\",\n            shape: \"star\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-3\",\n        children: \"Leaderboard (Top 10 by Points)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full border rounded-xl overflow-hidden text-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-100\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Speed (WPM)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Accuracy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.leaderboard.map((entry, index) => {\n            var _ref, _entry$readingSpeed;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"border-t\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4 font-bold\",\n                children: [\"#\", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4 font-mono text-sm\",\n                children: entry.userName || 'Anonymous'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4\",\n                children: entry.points.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4\",\n                children: Math.round((_ref = (_entry$readingSpeed = entry.readingSpeed) !== null && _entry$readingSpeed !== void 0 ? _entry$readingSpeed : entry.realWPM) !== null && _ref !== void 0 ? _ref : 0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4\",\n                children: [(entry.accuracy * 100).toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(GlobalStats, \"RiL7vLwmC7ZWXKL/bXt2EIBjBYk=\");\n_c = GlobalStats;\nexport default GlobalStats;\nvar _c;\n$RefreshReg$(_c, \"GlobalStats\");","map":{"version":3,"names":["React","useEffect","useState","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalStats","_s","_data$summaryAvg$real","_data$summaryAvg$effe","_data$passageAvg$real","data","setData","loading","setLoading","error","setError","fetch","then","res","json","filter","attempts","a","realWPM","readingSpeed","accuracy","summary","summaryAttempts","passage","passageAttempts","summaryAvg","passageAvg","leaderboard","catch","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","type","dataKey","name","unit","domain","cursor","strokeDasharray","map","_a$realWPM","value","fill","effectiveWPM","shape","_a$realWPM2","entry","index","_ref","_entry$readingSpeed","userName","points","toFixed","Math","round","_c","$RefreshReg$"],"sources":["C:/Users/tsuna/reading-experiment/src/components/GlobalResults.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\n\r\nconst GlobalStats = () => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch('https://read-racer.azurewebsites.net/api/getGlobalStats')\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        const filter = (attempts) =>\r\n          attempts.filter(\r\n            (a) =>\r\n              (a.realWPM || a.readingSpeed) > 30 &&\r\n              (a.realWPM || a.readingSpeed) < 2000 &&\r\n              a.accuracy >= 0 &&\r\n              a.accuracy <= 1\r\n          );\r\n\r\n        setData({\r\n          summary: filter(json.summaryAttempts || []),\r\n          passage: filter(json.passageAttempts || []),\r\n          summaryAvg: json.summaryAvg,\r\n          passageAvg: json.passageAvg,\r\n          leaderboard: json.leaderboard || [],\r\n        });\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error('Failed to fetch global stats:', err);\r\n        setError('Failed to load data');\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  if (loading) return <div className=\"text-center p-6\">Loading global stats...</div>;\r\n  if (error) return <div className=\"text-center p-6 text-red-500\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-4xl mx-auto space-y-8\">\r\n      <h2 className=\"text-3xl font-bold text-center\">Global Experiment Stats</h2>\r\n\r\n      {/* Summary group: realWPM vs effectiveWPM */}\r\n      <div>\r\n        <h3 className=\"text-xl font-semibold mb-2 text-blue-700\">\r\n          AI Summary Group — Real vs Effective Reading Speed\r\n        </h3>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <ScatterChart>\r\n            <CartesianGrid />\r\n            <XAxis\r\n              type=\"number\"\r\n              dataKey=\"value\"\r\n              name=\"Speed\"\r\n              unit=\" WPM\"\r\n              domain={['auto', 'auto']}\r\n            />\r\n            <YAxis type=\"number\" dataKey=\"accuracy\" name=\"Accuracy\" domain={[0, 1]} />\r\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n            <Legend />\r\n            <Scatter\r\n              name=\"Real WPM\"\r\n              data={data.summary.map((a) => ({\r\n                value: a.realWPM ?? a.readingSpeed,\r\n                accuracy: a.accuracy,\r\n              }))}\r\n              fill=\"#3b82f6\"\r\n            />\r\n            <Scatter\r\n              name=\"Effective WPM\"\r\n              data={data.summary.map((a) => ({\r\n                value: a.effectiveWPM,\r\n                accuracy: a.accuracy,\r\n              }))}\r\n              fill=\"#10b981\"\r\n            />\r\n            {data.summaryAvg && (\r\n              <>\r\n                <Scatter\r\n                  name=\"Avg Real WPM\"\r\n                  data={[\r\n                    {\r\n                      value: data.summaryAvg.realWPM ?? data.summaryAvg.readingSpeed,\r\n                      accuracy: data.summaryAvg.accuracy,\r\n                    },\r\n                  ]}\r\n                  fill=\"#ef4444\"\r\n                  shape=\"star\"\r\n                />\r\n                <Scatter\r\n                  name=\"Avg Effective WPM\"\r\n                  data={[\r\n                    {\r\n                      value: data.summaryAvg.effectiveWPM ?? data.summaryAvg.readingSpeed,\r\n                      accuracy: data.summaryAvg.accuracy,\r\n                    },\r\n                  ]}\r\n                  fill=\"#fbbf24\"\r\n                  shape=\"star\"\r\n                />\r\n              </>\r\n            )}\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n\r\n      {/* Full passage group: only realWPM */}\r\n      <div>\r\n        <h3 className=\"text-xl font-semibold mb-2 text-green-700\">\r\n          Full Passage Group — Reading Speed\r\n        </h3>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <ScatterChart>\r\n            <CartesianGrid />\r\n            <XAxis\r\n              type=\"number\"\r\n              dataKey=\"value\"\r\n              name=\"Speed\"\r\n              unit=\" WPM\"\r\n              domain={['auto', 'auto']}\r\n            />\r\n            <YAxis type=\"number\" dataKey=\"accuracy\" name=\"Accuracy\" domain={[0, 1]} />\r\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n            <Legend />\r\n            <Scatter\r\n              name=\"Reading Speed\"\r\n              data={data.passage.map((a) => ({\r\n                value: a.realWPM ?? a.readingSpeed,\r\n                accuracy: a.accuracy,\r\n              }))}\r\n              fill=\"#6366f1\"\r\n            />\r\n            {data.passageAvg && (\r\n              <Scatter\r\n                name=\"Avg Reading Speed\"\r\n                data={[\r\n                  {\r\n                    value: data.passageAvg.realWPM ?? data.passageAvg.readingSpeed,\r\n                    accuracy: data.passageAvg.accuracy,\r\n                  },\r\n                ]}\r\n                fill=\"#facc15\"\r\n                shape=\"star\"\r\n              />\r\n            )}\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n\r\n      {/* Leaderboard */}\r\n      <div>\r\n        <h3 className=\"text-xl font-semibold mb-3\">Leaderboard (Top 10 by Points)</h3>\r\n        <table className=\"w-full border rounded-xl overflow-hidden text-left\">\r\n          <thead className=\"bg-gray-100\">\r\n            <tr>\r\n              <th className=\"py-2 px-4\">Rank</th>\r\n              <th className=\"py-2 px-4\">User</th>\r\n              <th className=\"py-2 px-4\">Points</th>\r\n              <th className=\"py-2 px-4\">Speed (WPM)</th>\r\n              <th className=\"py-2 px-4\">Accuracy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.leaderboard.map((entry, index) => (\r\n              <tr key={index} className=\"border-t\">\r\n                <td className=\"py-2 px-4 font-bold\">#{index + 1}</td>\r\n                <td className=\"py-2 px-4 font-mono text-sm\">\r\n                  {entry.userName || 'Anonymous'}\r\n                </td>\r\n                <td className=\"py-2 px-4\">{entry.points.toFixed(2)}</td>\r\n                <td className=\"py-2 px-4\">\r\n                  {Math.round(entry.readingSpeed ?? entry.realWPM ?? 0)}\r\n                </td>\r\n                <td className=\"py-2 px-4\">{(entry.accuracy * 100).toFixed(1)}%</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GlobalStats;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}