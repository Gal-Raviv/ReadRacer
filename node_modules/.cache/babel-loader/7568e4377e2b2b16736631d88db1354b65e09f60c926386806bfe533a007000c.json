{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsuna\\\\reading-experiment\\\\src\\\\experiment\\\\ExperimentReading.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExperimentReading({\n  passageText,\n  summaryText,\n  useSummary,\n  onFinish\n}) {\n  _s();\n  const [time, setTime] = useState(0);\n  const [isReading, setIsReading] = useState(true);\n  useEffect(() => {\n    if (!isReading) return;\n    const timer = setInterval(() => setTime(t => t + 1), 1000);\n    return () => clearInterval(timer);\n  }, [isReading]);\n  const handleFinish = () => {\n    setIsReading(false);\n    onFinish(time); // pass back the reading time in seconds\n  };\n\n  // Select text to display\n  const displayedText = useSummary ? summaryText : passageText;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-50 px-4 py-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white max-w-3xl w-full rounded-2xl shadow-xl p-8 space-y-6 border border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-800 text-center\",\n        children: useSummary ? 'AI Summary Passage' : 'Full Passage'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"whitespace-pre-wrap text-gray-700 leading-relaxed bg-gray-50 p-4 rounded-md border border-gray-200\",\n        children: displayedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-500\",\n        children: [\"Time elapsed: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-mono\",\n          children: [time, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFinish,\n        className: \"w-full py-3 bg-blue-600 text-white font-semibold rounded-md hover:bg-blue-700 transition\",\n        children: \"Done Reading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(ExperimentReading, \"FHyNulCa+Te8apuRUFu/nOtKuZ0=\");\n_c = ExperimentReading;\nexport default ExperimentReading;\nvar _c;\n$RefreshReg$(_c, \"ExperimentReading\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ExperimentReading","passageText","summaryText","useSummary","onFinish","_s","time","setTime","isReading","setIsReading","timer","setInterval","t","clearInterval","handleFinish","displayedText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tsuna/reading-experiment/src/experiment/ExperimentReading.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction ExperimentReading({ passageText, summaryText, useSummary, onFinish }) {\r\n  const [time, setTime] = useState(0);\r\n  const [isReading, setIsReading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!isReading) return;\r\n    const timer = setInterval(() => setTime((t) => t + 1), 1000);\r\n    return () => clearInterval(timer);\r\n  }, [isReading]);\r\n\r\n  const handleFinish = () => {\r\n    setIsReading(false);\r\n    onFinish(time);  // pass back the reading time in seconds\r\n  };\r\n\r\n  // Select text to display\r\n  const displayedText = useSummary ? summaryText : passageText;\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 px-4 py-12\">\r\n      <div className=\"bg-white max-w-3xl w-full rounded-2xl shadow-xl p-8 space-y-6 border border-gray-200\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800 text-center\">\r\n          {useSummary ? 'AI Summary Passage' : 'Full Passage'}\r\n        </h2>\r\n\r\n        <div className=\"whitespace-pre-wrap text-gray-700 leading-relaxed bg-gray-50 p-4 rounded-md border border-gray-200\">\r\n          {displayedText}\r\n        </div>\r\n\r\n        <div className=\"text-sm text-gray-500\">\r\n          Time elapsed: <span className=\"font-mono\">{time} seconds</span>\r\n        </div>\r\n\r\n        <button\r\n          onClick={handleFinish}\r\n          className=\"w-full py-3 bg-blue-600 text-white font-semibold rounded-md hover:bg-blue-700 transition\"\r\n        >\r\n          Done Reading\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExperimentReading;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,iBAAiBA,CAAC;EAAEC,WAAW;EAAEC,WAAW;EAAEC,UAAU;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC7E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,SAAS,EAAE;IAChB,MAAME,KAAK,GAAGC,WAAW,CAAC,MAAMJ,OAAO,CAAEK,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;IAC5D,OAAO,MAAMC,aAAa,CAACH,KAAK,CAAC;EACnC,CAAC,EAAE,CAACF,SAAS,CAAC,CAAC;EAEf,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzBL,YAAY,CAAC,KAAK,CAAC;IACnBL,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAE;EACnB,CAAC;;EAED;EACA,MAAMS,aAAa,GAAGZ,UAAU,GAAGD,WAAW,GAAGD,WAAW;EAE5D,oBACEF,OAAA;IAAKiB,SAAS,EAAC,qEAAqE;IAAAC,QAAA,eAClFlB,OAAA;MAAKiB,SAAS,EAAC,sFAAsF;MAAAC,QAAA,gBACnGlB,OAAA;QAAIiB,SAAS,EAAC,8CAA8C;QAAAC,QAAA,EACzDd,UAAU,GAAG,oBAAoB,GAAG;MAAc;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eAELtB,OAAA;QAAKiB,SAAS,EAAC,oGAAoG;QAAAC,QAAA,EAChHF;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eAENtB,OAAA;QAAKiB,SAAS,EAAC,uBAAuB;QAAAC,QAAA,GAAC,gBACvB,eAAAlB,OAAA;UAAMiB,SAAS,EAAC,WAAW;UAAAC,QAAA,GAAEX,IAAI,EAAC,UAAQ;QAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eAENtB,OAAA;QACEuB,OAAO,EAAER,YAAa;QACtBE,SAAS,EAAC,0FAA0F;QAAAC,QAAA,EACrG;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CA1CQL,iBAAiB;AAAAuB,EAAA,GAAjBvB,iBAAiB;AA4C1B,eAAeA,iBAAiB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}