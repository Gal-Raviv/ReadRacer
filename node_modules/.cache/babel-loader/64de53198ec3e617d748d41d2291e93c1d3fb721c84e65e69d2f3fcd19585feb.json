{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsuna\\\\reading-experiment\\\\src\\\\components\\\\GlobalResults.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\n// Custom Tooltip to show only key info\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload\n}) => {\n  if (active && payload && payload.length > 0) {\n    var _data$value;\n    const data = payload[0].payload;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-2 rounded shadow border text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Reading Speed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 12\n        }, this), \" \", Math.round((_data$value = data.value) !== null && _data$value !== void 0 ? _data$value : data.readingSpeed), \" WPM\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Accuracy:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 12\n        }, this), \" \", (data.accuracy * 100).toFixed(1), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), 'points' in data && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Points:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 33\n        }, this), \" \", data.points.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_c = CustomTooltip;\nconst GlobalStats = () => {\n  _s();\n  var _data$summaryAvg$real, _data$summaryAvg$effe, _data$passageAvg$real;\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('https://read-racer.azurewebsites.net/api/getGlobalStats').then(res => res.json()).then(json => {\n      const filter = attempts => attempts.filter(a => (a.realWPM || a.readingSpeed) > 30 && (a.realWPM || a.readingSpeed) < 2000 && a.accuracy >= 0 && a.accuracy <= 1);\n      setData({\n        summary: filter(json.summaryAttempts || []),\n        passage: filter(json.passageAttempts || []),\n        summaryAvg: json.summaryAvg,\n        passageAvg: json.passageAvg,\n        leaderboard: json.leaderboard || []\n      });\n      setLoading(false);\n    }).catch(err => {\n      console.error('Failed to fetch global stats:', err);\n      setError('Failed to load data');\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-6\",\n    children: \"Loading global stats...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-6 text-red-500\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold text-center\",\n      children: \"Global Experiment Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-2 text-blue-700\",\n        children: \"AI Summary Group \\u2014 Real vs Effective Reading Speed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            type: \"number\",\n            dataKey: \"value\",\n            name: \"Reading Speed\",\n            unit: \" WPM\",\n            domain: ['auto', 'auto']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            type: \"number\",\n            dataKey: \"accuracy\",\n            name: \"Accuracy\",\n            domain: [0, 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 31\n            }, this),\n            cursor: {\n              strokeDasharray: '3 3'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            formatter: value => {\n              if (value === 'Real WPM') return 'Participants';\n              if (value === 'Effective WPM') return 'Participants';\n              if (value === 'Avg Real WPM') return 'Average';\n              if (value === 'Avg Effective WPM') return 'Average';\n              return value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Real WPM\",\n            data: data.summary.map(a => {\n              var _a$realWPM;\n              return {\n                value: (_a$realWPM = a.realWPM) !== null && _a$realWPM !== void 0 ? _a$realWPM : a.readingSpeed,\n                accuracy: a.accuracy\n              };\n            }),\n            fill: \"#3b82f6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Effective WPM\",\n            data: data.summary.map(a => ({\n              value: a.effectiveWPM,\n              accuracy: a.accuracy\n            })),\n            fill: \"#10b981\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), data.summaryAvg && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Scatter, {\n              name: \"Avg Real WPM\",\n              data: [{\n                value: (_data$summaryAvg$real = data.summaryAvg.realWPM) !== null && _data$summaryAvg$real !== void 0 ? _data$summaryAvg$real : data.summaryAvg.readingSpeed,\n                accuracy: data.summaryAvg.accuracy\n              }],\n              fill: \"#ef4444\",\n              shape: \"star\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n              name: \"Avg Effective WPM\",\n              data: [{\n                value: (_data$summaryAvg$effe = data.summaryAvg.effectiveWPM) !== null && _data$summaryAvg$effe !== void 0 ? _data$summaryAvg$effe : data.summaryAvg.readingSpeed,\n                accuracy: data.summaryAvg.accuracy\n              }],\n              fill: \"#fbbf24\",\n              shape: \"star\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-2 text-green-700\",\n        children: \"Full Passage Group \\u2014 Reading Speed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            type: \"number\",\n            dataKey: \"value\",\n            name: \"Reading Speed\",\n            unit: \" WPM\",\n            domain: ['auto', 'auto']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            type: \"number\",\n            dataKey: \"accuracy\",\n            name: \"Accuracy\",\n            domain: [0, 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 31\n            }, this),\n            cursor: {\n              strokeDasharray: '3 3'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            formatter: value => {\n              if (value === 'Reading Speed') return 'Participants';\n              if (value === 'Avg Reading Speed') return 'Average';\n              return value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Reading Speed\",\n            data: data.passage.map(a => {\n              var _a$realWPM2;\n              return {\n                value: (_a$realWPM2 = a.realWPM) !== null && _a$realWPM2 !== void 0 ? _a$realWPM2 : a.readingSpeed,\n                accuracy: a.accuracy\n              };\n            }),\n            fill: \"#6366f1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), data.passageAvg && /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Avg Reading Speed\",\n            data: [{\n              value: (_data$passageAvg$real = data.passageAvg.realWPM) !== null && _data$passageAvg$real !== void 0 ? _data$passageAvg$real : data.passageAvg.readingSpeed,\n              accuracy: data.passageAvg.accuracy\n            }],\n            fill: \"#facc15\",\n            shape: \"star\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-3\",\n        children: \"Leaderboard (Top 10 by Points)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full border rounded-xl overflow-hidden text-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-100\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Speed (WPM)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Accuracy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.leaderboard.map((entry, index) => {\n            var _ref, _entry$readingSpeed;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"border-t\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4 font-bold\",\n                children: [\"#\", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4 font-mono text-sm\",\n                children: entry.userName || 'Anonymous'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4\",\n                children: entry.points.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4\",\n                children: Math.round((_ref = (_entry$readingSpeed = entry.readingSpeed) !== null && _entry$readingSpeed !== void 0 ? _entry$readingSpeed : entry.realWPM) !== null && _ref !== void 0 ? _ref : 0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4\",\n                children: [(entry.accuracy * 100).toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(GlobalStats, \"RiL7vLwmC7ZWXKL/bXt2EIBjBYk=\");\n_c2 = GlobalStats;\nexport default GlobalStats;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"GlobalStats\");","map":{"version":3,"names":["React","useEffect","useState","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomTooltip","active","payload","length","_data$value","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","value","readingSpeed","accuracy","toFixed","points","_c","GlobalStats","_s","_data$summaryAvg$real","_data$summaryAvg$effe","_data$passageAvg$real","setData","loading","setLoading","error","setError","fetch","then","res","json","filter","attempts","a","realWPM","summary","summaryAttempts","passage","passageAttempts","summaryAvg","passageAvg","leaderboard","catch","err","console","width","height","type","dataKey","name","unit","domain","content","cursor","strokeDasharray","formatter","map","_a$realWPM","fill","effectiveWPM","shape","_a$realWPM2","entry","index","_ref","_entry$readingSpeed","userName","_c2","$RefreshReg$"],"sources":["C:/Users/tsuna/reading-experiment/src/components/GlobalResults.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\n\r\n// Custom Tooltip to show only key info\r\nconst CustomTooltip = ({ active, payload }) => {\r\n  if (active && payload && payload.length > 0) {\r\n    const data = payload[0].payload;\r\n    return (\r\n      <div className=\"bg-white p-2 rounded shadow border text-sm\">\r\n        <p><strong>Reading Speed:</strong> {Math.round(data.value ?? data.readingSpeed)} WPM</p>\r\n        <p><strong>Accuracy:</strong> {(data.accuracy * 100).toFixed(1)}%</p>\r\n        {'points' in data && <p><strong>Points:</strong> {data.points.toFixed(2)}</p>}\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst GlobalStats = () => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch('https://read-racer.azurewebsites.net/api/getGlobalStats')\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        const filter = (attempts) =>\r\n          attempts.filter(\r\n            (a) =>\r\n              (a.realWPM || a.readingSpeed) > 30 &&\r\n              (a.realWPM || a.readingSpeed) < 2000 &&\r\n              a.accuracy >= 0 &&\r\n              a.accuracy <= 1\r\n          );\r\n\r\n        setData({\r\n          summary: filter(json.summaryAttempts || []),\r\n          passage: filter(json.passageAttempts || []),\r\n          summaryAvg: json.summaryAvg,\r\n          passageAvg: json.passageAvg,\r\n          leaderboard: json.leaderboard || [],\r\n        });\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error('Failed to fetch global stats:', err);\r\n        setError('Failed to load data');\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  if (loading) return <div className=\"text-center p-6\">Loading global stats...</div>;\r\n  if (error) return <div className=\"text-center p-6 text-red-500\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-4xl mx-auto space-y-8\">\r\n      <h2 className=\"text-3xl font-bold text-center\">Global Experiment Stats</h2>\r\n\r\n      {/* Summary group: realWPM vs effectiveWPM */}\r\n      <div>\r\n        <h3 className=\"text-xl font-semibold mb-2 text-blue-700\">\r\n          AI Summary Group — Real vs Effective Reading Speed\r\n        </h3>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <ScatterChart>\r\n            <CartesianGrid />\r\n            <XAxis\r\n              type=\"number\"\r\n              dataKey=\"value\"\r\n              name=\"Reading Speed\"\r\n              unit=\" WPM\"\r\n              domain={['auto', 'auto']}\r\n            />\r\n            <YAxis type=\"number\" dataKey=\"accuracy\" name=\"Accuracy\" domain={[0, 1]} />\r\n            <Tooltip content={<CustomTooltip />} cursor={{ strokeDasharray: '3 3' }} />\r\n            <Legend\r\n              formatter={(value) => {\r\n                if (value === 'Real WPM') return 'Participants';\r\n                if (value === 'Effective WPM') return 'Participants';\r\n                if (value === 'Avg Real WPM') return 'Average';\r\n                if (value === 'Avg Effective WPM') return 'Average';\r\n                return value;\r\n              }}\r\n            />\r\n            <Scatter\r\n              name=\"Real WPM\"\r\n              data={data.summary.map((a) => ({\r\n                value: a.realWPM ?? a.readingSpeed,\r\n                accuracy: a.accuracy,\r\n              }))}\r\n              fill=\"#3b82f6\"\r\n            />\r\n            <Scatter\r\n              name=\"Effective WPM\"\r\n              data={data.summary.map((a) => ({\r\n                value: a.effectiveWPM,\r\n                accuracy: a.accuracy,\r\n              }))}\r\n              fill=\"#10b981\"\r\n            />\r\n            {data.summaryAvg && (\r\n              <>\r\n                <Scatter\r\n                  name=\"Avg Real WPM\"\r\n                  data={[\r\n                    {\r\n                      value: data.summaryAvg.realWPM ?? data.summaryAvg.readingSpeed,\r\n                      accuracy: data.summaryAvg.accuracy,\r\n                    },\r\n                  ]}\r\n                  fill=\"#ef4444\"\r\n                  shape=\"star\"\r\n                />\r\n                <Scatter\r\n                  name=\"Avg Effective WPM\"\r\n                  data={[\r\n                    {\r\n                      value: data.summaryAvg.effectiveWPM ?? data.summaryAvg.readingSpeed,\r\n                      accuracy: data.summaryAvg.accuracy,\r\n                    },\r\n                  ]}\r\n                  fill=\"#fbbf24\"\r\n                  shape=\"star\"\r\n                />\r\n              </>\r\n            )}\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n\r\n      {/* Full passage group: only realWPM */}\r\n      <div>\r\n        <h3 className=\"text-xl font-semibold mb-2 text-green-700\">\r\n          Full Passage Group — Reading Speed\r\n        </h3>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <ScatterChart>\r\n            <CartesianGrid />\r\n            <XAxis\r\n              type=\"number\"\r\n              dataKey=\"value\"\r\n              name=\"Reading Speed\"\r\n              unit=\" WPM\"\r\n              domain={['auto', 'auto']}\r\n            />\r\n            <YAxis type=\"number\" dataKey=\"accuracy\" name=\"Accuracy\" domain={[0, 1]} />\r\n            <Tooltip content={<CustomTooltip />} cursor={{ strokeDasharray: '3 3' }} />\r\n            <Legend\r\n              formatter={(value) => {\r\n                if (value === 'Reading Speed') return 'Participants';\r\n                if (value === 'Avg Reading Speed') return 'Average';\r\n                return value;\r\n              }}\r\n            />\r\n            <Scatter\r\n              name=\"Reading Speed\"\r\n              data={data.passage.map((a) => ({\r\n                value: a.realWPM ?? a.readingSpeed,\r\n                accuracy: a.accuracy,\r\n              }))}\r\n              fill=\"#6366f1\"\r\n            />\r\n            {data.passageAvg && (\r\n              <Scatter\r\n                name=\"Avg Reading Speed\"\r\n                data={[\r\n                  {\r\n                    value: data.passageAvg.realWPM ?? data.passageAvg.readingSpeed,\r\n                    accuracy: data.passageAvg.accuracy,\r\n                  },\r\n                ]}\r\n                fill=\"#facc15\"\r\n                shape=\"star\"\r\n              />\r\n            )}\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n\r\n      {/* Leaderboard */}\r\n      <div>\r\n        <h3 className=\"text-xl font-semibold mb-3\">Leaderboard (Top 10 by Points)</h3>\r\n        <table className=\"w-full border rounded-xl overflow-hidden text-left\">\r\n          <thead className=\"bg-gray-100\">\r\n            <tr>\r\n              <th className=\"py-2 px-4\">Rank</th>\r\n              <th className=\"py-2 px-4\">User</th>\r\n              <th className=\"py-2 px-4\">Points</th>\r\n              <th className=\"py-2 px-4\">Speed (WPM)</th>\r\n              <th className=\"py-2 px-4\">Accuracy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.leaderboard.map((entry, index) => (\r\n              <tr key={index} className=\"border-t\">\r\n                <td className=\"py-2 px-4 font-bold\">#{index + 1}</td>\r\n                <td className=\"py-2 px-4 font-mono text-sm\">\r\n                  {entry.userName || 'Anonymous'}\r\n                </td>\r\n                <td className=\"py-2 px-4\">{entry.points.toFixed(2)}</td>\r\n                <td className=\"py-2 px-4\">\r\n                  {Math.round(entry.readingSpeed ?? entry.realWPM ?? 0)}\r\n                </td>\r\n                <td className=\"py-2 px-4\">{(entry.accuracy * 100).toFixed(1)}%</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GlobalStats;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}