{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsuna\\\\reading-experiment\\\\src\\\\components\\\\GlobalResults.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\n\n// Custom Tooltip to show only key info\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload\n}) => {\n  if (active && payload && payload.length > 0) {\n    var _data$value;\n    const data = payload[0].payload;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-2 rounded shadow border text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Reading Speed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), \" \", Math.round((_data$value = data.value) !== null && _data$value !== void 0 ? _data$value : data.readingSpeed), \" WPM\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Accuracy:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), \" \", (data.accuracy * 100).toFixed(1), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), \"points\" in data && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Points:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), \" \", data.points.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_c = CustomTooltip;\nconst GlobalStats = () => {\n  _s();\n  var _ref3, _data$summaryAvg$effe, _ref4, _data$summaryAvg$real, _data$passageAvg$real;\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // \"effective\" or \"real\"\n  const [mode, setMode] = useState(\"effective\");\n  useEffect(() => {\n    fetch(\"https://read-racer.azurewebsites.net/api/getGlobalStats\").then(res => res.json()).then(json => {\n      const filter = attempts => attempts.filter(a => (a.realWPM || a.readingSpeed) > 30 && (a.realWPM || a.readingSpeed) < 2000 && a.accuracy >= 0 && a.accuracy <= 1);\n      setData({\n        summary: filter(json.summaryAttempts || []),\n        passage: filter(json.passageAttempts || []),\n        summaryAvg: json.summaryAvg,\n        passageAvg: json.passageAvg,\n        leaderboard: json.leaderboard || []\n      });\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"Failed to fetch global stats:\", err);\n      setError(\"Failed to load data\");\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-6\",\n    children: \"Loading global stats...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 12\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-6 text-red-500\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n\n  // Prepare data for the scatter plot depending on mode\n  const summaryData = data.summary.map(a => {\n    var _ref, _a$effectiveWPM, _ref2, _a$realWPM;\n    return {\n      value: mode === \"effective\" ? (_ref = (_a$effectiveWPM = a.effectiveWPM) !== null && _a$effectiveWPM !== void 0 ? _a$effectiveWPM : a.realWPM) !== null && _ref !== void 0 ? _ref : a.readingSpeed : (_ref2 = (_a$realWPM = a.realWPM) !== null && _a$realWPM !== void 0 ? _a$realWPM : a.effectiveWPM) !== null && _ref2 !== void 0 ? _ref2 : a.readingSpeed,\n      accuracy: a.accuracy\n    };\n  });\n\n  // Full passage always uses realWPM or readingSpeed\n  const passageData = data.passage.map(a => {\n    var _a$realWPM2;\n    return {\n      value: (_a$realWPM2 = a.realWPM) !== null && _a$realWPM2 !== void 0 ? _a$realWPM2 : a.readingSpeed,\n      accuracy: a.accuracy\n    };\n  });\n\n  // Averages for stars\n  const summaryAvgValue = mode === \"effective\" ? (_ref3 = (_data$summaryAvg$effe = data.summaryAvg.effectiveWPM) !== null && _data$summaryAvg$effe !== void 0 ? _data$summaryAvg$effe : data.summaryAvg.realWPM) !== null && _ref3 !== void 0 ? _ref3 : data.summaryAvg.readingSpeed : (_ref4 = (_data$summaryAvg$real = data.summaryAvg.realWPM) !== null && _data$summaryAvg$real !== void 0 ? _data$summaryAvg$real : data.summaryAvg.effectiveWPM) !== null && _ref4 !== void 0 ? _ref4 : data.summaryAvg.readingSpeed;\n  const passageAvgValue = (_data$passageAvg$real = data.passageAvg.realWPM) !== null && _data$passageAvg$real !== void 0 ? _data$passageAvg$real : data.passageAvg.readingSpeed;\n\n  // Split leaderboard into two groups: AI summaries and full passages\n  // We assume the leaderboard data includes some flag or separate endpoint? \n  // If not, backend must be modified to provide two leaderboards separately\n  // For now, we split by presence of effectiveWPM (summary) vs no effectiveWPM (passage)\n  const leaderboardSummary = data.leaderboard.filter(entry => entry.effectiveWPM !== undefined || entry.isSummary);\n  const leaderboardPassage = data.leaderboard.filter(entry => entry.effectiveWPM === undefined && !entry.isSummary);\n\n  // If your backend does not send isSummary or effectiveWPM in leaderboard entries,\n  // you will need to modify the backend to include these flags, or send two separate leaderboards.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold text-center\",\n      children: \"Global Experiment Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"mr-2 font-semibold\",\n        children: \"Select Graph Mode:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: mode,\n        onChange: e => setMode(e.target.value),\n        className: \"border rounded p-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"effective\",\n          children: \"Effective WPM (AI Summaries)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"real\",\n          children: \"Real WPM (AI Summaries)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-2 text-indigo-700\",\n        children: mode === \"effective\" ? \"Effective WPM (AI Summaries) vs Reading Speed (Full Passage)\" : \"Real WPM (AI Summaries) vs Reading Speed (Full Passage)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 350,\n        children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n          margin: {\n            top: 10,\n            right: 20,\n            bottom: 20,\n            left: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            type: \"number\",\n            dataKey: \"value\",\n            name: \"Reading Speed (WPM)\",\n            unit: \"WPM\",\n            domain: [\"auto\", \"auto\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            type: \"number\",\n            dataKey: \"accuracy\",\n            name: \"Accuracy\",\n            unit: \"%\",\n            domain: [0, 1],\n            tickFormatter: tick => `${(tick * 100).toFixed(0)}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 31\n            }, this),\n            cursor: {\n              strokeDasharray: \"3 3\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            formatter: value => {\n              if (value === \"AI Summaries\") return \"AI Summaries (Participants)\";\n              if (value === \"Full Passage\") return \"Full Passage (Participants)\";\n              if (value === \"Avg AI Summaries\") return \"Average AI Summaries\";\n              if (value === \"Avg Full Passage\") return \"Average Full Passage\";\n              return value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"AI Summaries\",\n            data: summaryData,\n            fill: \"#3b82f6\",\n            shape: \"circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Full Passage\",\n            data: passageData,\n            fill: \"#10b981\",\n            shape: \"circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), data.summaryAvg && /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Avg AI Summaries\",\n            data: [{\n              value: summaryAvgValue,\n              accuracy: data.summaryAvg.accuracy\n            }],\n            fill: \"#ef4444\",\n            shape: \"star\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), data.passageAvg && /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Avg Full Passage\",\n            data: [{\n              value: passageAvgValue,\n              accuracy: data.passageAvg.accuracy\n            }],\n            fill: \"#fbbf24\",\n            shape: \"star\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-3\",\n        children: \"Leaderboard \\u2014 AI Summaries (Top 10 by Points)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full border rounded-xl overflow-hidden text-left mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-100\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Speed (WPM)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Accuracy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: leaderboardSummary.slice(0, 10).map((entry, index) => {\n            var _ref5, _entry$readingSpeed;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"border-t\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4 font-bold\",\n                children: [\"#\", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4 font-mono text-sm\",\n                children: entry.userName || \"Anonymous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4\",\n                children: entry.points.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4\",\n                children: Math.round((_ref5 = (_entry$readingSpeed = entry.readingSpeed) !== null && _entry$readingSpeed !== void 0 ? _entry$readingSpeed : entry.realWPM) !== null && _ref5 !== void 0 ? _ref5 : 0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4\",\n                children: [(entry.accuracy * 100).toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-3\",\n        children: \"Leaderboard \\u2014 Full Passages (Top 10 by Points)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full border rounded-xl overflow-hidden text-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-100\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Speed (WPM)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Accuracy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: leaderboardPassage.slice(0, 10).map((entry, index) => {\n            var _ref6, _entry$readingSpeed2;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"border-t\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4 font-bold\",\n                children: [\"#\", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4 font-mono text-sm\",\n                children: entry.userName || \"Anonymous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4\",\n                children: entry.points.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4\",\n                children: Math.round((_ref6 = (_entry$readingSpeed2 = entry.readingSpeed) !== null && _entry$readingSpeed2 !== void 0 ? _entry$readingSpeed2 : entry.realWPM) !== null && _ref6 !== void 0 ? _ref6 : 0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4\",\n                children: [(entry.accuracy * 100).toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(GlobalStats, \"m6556Dx39rKEzqpOPpuQB+mEkDc=\");\n_c2 = GlobalStats;\nexport default GlobalStats;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"GlobalStats\");","map":{"version":3,"names":["React","useEffect","useState","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","CustomTooltip","active","payload","length","_data$value","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","value","readingSpeed","accuracy","toFixed","points","_c","GlobalStats","_s","_ref3","_data$summaryAvg$effe","_ref4","_data$summaryAvg$real","_data$passageAvg$real","setData","loading","setLoading","error","setError","mode","setMode","fetch","then","res","json","filter","attempts","a","realWPM","summary","summaryAttempts","passage","passageAttempts","summaryAvg","passageAvg","leaderboard","catch","err","console","summaryData","map","_ref","_a$effectiveWPM","_ref2","_a$realWPM","effectiveWPM","passageData","_a$realWPM2","summaryAvgValue","passageAvgValue","leaderboardSummary","entry","undefined","isSummary","leaderboardPassage","onChange","e","target","width","height","margin","top","right","bottom","left","type","dataKey","name","unit","domain","tickFormatter","tick","content","cursor","strokeDasharray","formatter","fill","shape","slice","index","_ref5","_entry$readingSpeed","userName","_ref6","_entry$readingSpeed2","_c2","$RefreshReg$"],"sources":["C:/Users/tsuna/reading-experiment/src/components/GlobalResults.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\n// Custom Tooltip to show only key info\r\nconst CustomTooltip = ({ active, payload }) => {\r\n  if (active && payload && payload.length > 0) {\r\n    const data = payload[0].payload;\r\n    return (\r\n      <div className=\"bg-white p-2 rounded shadow border text-sm\">\r\n        <p>\r\n          <strong>Reading Speed:</strong>{\" \"}\r\n          {Math.round(data.value ?? data.readingSpeed)} WPM\r\n        </p>\r\n        <p>\r\n          <strong>Accuracy:</strong> {(data.accuracy * 100).toFixed(1)}%\r\n        </p>\r\n        {\"points\" in data && (\r\n          <p>\r\n            <strong>Points:</strong> {data.points.toFixed(2)}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst GlobalStats = () => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // \"effective\" or \"real\"\r\n  const [mode, setMode] = useState(\"effective\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://read-racer.azurewebsites.net/api/getGlobalStats\")\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        const filter = (attempts) =>\r\n          attempts.filter(\r\n            (a) =>\r\n              (a.realWPM || a.readingSpeed) > 30 &&\r\n              (a.realWPM || a.readingSpeed) < 2000 &&\r\n              a.accuracy >= 0 &&\r\n              a.accuracy <= 1\r\n          );\r\n\r\n        setData({\r\n          summary: filter(json.summaryAttempts || []),\r\n          passage: filter(json.passageAttempts || []),\r\n          summaryAvg: json.summaryAvg,\r\n          passageAvg: json.passageAvg,\r\n          leaderboard: json.leaderboard || [],\r\n        });\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Failed to fetch global stats:\", err);\r\n        setError(\"Failed to load data\");\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  if (loading)\r\n    return <div className=\"text-center p-6\">Loading global stats...</div>;\r\n  if (error)\r\n    return (\r\n      <div className=\"text-center p-6 text-red-500\">{error}</div>\r\n    );\r\n\r\n  // Prepare data for the scatter plot depending on mode\r\n  const summaryData = data.summary.map((a) => ({\r\n    value:\r\n      mode === \"effective\"\r\n        ? a.effectiveWPM ?? a.realWPM ?? a.readingSpeed\r\n        : a.realWPM ?? a.effectiveWPM ?? a.readingSpeed,\r\n    accuracy: a.accuracy,\r\n  }));\r\n\r\n  // Full passage always uses realWPM or readingSpeed\r\n  const passageData = data.passage.map((a) => ({\r\n    value: a.realWPM ?? a.readingSpeed,\r\n    accuracy: a.accuracy,\r\n  }));\r\n\r\n  // Averages for stars\r\n  const summaryAvgValue =\r\n    mode === \"effective\"\r\n      ? data.summaryAvg.effectiveWPM ?? data.summaryAvg.realWPM ?? data.summaryAvg.readingSpeed\r\n      : data.summaryAvg.realWPM ?? data.summaryAvg.effectiveWPM ?? data.summaryAvg.readingSpeed;\r\n\r\n  const passageAvgValue =\r\n    data.passageAvg.realWPM ?? data.passageAvg.readingSpeed;\r\n\r\n  // Split leaderboard into two groups: AI summaries and full passages\r\n  // We assume the leaderboard data includes some flag or separate endpoint? \r\n  // If not, backend must be modified to provide two leaderboards separately\r\n  // For now, we split by presence of effectiveWPM (summary) vs no effectiveWPM (passage)\r\n  const leaderboardSummary = data.leaderboard.filter(\r\n    (entry) => entry.effectiveWPM !== undefined || entry.isSummary\r\n  );\r\n\r\n  const leaderboardPassage = data.leaderboard.filter(\r\n    (entry) => entry.effectiveWPM === undefined && !entry.isSummary\r\n  );\r\n\r\n  // If your backend does not send isSummary or effectiveWPM in leaderboard entries,\r\n  // you will need to modify the backend to include these flags, or send two separate leaderboards.\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-4xl mx-auto space-y-8\">\r\n      <h2 className=\"text-3xl font-bold text-center\">Global Experiment Stats</h2>\r\n\r\n      {/* Mode selector */}\r\n      <div className=\"mb-4 text-center\">\r\n        <label className=\"mr-2 font-semibold\">Select Graph Mode:</label>\r\n        <select\r\n          value={mode}\r\n          onChange={(e) => setMode(e.target.value)}\r\n          className=\"border rounded p-1\"\r\n        >\r\n          <option value=\"effective\">Effective WPM (AI Summaries)</option>\r\n          <option value=\"real\">Real WPM (AI Summaries)</option>\r\n        </select>\r\n      </div>\r\n\r\n      {/* Combined Scatter Chart */}\r\n      <div>\r\n        <h3 className=\"text-xl font-semibold mb-2 text-indigo-700\">\r\n          {mode === \"effective\"\r\n            ? \"Effective WPM (AI Summaries) vs Reading Speed (Full Passage)\"\r\n            : \"Real WPM (AI Summaries) vs Reading Speed (Full Passage)\"}\r\n        </h3>\r\n        <ResponsiveContainer width=\"100%\" height={350}>\r\n          <ScatterChart margin={{ top: 10, right: 20, bottom: 20, left: 0 }}>\r\n            <CartesianGrid />\r\n            <XAxis\r\n              type=\"number\"\r\n              dataKey=\"value\"\r\n              name=\"Reading Speed (WPM)\"\r\n              unit=\"WPM\"\r\n              domain={[\"auto\", \"auto\"]}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              dataKey=\"accuracy\"\r\n              name=\"Accuracy\"\r\n              unit=\"%\"\r\n              domain={[0, 1]}\r\n              tickFormatter={(tick) => `${(tick * 100).toFixed(0)}%`}\r\n            />\r\n            <Tooltip content={<CustomTooltip />} cursor={{ strokeDasharray: \"3 3\" }} />\r\n            <Legend\r\n              formatter={(value) => {\r\n                if (value === \"AI Summaries\") return \"AI Summaries (Participants)\";\r\n                if (value === \"Full Passage\") return \"Full Passage (Participants)\";\r\n                if (value === \"Avg AI Summaries\") return \"Average AI Summaries\";\r\n                if (value === \"Avg Full Passage\") return \"Average Full Passage\";\r\n                return value;\r\n              }}\r\n            />\r\n            <Scatter\r\n              name=\"AI Summaries\"\r\n              data={summaryData}\r\n              fill=\"#3b82f6\"\r\n              shape=\"circle\"\r\n            />\r\n            <Scatter\r\n              name=\"Full Passage\"\r\n              data={passageData}\r\n              fill=\"#10b981\"\r\n              shape=\"circle\"\r\n            />\r\n            {/* Average points */}\r\n            {data.summaryAvg && (\r\n              <Scatter\r\n                name=\"Avg AI Summaries\"\r\n                data={[{ value: summaryAvgValue, accuracy: data.summaryAvg.accuracy }]}\r\n                fill=\"#ef4444\"\r\n                shape=\"star\"\r\n              />\r\n            )}\r\n            {data.passageAvg && (\r\n              <Scatter\r\n                name=\"Avg Full Passage\"\r\n                data={[{ value: passageAvgValue, accuracy: data.passageAvg.accuracy }]}\r\n                fill=\"#fbbf24\"\r\n                shape=\"star\"\r\n              />\r\n            )}\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n\r\n      {/* Two leaderboards */}\r\n      <div>\r\n        <h3 className=\"text-xl font-semibold mb-3\">Leaderboard — AI Summaries (Top 10 by Points)</h3>\r\n        <table className=\"w-full border rounded-xl overflow-hidden text-left mb-8\">\r\n          <thead className=\"bg-gray-100\">\r\n            <tr>\r\n              <th className=\"py-2 px-4\">Rank</th>\r\n              <th className=\"py-2 px-4\">User</th>\r\n              <th className=\"py-2 px-4\">Points</th>\r\n              <th className=\"py-2 px-4\">Speed (WPM)</th>\r\n              <th className=\"py-2 px-4\">Accuracy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {leaderboardSummary.slice(0, 10).map((entry, index) => (\r\n              <tr key={index} className=\"border-t\">\r\n                <td className=\"py-2 px-4 font-bold\">#{index + 1}</td>\r\n                <td className=\"py-2 px-4 font-mono text-sm\">{entry.userName || \"Anonymous\"}</td>\r\n                <td className=\"py-2 px-4\">{entry.points.toFixed(2)}</td>\r\n                <td className=\"py-2 px-4\">{Math.round(entry.readingSpeed ?? entry.realWPM ?? 0)}</td>\r\n                <td className=\"py-2 px-4\">{(entry.accuracy * 100).toFixed(1)}%</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <h3 className=\"text-xl font-semibold mb-3\">Leaderboard — Full Passages (Top 10 by Points)</h3>\r\n        <table className=\"w-full border rounded-xl overflow-hidden text-left\">\r\n          <thead className=\"bg-gray-100\">\r\n            <tr>\r\n              <th className=\"py-2 px-4\">Rank</th>\r\n              <th className=\"py-2 px-4\">User</th>\r\n              <th className=\"py-2 px-4\">Points</th>\r\n              <th className=\"py-2 px-4\">Speed (WPM)</th>\r\n              <th className=\"py-2 px-4\">Accuracy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {leaderboardPassage.slice(0, 10).map((entry, index) => (\r\n              <tr key={index} className=\"border-t\">\r\n                <td className=\"py-2 px-4 font-bold\">#{index + 1}</td>\r\n                <td className=\"py-2 px-4 font-mono text-sm\">{entry.userName || \"Anonymous\"}</td>\r\n                <td className=\"py-2 px-4\">{entry.points.toFixed(2)}</td>\r\n                <td className=\"py-2 px-4\">{Math.round(entry.readingSpeed ?? entry.realWPM ?? 0)}</td>\r\n                <td className=\"py-2 px-4\">{(entry.accuracy * 100).toFixed(1)}%</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GlobalStats;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}