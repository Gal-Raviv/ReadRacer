{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsuna\\\\reading-experiment\\\\src\\\\components\\\\PersonalResults.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PersonalResults = ({\n  userId\n}) => {\n  _s();\n  var _globalAverages$summa, _globalAverages$full$;\n  const [summaryAttempts, setSummaryAttempts] = useState([]);\n  const [fullPassageAttempts, setFullPassageAttempts] = useState([]);\n  const [globalAverages, setGlobalAverages] = useState({\n    summary: null,\n    full: null\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!userId) return;\n    async function fetchData() {\n      setLoading(true);\n      setError(null);\n      try {\n        const res = await fetch(`https://read-racer.azurewebsites.net/api/getUserResults?userId=${encodeURIComponent(userId)}`);\n        if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);\n        const data = await res.json();\n        const results = Array.isArray(data) ? data : data.results || [];\n        const summary = results.filter(r => r.useSummary === true || r.useSummary === \"true\" || r.useSummary === \"True\");\n        const full = results.filter(r => !(r.useSummary === true || r.useSummary === \"true\" || r.useSummary === \"True\"));\n        setSummaryAttempts(summary);\n        setFullPassageAttempts(full);\n        setGlobalAverages({\n          summary: data.summaryAvg || null,\n          full: data.passageAvg || null\n        });\n      } catch (err) {\n        console.error(\"Failed to load user results:\", err);\n        setError(err.message || \"Failed to load user results\");\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, [userId]);\n  const renderChart = (data, label, globalDot) => {\n    if (!data || data.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No attempts yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 44\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-2 text-gray-700\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n          margin: {\n            top: 10,\n            right: 20,\n            bottom: 20,\n            left: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            type: \"number\",\n            dataKey: \"value\",\n            name: \"Reading Speed\",\n            unit: \" WPM\",\n            domain: [\"auto\", \"auto\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            type: \"number\",\n            dataKey: \"accuracy\",\n            name: \"Accuracy\",\n            unit: \"%\",\n            domain: [0, 100]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            cursor: {\n              strokeDasharray: \"3 3\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Real WPM\",\n            data: data.map(d => ({\n              ...d,\n              value: d.realWPM\n            })),\n            fill: \"#3b82f6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Effective WPM\",\n            data: data.map(d => ({\n              ...d,\n              value: d.effectiveWPM\n            })),\n            fill: \"#10b981\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), globalDot && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Scatter, {\n              name: \"Global Avg Real WPM\",\n              data: [{\n                value: globalDot.realWPM,\n                accuracy: globalDot.accuracy\n              }],\n              fill: \"#ef4444\",\n              shape: \"star\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n              name: \"Global Avg Effective WPM\",\n              data: [{\n                value: globalDot.effectiveWPM,\n                accuracy: globalDot.accuracy\n              }],\n              fill: \"#fbbf24\",\n              shape: \"star\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  };\n  if (!userId) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Please log in to see your personal results.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 23\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading your results...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-red-600 font-semibold\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-gray-800\",\n      children: \"Your Personal Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), renderChart(summaryAttempts.map(r => ({\n      realWPM: r.realWPM || 0,\n      effectiveWPM: r.effectiveWPM || 0,\n      accuracy: r.total > 0 ? Math.round(r.score / r.total * 100) : 0\n    })), \"AI Summary Attempts\", globalAverages.summary && {\n      realWPM: globalAverages.summary.realWPM || 0,\n      effectiveWPM: globalAverages.summary.effectiveWPM || 0,\n      accuracy: Math.round(((_globalAverages$summa = globalAverages.summary.accuracy) !== null && _globalAverages$summa !== void 0 ? _globalAverages$summa : 0) * 100)\n    }), renderChart(fullPassageAttempts.map(r => {\n      const wpm = r.realWPM || r.effectiveWPM || 0; // they should be same for full\n      return {\n        realWPM: wpm,\n        accuracy: r.total > 0 ? Math.round(r.score / r.total * 100) : 0\n      };\n    }), \"Full Passage Attempts\", globalAverages.full && {\n      realWPM: globalAverages.full.realWPM || 0,\n      effectiveWPM: globalAverages.full.effectiveWPM || 0,\n      accuracy: Math.round(((_globalAverages$full$ = globalAverages.full.accuracy) !== null && _globalAverages$full$ !== void 0 ? _globalAverages$full$ : 0) * 100)\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(PersonalResults, \"lwEUFTB/paibqN2306rvXeO8QX8=\");\n_c = PersonalResults;\nexport default PersonalResults;\nvar _c;\n$RefreshReg$(_c, \"PersonalResults\");","map":{"version":3,"names":["React","useEffect","useState","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","PersonalResults","userId","_s","_globalAverages$summa","_globalAverages$full$","summaryAttempts","setSummaryAttempts","fullPassageAttempts","setFullPassageAttempts","globalAverages","setGlobalAverages","summary","full","loading","setLoading","error","setError","fetchData","res","fetch","encodeURIComponent","ok","Error","status","data","json","results","Array","isArray","filter","r","useSummary","summaryAvg","passageAvg","err","console","message","renderChart","label","globalDot","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","width","height","margin","top","right","bottom","left","type","dataKey","name","unit","domain","cursor","strokeDasharray","map","d","value","realWPM","fill","effectiveWPM","accuracy","shape","total","Math","round","score","wpm","_c","$RefreshReg$"],"sources":["C:/Users/tsuna/reading-experiment/src/components/PersonalResults.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst PersonalResults = ({ userId }) => {\r\n  const [summaryAttempts, setSummaryAttempts] = useState([]);\r\n  const [fullPassageAttempts, setFullPassageAttempts] = useState([]);\r\n  const [globalAverages, setGlobalAverages] = useState({ summary: null, full: null });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!userId) return;\r\n\r\n    async function fetchData() {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const res = await fetch(\r\n          `https://read-racer.azurewebsites.net/api/getUserResults?userId=${encodeURIComponent(userId)}`\r\n        );\r\n        if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);\r\n        const data = await res.json();\r\n\r\n        const results = Array.isArray(data) ? data : data.results || [];\r\n\r\n        const summary = results.filter((r) =>\r\n          r.useSummary === true || r.useSummary === \"true\" || r.useSummary === \"True\"\r\n        );\r\n        const full = results.filter((r) =>\r\n          !(r.useSummary === true || r.useSummary === \"true\" || r.useSummary === \"True\")\r\n        );\r\n\r\n        setSummaryAttempts(summary);\r\n        setFullPassageAttempts(full);\r\n\r\n        setGlobalAverages({\r\n          summary: data.summaryAvg || null,\r\n          full: data.passageAvg || null,\r\n        });\r\n      } catch (err) {\r\n        console.error(\"Failed to load user results:\", err);\r\n        setError(err.message || \"Failed to load user results\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, [userId]);\r\n\r\n  const renderChart = (data, label, globalDot) => {\r\n    if (!data || data.length === 0) return <p>No attempts yet.</p>;\r\n\r\n    return (\r\n      <div className=\"mb-8\">\r\n        <h3 className=\"text-xl font-semibold mb-2 text-gray-700\">{label}</h3>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <ScatterChart margin={{ top: 10, right: 20, bottom: 20, left: 0 }}>\r\n            <CartesianGrid />\r\n            <XAxis\r\n              type=\"number\"\r\n              dataKey=\"value\"\r\n              name=\"Reading Speed\"\r\n              unit=\" WPM\"\r\n              domain={[\"auto\", \"auto\"]}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              dataKey=\"accuracy\"\r\n              name=\"Accuracy\"\r\n              unit=\"%\"\r\n              domain={[0, 100]}\r\n            />\r\n            <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\r\n            <Legend />\r\n\r\n            {/* Scatter for real WPM */}\r\n            <Scatter\r\n              name=\"Real WPM\"\r\n              data={data.map((d) => ({ ...d, value: d.realWPM }))}\r\n              fill=\"#3b82f6\"\r\n            />\r\n\r\n            {/* Scatter for effective WPM */}\r\n            <Scatter\r\n              name=\"Effective WPM\"\r\n              data={data.map((d) => ({ ...d, value: d.effectiveWPM }))}\r\n              fill=\"#10b981\"\r\n            />\r\n\r\n            {globalDot && (\r\n              <>\r\n                <Scatter\r\n                  name=\"Global Avg Real WPM\"\r\n                  data={[{ value: globalDot.realWPM, accuracy: globalDot.accuracy }]}\r\n                  fill=\"#ef4444\"\r\n                  shape=\"star\"\r\n                />\r\n                <Scatter\r\n                  name=\"Global Avg Effective WPM\"\r\n                  data={[{ value: globalDot.effectiveWPM, accuracy: globalDot.accuracy }]}\r\n                  fill=\"#fbbf24\"\r\n                  shape=\"star\"\r\n                />\r\n              </>\r\n            )}\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (!userId) return <p>Please log in to see your personal results.</p>;\r\n  if (loading) return <p>Loading your results...</p>;\r\n  if (error) return <p className=\"text-red-600 font-semibold\">Error: {error}</p>;\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-4xl mx-auto\">\r\n      <h2 className=\"text-3xl font-bold mb-6 text-gray-800\">Your Personal Results</h2>\r\n\r\n      {/* Summary Attempts */}\r\n      {renderChart(\r\n        summaryAttempts.map((r) => ({\r\n          realWPM: r.realWPM || 0,\r\n          effectiveWPM: r.effectiveWPM || 0,\r\n          accuracy: r.total > 0 ? Math.round((r.score / r.total) * 100) : 0,\r\n        })),\r\n        \"AI Summary Attempts\",\r\n        globalAverages.summary && {\r\n          realWPM: globalAverages.summary.realWPM || 0,\r\n          effectiveWPM: globalAverages.summary.effectiveWPM || 0,\r\n          accuracy: Math.round((globalAverages.summary.accuracy ?? 0) * 100),\r\n        }\r\n      )}\r\n\r\n      {/* Full Passage Attempts */}\r\n      {renderChart(\r\n        fullPassageAttempts.map((r) => {\r\n          const wpm = r.realWPM || r.effectiveWPM || 0; // they should be same for full\r\n          return {\r\n            realWPM: wpm,\r\n            accuracy: r.total > 0 ? Math.round((r.score / r.total) * 100) : 0,\r\n          };\r\n        }),\r\n        \"Full Passage Attempts\",\r\n        globalAverages.full && {\r\n          realWPM: globalAverages.full.realWPM || 0,\r\n          effectiveWPM: globalAverages.full.effectiveWPM || 0,\r\n          accuracy: Math.round((globalAverages.full.accuracy ?? 0) * 100),\r\n        }\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalResults;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}