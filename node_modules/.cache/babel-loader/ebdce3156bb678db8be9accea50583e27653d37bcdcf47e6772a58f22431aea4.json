{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsuna\\\\reading-experiment\\\\src\\\\components\\\\LoadingScreen.jsx\";\nimport React from 'react';\nimport './LoadingScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingScreen = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"track\",\n      viewBox: \"0 0 1000 200\",\n      width: \"1000\",\n      height: \"200\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        id: \"motionPath\",\n        d: \"M 50 150 Q 250 0 500 100 Q 750 200 950 50\",\n        fill: \"none\",\n        stroke: \"#e2e8f0\",\n        strokeWidth: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"animateMotion\", {\n          dur: \"5s\",\n          repeatCount: \"indefinite\",\n          rotate: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(\"mpath\", {\n            href: \"#motionPath\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"image\", {\n          href: \"/car.png\" /* adjust path if needed */,\n          width: \"100\",\n          height: \"50\",\n          x: \"-30\" /* offset so image is centered on path */,\n          y: \"-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-text\",\n      children: \"Generating your reading content...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = LoadingScreen;\nexport default LoadingScreen;\nvar _c;\n$RefreshReg$(_c, \"LoadingScreen\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LoadingScreen","className","children","viewBox","width","height","xmlns","id","d","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","dur","repeatCount","rotate","href","x","y","_c","$RefreshReg$"],"sources":["C:/Users/tsuna/reading-experiment/src/components/LoadingScreen.jsx"],"sourcesContent":["import React from 'react';\r\nimport './LoadingScreen.css';\r\n\r\nconst LoadingScreen = () => {\r\n  return (\r\n    <div className=\"loading-container\">\r\n      <svg\r\n        className=\"track\"\r\n        viewBox=\"0 0 1000 200\"\r\n        width=\"1000\"\r\n        height=\"200\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        {/* Track path */}\r\n        <path\r\n          id=\"motionPath\"\r\n          d=\"M 50 150 Q 250 0 500 100 Q 750 200 950 50\"\r\n          fill=\"none\"\r\n          stroke=\"#e2e8f0\"\r\n          strokeWidth=\"4\"\r\n        />\r\n\r\n        {/* Moving car image */}\r\n        <g>\r\n          <animateMotion dur=\"5s\" repeatCount=\"indefinite\" rotate=\"auto\">\r\n            <mpath href=\"#motionPath\" />\r\n          </animateMotion>\r\n          <image\r\n            href=\"/car.png\"    /* adjust path if needed */\r\n            width=\"100\"\r\n            height=\"50\"\r\n            x=\"-30\"           /* offset so image is centered on path */\r\n            y=\"-5\"\r\n          />\r\n        </g>\r\n      </svg>\r\n\r\n      <div className=\"loading-text\">Generating your reading content...</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,oBACED,OAAA;IAAKE,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCH,OAAA;MACEE,SAAS,EAAC,OAAO;MACjBE,OAAO,EAAC,cAAc;MACtBC,KAAK,EAAC,MAAM;MACZC,MAAM,EAAC,KAAK;MACZC,KAAK,EAAC,4BAA4B;MAAAJ,QAAA,gBAGlCH,OAAA;QACEQ,EAAE,EAAC,YAAY;QACfC,CAAC,EAAC,2CAA2C;QAC7CC,IAAI,EAAC,MAAM;QACXC,MAAM,EAAC,SAAS;QAChBC,WAAW,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eAGFhB,OAAA;QAAAG,QAAA,gBACEH,OAAA;UAAeiB,GAAG,EAAC,IAAI;UAACC,WAAW,EAAC,YAAY;UAACC,MAAM,EAAC,MAAM;UAAAhB,QAAA,eAC5DH,OAAA;YAAOoB,IAAI,EAAC;UAAa;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,eAChBhB,OAAA;UACEoB,IAAI,EAAC,UAAU,CAAI;UACnBf,KAAK,EAAC,KAAK;UACXC,MAAM,EAAC,IAAI;UACXe,CAAC,EAAC,KAAK,CAAW;UAClBC,CAAC,EAAC;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAENhB,OAAA;MAAKE,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAkC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEV,CAAC;AAACO,EAAA,GArCItB,aAAa;AAuCnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}