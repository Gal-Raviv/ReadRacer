{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsuna\\\\reading-experiment\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Home from './components/Home';\nimport TutorialReading from './tutorial/TutorialReading';\nimport TutorialQuiz from './tutorial/TutorialQuiz';\nimport TutorialResult from './tutorial/TutorialResult';\nimport ExperimentReading from './experiment/ExperimentReading';\nimport ExperimentQuiz from './experiment/ExperimentQuiz';\nimport ExperimentResult from './experiment/ExperimentResult';\nimport { getOrCreateUserId } from './utils/user';\nimport FAQ from './components/FAQ';\nimport Results from './components/Results';\nimport NavBar from './components/NavBar';\nimport { GoogleOAuthProvider, useGoogleLogin } from '@react-oauth/google';\nimport LoadingScreen from './components/LoadingScreen';\nimport Profile from './components/Profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\nconst tutorialText = `Welcome to Read Racer!\n\nIn this tutorial, you'll experience how our experiment works. \nYou will read a short passage and then answer a few questions to test your understanding.\n\nThe goal is to see how well you comprehend what you read, whether you read the full passage or a summary. \n\nThis helps us study reading speed and accuracy, and you'll get to see your own results at the end!\n\nLet's get started!`;\nconst correctAnswers = {\n  q1: 'Read a passage and answer questions',\n  q2: 'How well you understand what you read',\n  q3Keywords: ['full passage', 'summary', 'summary passage', 'passage', 'short summary']\n};\nfunction App() {\n  _s();\n  const [page, setPage] = useState('home');\n  const [mode, setMode] = useState(null);\n  const [user, setUser] = useState(null);\n  const [useSummary, setUseSummary] = useState(null);\n  const [experimentAnswers, setExperimentAnswers] = useState({});\n  const [experimentSummary, setExperimentSummary] = useState('');\n  const [experimentQuizAnswers, setExperimentQuizAnswers] = useState(null);\n  const [experimentText, setExperimentText] = useState('');\n  const [experimentQuestions, setExperimentQuestions] = useState([]);\n  const [experimentReadingTime, setExperimentReadingTime] = useState(null);\n  const [summaryText, setSummaryText] = useState('');\n  const [tutorialReadingTime, setTutorialReadingTime] = useState(null);\n  const [tutorialQuizAnswers, setTutorialQuizAnswers] = useState(null);\n  const [loadingMessage, setLoadingMessage] = useState(\"Generating your reading content...\");\n  useEffect(() => {\n    const storedUserStr = localStorage.getItem(\"user\");\n    if (!storedUserStr) {\n      setUser(null);\n      return;\n    }\n    try {\n      const storedUser = JSON.parse(storedUserStr);\n      setUser(storedUser);\n    } catch (e) {\n      localStorage.removeItem(\"user\");\n      setUser(null);\n    }\n  }, []);\n  const login = useGoogleLogin({\n    onSuccess: async tokenResponse => {\n      try {\n        console.log(\"[Login] Google token received:\", tokenResponse);\n        const res = await fetch('https://www.googleapis.com/oauth2/v3/userinfo', {\n          headers: {\n            Authorization: `Bearer ${tokenResponse.access_token}`\n          }\n        });\n        const userInfo = await res.json();\n        console.log(\"[Login] Google userInfo:\", userInfo);\n        const profileRes = await fetch(\"https://read-racer.azurewebsites.net/api/getUserProfile\", {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: userInfo.email\n          })\n        });\n        const profileData = await profileRes.json();\n        console.log(\"[Login] Backend profile response:\", profileData);\n        const uuid = profileData.userId || getOrCreateUserId();\n        console.log(\"[Login] Final UUID determined:\", uuid);\n        const userWithProfile = {\n          ...userInfo,\n          uuid,\n          displayName: profileData.displayName || '',\n          leaderboardOptIn: profileData.leaderboardOptIn || false,\n          totalExperiments: profileData.totalExperiments || 0,\n          summaryExperiments: profileData.summaryExperiments || 0,\n          fullPassageExperiments: profileData.fullPassageExperiments || 0,\n          dateJoined: profileData.dateJoined || new Date().toISOString().slice(0, 10)\n        };\n        console.log(\"[Login] Final user object:\", userWithProfile);\n        setUser(userWithProfile);\n        localStorage.setItem(\"user\", JSON.stringify(userWithProfile));\n        setPage('home');\n      } catch (error) {\n        alert('Failed to fetch user info');\n        console.error(\"[Login] Error during login flow:\", error);\n      }\n    },\n    onError: () => alert('Login Failed')\n  });\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    setUser(null);\n    if (page === \"profile\") setPage(\"home\");\n  };\n  const handleNavigate = targetPage => {\n    if (targetPage === \"profile\" && !user) {\n      alert(\"Please sign in to view your profile.\");\n      return;\n    }\n    setPage(targetPage);\n  };\n  function startTutorial() {\n    setMode('tutorial');\n    setPage('reading');\n  }\n  function finishTutorialReading(time) {\n    setTutorialReadingTime(time);\n    setPage('quiz');\n  }\n  function submitTutorialQuiz(answers) {\n    const result = checkAnswers(answers);\n    setTutorialQuizAnswers({\n      ...answers,\n      ...result\n    });\n    setPage('finished');\n  }\n  async function startExperiment() {\n    if (!user) {\n      alert(\"Please sign in to participate in the experiment.\");\n      return;\n    }\n    setMode('experiment');\n    setLoadingMessage(\"Generating your reading content...\");\n    setPage('loading');\n    const assignedSummary = Math.random() < 0.5;\n    setUseSummary(assignedSummary);\n    try {\n      const response = await fetch('https://read-racer.azurewebsites.net/api/generateContent', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: \"any prompt or your own prompt\"\n        })\n      });\n      if (!response.ok) throw new Error('Failed to fetch content');\n      const data = await response.json();\n      setExperimentText(data.passage || data.generatedText || '');\n      setExperimentQuestions(data.questions || []);\n      setExperimentAnswers(data.answers || {});\n      if (assignedSummary) {\n        try {\n          const summaryResponse = await fetch('https://read-racer.azurewebsites.net/api/summarizeText', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              text: data.passage || data.generatedText\n            })\n          });\n          if (!summaryResponse.ok) throw new Error('Failed to fetch summary');\n          const summaryData = await summaryResponse.json();\n          setExperimentSummary(summaryData.summary || summaryData.generatedText || '');\n          setSummaryText(summaryData.summary || '');\n          setPage('reading');\n        } catch (summaryError) {\n          alert('Failed to load summary. Showing full passage instead.');\n          setExperimentSummary('');\n          setSummaryText('');\n          setPage('reading');\n        }\n      } else {\n        setPage('reading');\n      }\n    } catch (error) {\n      alert('Failed to load experiment data. Please try again.');\n      setMode(null);\n      setPage('home');\n    }\n  }\n  async function submitExperimentQuiz(userAnswers) {\n    setLoadingMessage(\"Grading your answers...\");\n    setPage('loading');\n    try {\n      const res = await fetch('https://read-racer.azurewebsites.net/api/analyzeExperimentAnswers', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          answers: userAnswers,\n          questions: experimentQuestions\n        })\n      });\n      if (!res.ok) throw new Error('Failed to submit quiz');\n      const result = await res.json();\n      setExperimentQuizAnswers(result);\n      setPage('finished');\n    } catch (err) {\n      alert('Failed to submit quiz. Please try again.');\n      setPage('quiz');\n    }\n  }\n  function finishExperimentReading(time) {\n    setExperimentReadingTime(time);\n    setPage('quiz');\n  }\n  function checkAnswers(userAnswers) {\n    let score = 0;\n    const total = 3;\n    if ((userAnswers.q1 || '').toLowerCase() === correctAnswers.q1.toLowerCase()) score++;\n    if ((userAnswers.q2 || '').toLowerCase() === correctAnswers.q2.toLowerCase()) score++;\n    const answerText = (userAnswers.q3 || '').toLowerCase();\n    const keywordMatches = correctAnswers.q3Keywords.filter(keyword => answerText.includes(keyword)).length;\n    if (keywordMatches >= correctAnswers.q3Keywords.length / 2) score++;\n    return {\n      score,\n      total,\n      passed: score / total >= 0.8\n    };\n  }\n  function backToHome() {\n    setMode(null);\n    setPage('home');\n    setTutorialReadingTime(null);\n    setTutorialQuizAnswers(null);\n    setExperimentText('');\n    setExperimentQuestions([]);\n    setExperimentQuizAnswers(null);\n    setExperimentReadingTime(null);\n    setUseSummary(null);\n  }\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: clientId,\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      onNavigate: handleNavigate,\n      user: user,\n      onLogin: login,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [page === 'home' && /*#__PURE__*/_jsxDEV(Home, {\n        onStartTutorial: startTutorial,\n        onStartExperiment: startExperiment,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), page === 'profile' && user && /*#__PURE__*/_jsxDEV(Profile, {\n        user: user,\n        setUser: setUser,\n        onLogout: handleLogout,\n        onBackHome: backToHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this), mode === 'tutorial' && page === 'reading' && /*#__PURE__*/_jsxDEV(TutorialReading, {\n        text: tutorialText,\n        onFinish: finishTutorialReading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), mode === 'tutorial' && page === 'quiz' && /*#__PURE__*/_jsxDEV(TutorialQuiz, {\n        onSubmit: submitTutorialQuiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), mode === 'tutorial' && page === 'finished' && /*#__PURE__*/_jsxDEV(TutorialResult, {\n        quizAnswers: tutorialQuizAnswers,\n        readingTime: tutorialReadingTime,\n        onBackHome: backToHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), mode === 'experiment' && page === 'loading' && /*#__PURE__*/_jsxDEV(LoadingScreen, {\n        message: loadingMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 57\n      }, this), mode === 'experiment' && page === 'reading' && /*#__PURE__*/_jsxDEV(ExperimentReading, {\n        passageText: experimentText,\n        summaryText: summaryText,\n        onFinish: finishExperimentReading,\n        useSummary: useSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), mode === 'experiment' && page === 'quiz' && /*#__PURE__*/_jsxDEV(ExperimentQuiz, {\n        questions: experimentQuestions,\n        onSubmit: submitExperimentQuiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), mode === 'experiment' && page === 'finished' && /*#__PURE__*/_jsxDEV(ExperimentResult, {\n        quizAnswers: experimentQuizAnswers,\n        readingTime: experimentReadingTime,\n        passageText: experimentText,\n        summaryText: summaryText,\n        onBackHome: backToHome,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), page === 'faq' && /*#__PURE__*/_jsxDEV(FAQ, {\n        onBackHome: backToHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 28\n      }, this), page === 'results' && /*#__PURE__*/_jsxDEV(Results, {\n        user: user,\n        onBackHome: backToHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ydWydhruqjlSSWX9YBBh9X6/ak8=\", false, function () {\n  return [useGoogleLogin];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Home","TutorialReading","TutorialQuiz","TutorialResult","ExperimentReading","ExperimentQuiz","ExperimentResult","getOrCreateUserId","FAQ","Results","NavBar","GoogleOAuthProvider","useGoogleLogin","LoadingScreen","Profile","jsxDEV","_jsxDEV","clientId","process","env","REACT_APP_GOOGLE_CLIENT_ID","tutorialText","correctAnswers","q1","q2","q3Keywords","App","_s","page","setPage","mode","setMode","user","setUser","useSummary","setUseSummary","experimentAnswers","setExperimentAnswers","experimentSummary","setExperimentSummary","experimentQuizAnswers","setExperimentQuizAnswers","experimentText","setExperimentText","experimentQuestions","setExperimentQuestions","experimentReadingTime","setExperimentReadingTime","summaryText","setSummaryText","tutorialReadingTime","setTutorialReadingTime","tutorialQuizAnswers","setTutorialQuizAnswers","loadingMessage","setLoadingMessage","storedUserStr","localStorage","getItem","storedUser","JSON","parse","e","removeItem","login","onSuccess","tokenResponse","console","log","res","fetch","headers","Authorization","access_token","userInfo","json","profileRes","method","body","stringify","email","profileData","uuid","userId","userWithProfile","displayName","leaderboardOptIn","totalExperiments","summaryExperiments","fullPassageExperiments","dateJoined","Date","toISOString","slice","setItem","error","alert","onError","handleLogout","handleNavigate","targetPage","startTutorial","finishTutorialReading","time","submitTutorialQuiz","answers","result","checkAnswers","startExperiment","assignedSummary","Math","random","response","prompt","ok","Error","data","passage","generatedText","questions","summaryResponse","text","summaryData","summary","summaryError","submitExperimentQuiz","userAnswers","err","finishExperimentReading","score","total","toLowerCase","answerText","q3","keywordMatches","filter","keyword","includes","length","passed","backToHome","children","onNavigate","onLogin","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onStartTutorial","onStartExperiment","onBackHome","onFinish","onSubmit","quizAnswers","readingTime","message","passageText","_c","$RefreshReg$"],"sources":["C:/Users/tsuna/reading-experiment/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Home from './components/Home';\nimport TutorialReading from './tutorial/TutorialReading';\nimport TutorialQuiz from './tutorial/TutorialQuiz';\nimport TutorialResult from './tutorial/TutorialResult';\nimport ExperimentReading from './experiment/ExperimentReading';\nimport ExperimentQuiz from './experiment/ExperimentQuiz';\nimport ExperimentResult from './experiment/ExperimentResult';\nimport { getOrCreateUserId } from './utils/user';\nimport FAQ from './components/FAQ';\nimport Results from './components/Results';\nimport NavBar from './components/NavBar';\nimport { GoogleOAuthProvider, useGoogleLogin } from '@react-oauth/google';\nimport LoadingScreen from './components/LoadingScreen';\nimport Profile from './components/Profile';\n\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\n\nconst tutorialText = `Welcome to Read Racer!\n\nIn this tutorial, you'll experience how our experiment works. \nYou will read a short passage and then answer a few questions to test your understanding.\n\nThe goal is to see how well you comprehend what you read, whether you read the full passage or a summary. \n\nThis helps us study reading speed and accuracy, and you'll get to see your own results at the end!\n\nLet's get started!`;\n\nconst correctAnswers = {\n  q1: 'Read a passage and answer questions',\n  q2: 'How well you understand what you read',\n  q3Keywords: ['full passage', 'summary', 'summary passage', 'passage', 'short summary'],\n};\n\nfunction App() {\n  const [page, setPage] = useState('home');\n  const [mode, setMode] = useState(null);\n  const [user, setUser] = useState(null);\n  const [useSummary, setUseSummary] = useState(null);\n  const [experimentAnswers, setExperimentAnswers] = useState({});\n  const [experimentSummary, setExperimentSummary] = useState('');\n  const [experimentQuizAnswers, setExperimentQuizAnswers] = useState(null);\n  const [experimentText, setExperimentText] = useState('');\n  const [experimentQuestions, setExperimentQuestions] = useState([]);\n  const [experimentReadingTime, setExperimentReadingTime] = useState(null);\n  const [summaryText, setSummaryText] = useState('');\n  const [tutorialReadingTime, setTutorialReadingTime] = useState(null);\n  const [tutorialQuizAnswers, setTutorialQuizAnswers] = useState(null);\n  const [loadingMessage, setLoadingMessage] = useState(\"Generating your reading content...\");\n\n  useEffect(() => {\n    const storedUserStr = localStorage.getItem(\"user\");\n    if (!storedUserStr) {\n      setUser(null);\n      return;\n    }\n    try {\n      const storedUser = JSON.parse(storedUserStr);\n      setUser(storedUser);\n    } catch (e) {\n      localStorage.removeItem(\"user\");\n      setUser(null);\n    }\n  }, []);\n\nconst login = useGoogleLogin({\n  onSuccess: async (tokenResponse) => {\n    try {\n      console.log(\"[Login] Google token received:\", tokenResponse);\n\n      const res = await fetch('https://www.googleapis.com/oauth2/v3/userinfo', {\n        headers: { Authorization: `Bearer ${tokenResponse.access_token}` },\n      });\n      const userInfo = await res.json();\n      console.log(\"[Login] Google userInfo:\", userInfo);\n\n      const profileRes = await fetch(\"https://read-racer.azurewebsites.net/api/getUserProfile\", {\n        method: \"POST\",\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email: userInfo.email }),\n      });\n\n      const profileData = await profileRes.json();\n      console.log(\"[Login] Backend profile response:\", profileData);\n\n      const uuid = profileData.userId || getOrCreateUserId();\n            console.log(\"[Login] Final UUID determined:\", uuid);\n\n      const userWithProfile = {\n        ...userInfo,\n        uuid,\n        displayName: profileData.displayName || '',\n        leaderboardOptIn: profileData.leaderboardOptIn || false,\n        totalExperiments: profileData.totalExperiments || 0,\n        summaryExperiments: profileData.summaryExperiments || 0,\n        fullPassageExperiments: profileData.fullPassageExperiments || 0,\n        dateJoined: profileData.dateJoined || new Date().toISOString().slice(0, 10),\n      };\n\n      console.log(\"[Login] Final user object:\", userWithProfile);\n      setUser(userWithProfile);\n      localStorage.setItem(\"user\", JSON.stringify(userWithProfile));\n      setPage('home');\n    } catch (error) {\n      alert('Failed to fetch user info');\n      console.error(\"[Login] Error during login flow:\", error);\n    }\n  },\n  onError: () => alert('Login Failed'),\n});\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    setUser(null);\n    if (page === \"profile\") setPage(\"home\");\n  };\n\n  const handleNavigate = (targetPage) => {\n    if (targetPage === \"profile\" && !user) {\n      alert(\"Please sign in to view your profile.\");\n      return;\n    }\n    setPage(targetPage);\n  };\n\n  function startTutorial() {\n    setMode('tutorial');\n    setPage('reading');\n  }\n\n  function finishTutorialReading(time) {\n    setTutorialReadingTime(time);\n    setPage('quiz');\n  }\n\n  function submitTutorialQuiz(answers) {\n    const result = checkAnswers(answers);\n    setTutorialQuizAnswers({ ...answers, ...result });\n    setPage('finished');\n  }\n\n  async function startExperiment() {\n    if (!user) {\n      alert(\"Please sign in to participate in the experiment.\");\n      return;\n    }\n\n    setMode('experiment');\n    setLoadingMessage(\"Generating your reading content...\");\n    setPage('loading');\n\n    const assignedSummary = Math.random() < 0.5;\n    setUseSummary(assignedSummary);\n\n    try {\n      const response = await fetch('https://read-racer.azurewebsites.net/api/generateContent', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ prompt: \"any prompt or your own prompt\" }),\n      });\n      if (!response.ok) throw new Error('Failed to fetch content');\n      const data = await response.json();\n\n      setExperimentText(data.passage || data.generatedText || '');\n      setExperimentQuestions(data.questions || []);\n      setExperimentAnswers(data.answers || {});\n\n      if (assignedSummary) {\n        try {\n          const summaryResponse = await fetch('https://read-racer.azurewebsites.net/api/summarizeText', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ text: data.passage || data.generatedText }),\n          });\n          if (!summaryResponse.ok) throw new Error('Failed to fetch summary');\n          const summaryData = await summaryResponse.json();\n          setExperimentSummary(summaryData.summary || summaryData.generatedText || '');\n          setSummaryText(summaryData.summary || '');\n          setPage('reading');\n        } catch (summaryError) {\n          alert('Failed to load summary. Showing full passage instead.');\n          setExperimentSummary('');\n          setSummaryText('');\n          setPage('reading');\n        }\n      } else {\n        setPage('reading');\n      }\n    } catch (error) {\n      alert('Failed to load experiment data. Please try again.');\n      setMode(null);\n      setPage('home');\n    }\n  }\n\n  async function submitExperimentQuiz(userAnswers) {\n    setLoadingMessage(\"Grading your answers...\");\n    setPage('loading');\n    try {\n      const res = await fetch('https://read-racer.azurewebsites.net/api/analyzeExperimentAnswers', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          answers: userAnswers,\n          questions: experimentQuestions,\n        }),\n      });\n      if (!res.ok) throw new Error('Failed to submit quiz');\n      const result = await res.json();\n      setExperimentQuizAnswers(result);\n      setPage('finished');\n    } catch (err) {\n      alert('Failed to submit quiz. Please try again.');\n      setPage('quiz');\n    }\n  }\n\n  function finishExperimentReading(time) {\n    setExperimentReadingTime(time);\n    setPage('quiz');\n  }\n\n  function checkAnswers(userAnswers) {\n    let score = 0;\n    const total = 3;\n\n    if ((userAnswers.q1 || '').toLowerCase() === correctAnswers.q1.toLowerCase()) score++;\n    if ((userAnswers.q2 || '').toLowerCase() === correctAnswers.q2.toLowerCase()) score++;\n\n    const answerText = (userAnswers.q3 || '').toLowerCase();\n    const keywordMatches = correctAnswers.q3Keywords.filter((keyword) =>\n      answerText.includes(keyword)\n    ).length;\n\n    if (keywordMatches >= correctAnswers.q3Keywords.length / 2) score++;\n\n    return { score, total, passed: score / total >= 0.8 };\n  }\n\n  function backToHome() {\n    setMode(null);\n    setPage('home');\n    setTutorialReadingTime(null);\n    setTutorialQuizAnswers(null);\n    setExperimentText('');\n    setExperimentQuestions([]);\n    setExperimentQuizAnswers(null);\n    setExperimentReadingTime(null);\n    setUseSummary(null);\n  }\n\n  return (\n    <GoogleOAuthProvider clientId={clientId}>\n      <NavBar\n        onNavigate={handleNavigate}\n        user={user}\n        onLogin={login}\n        onLogout={handleLogout}\n      />\n\n      <main>\n        {page === 'home' && (\n          <Home onStartTutorial={startTutorial} onStartExperiment={startExperiment} user={user} />\n        )}\n\n        {page === 'profile' && user && (\n          <Profile user={user} setUser={setUser} onLogout={handleLogout} onBackHome={backToHome} />\n        )}\n\n        {mode === 'tutorial' && page === 'reading' && (\n          <TutorialReading text={tutorialText} onFinish={finishTutorialReading} />\n        )}\n        {mode === 'tutorial' && page === 'quiz' && (\n          <TutorialQuiz onSubmit={submitTutorialQuiz} />\n        )}\n        {mode === 'tutorial' && page === 'finished' && (\n          <TutorialResult quizAnswers={tutorialQuizAnswers} readingTime={tutorialReadingTime} onBackHome={backToHome} />\n        )}\n\n        {mode === 'experiment' && page === 'loading' && <LoadingScreen message={loadingMessage} />}\n        {mode === 'experiment' && page === 'reading' && (\n          <ExperimentReading\n            passageText={experimentText}\n            summaryText={summaryText}\n            onFinish={finishExperimentReading}\n            useSummary={useSummary}\n          />\n        )}\n        {mode === 'experiment' && page === 'quiz' && (\n          <ExperimentQuiz questions={experimentQuestions} onSubmit={submitExperimentQuiz} />\n        )}\n        {mode === 'experiment' && page === 'finished' && (\n          <ExperimentResult\n            quizAnswers={experimentQuizAnswers}\n            readingTime={experimentReadingTime}\n            passageText={experimentText}\n            summaryText={summaryText}\n            onBackHome={backToHome}\n            user={user}\n          />\n        )}\n\n        {page === 'faq' && <FAQ onBackHome={backToHome} />}\n        {page === 'results' && <Results user={user} onBackHome={backToHome} />}\n      </main>\n    </GoogleOAuthProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}