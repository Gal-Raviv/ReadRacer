{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsuna\\\\reading-experiment\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Home from './Home';\nimport ReadingRoom from './ReadingRoom';\nimport Quiz from './Quiz';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst sampleText = `This is a sample AI-generated text for the reading experiment. \nUsers will read this and then answer questions.`;\nconst correctAnswers = {\n  q1: 'b',\n  q2: 'b',\n  q3Keywords: ['read', 'answer', 'questions', 'experiment']\n};\nfunction checkAnswers(userAnswers) {\n  let score = 0;\n  let total = 3;\n  if (userAnswers.q1 === correctAnswers.q1) score++;\n  if (userAnswers.q2 === correctAnswers.q2) score++;\n  const answerText = userAnswers.q3.toLowerCase();\n  let keywordMatches = 0;\n  correctAnswers.q3Keywords.forEach(keyword => {\n    if (answerText.includes(keyword)) keywordMatches++;\n  });\n  if (keywordMatches >= correctAnswers.q3Keywords.length / 2) score++;\n  return {\n    score,\n    total,\n    passed: score / total >= 0.8\n  };\n}\nfunction App() {\n  _s();\n  const [page, setPage] = useState('home');\n  const [isTutorial, setIsTutorial] = useState(false);\n  const [readingTime, setReadingTime] = useState(null);\n  const [quizAnswers, setQuizAnswers] = useState(null);\n  function startTutorial() {\n    setIsTutorial(true);\n    setPage('reading');\n  }\n  function startExperiment() {\n    setIsTutorial(false);\n    setPage('reading');\n  }\n  function finishReading(time) {\n    setReadingTime(time);\n    setPage('quiz');\n  }\n  function submitQuiz(answers) {\n    const result = checkAnswers(answers);\n    setQuizAnswers({\n      ...answers,\n      ...result\n    });\n    setPage('finished');\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [page === 'home' && /*#__PURE__*/_jsxDEV(Home, {\n      onStartTutorial: startTutorial,\n      onStartExperiment: startExperiment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), page === 'reading' && /*#__PURE__*/_jsxDEV(ReadingRoom, {\n      text: sampleText,\n      onFinish: finishReading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 30\n    }, this), page === 'quiz' && /*#__PURE__*/_jsxDEV(Quiz, {\n      onSubmit: submitQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 27\n    }, this), page === 'finished' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex flex-col items-center justify-center p-6 max-w-md mx-auto text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl mb-4\",\n        children: isTutorial ? 'Tutorial Complete!' : 'Experiment Complete!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-2\",\n        children: [\"Reading time: \", readingTime, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-2\",\n        children: [\"Your score: \", quizAnswers.score, \" / \", quizAnswers.total, \" (\", quizAnswers.score / quizAnswers.total * 100, \"%)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `mb-6 font-semibold ${quizAnswers.passed ? 'text-green-600' : 'text-red-600'}`,\n        children: isTutorial ? quizAnswers.passed ? 'Nice job! You completed the tutorial.' : 'That’s okay — this was just practice.' : quizAnswers.passed ? 'Well done! You passed the experiment.' : 'You did not pass. Try again later.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('home'),\n        className: \"px-6 py-3 bg-blue-600 text-white rounded hover:bg-blue-700 transition\",\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"qMXcv1JlzrfhJCzQDpHTw+FUQVE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Home","ReadingRoom","Quiz","jsxDEV","_jsxDEV","Fragment","_Fragment","sampleText","correctAnswers","q1","q2","q3Keywords","checkAnswers","userAnswers","score","total","answerText","q3","toLowerCase","keywordMatches","forEach","keyword","includes","length","passed","App","_s","page","setPage","isTutorial","setIsTutorial","readingTime","setReadingTime","quizAnswers","setQuizAnswers","startTutorial","startExperiment","finishReading","time","submitQuiz","answers","result","children","onStartTutorial","onStartExperiment","fileName","_jsxFileName","lineNumber","columnNumber","text","onFinish","onSubmit","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tsuna/reading-experiment/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Home from './Home';\nimport ReadingRoom from './ReadingRoom';\nimport Quiz from './Quiz';\n\nconst sampleText = `This is a sample AI-generated text for the reading experiment. \nUsers will read this and then answer questions.`;\n\nconst correctAnswers = {\n  q1: 'b',\n  q2: 'b',\n  q3Keywords: ['read', 'answer', 'questions', 'experiment'],\n};\n\nfunction checkAnswers(userAnswers) {\n  let score = 0;\n  let total = 3;\n\n  if (userAnswers.q1 === correctAnswers.q1) score++;\n  if (userAnswers.q2 === correctAnswers.q2) score++;\n\n  const answerText = userAnswers.q3.toLowerCase();\n  let keywordMatches = 0;\n  correctAnswers.q3Keywords.forEach((keyword) => {\n    if (answerText.includes(keyword)) keywordMatches++;\n  });\n  if (keywordMatches >= correctAnswers.q3Keywords.length / 2) score++;\n\n  return { score, total, passed: score / total >= 0.8 };\n}\n\nfunction App() {\n  const [page, setPage] = useState('home');\n  const [isTutorial, setIsTutorial] = useState(false);\n  const [readingTime, setReadingTime] = useState(null);\n  const [quizAnswers, setQuizAnswers] = useState(null);\n\n  function startTutorial() {\n    setIsTutorial(true);\n    setPage('reading');\n  }\n\n  function startExperiment() {\n    setIsTutorial(false);\n    setPage('reading');\n  }\n\n  function finishReading(time) {\n    setReadingTime(time);\n    setPage('quiz');\n  }\n\n  function submitQuiz(answers) {\n    const result = checkAnswers(answers);\n    setQuizAnswers({ ...answers, ...result });\n    setPage('finished');\n  }\n\n  return (\n    <>\n      {page === 'home' && (\n        <Home onStartTutorial={startTutorial} onStartExperiment={startExperiment} />\n      )}\n      {page === 'reading' && <ReadingRoom text={sampleText} onFinish={finishReading} />}\n      {page === 'quiz' && <Quiz onSubmit={submitQuiz} />}\n      {page === 'finished' && (\n        <div className=\"min-h-screen flex flex-col items-center justify-center p-6 max-w-md mx-auto text-center\">\n          <h2 className=\"text-2xl mb-4\">\n            {isTutorial ? 'Tutorial Complete!' : 'Experiment Complete!'}\n          </h2>\n          <p className=\"mb-2\">Reading time: {readingTime} seconds</p>\n          <p className=\"mb-2\">\n            Your score: {quizAnswers.score} / {quizAnswers.total} (\n            {(quizAnswers.score / quizAnswers.total) * 100}%)\n          </p>\n          <p\n            className={`mb-6 font-semibold ${\n              quizAnswers.passed ? 'text-green-600' : 'text-red-600'\n            }`}\n          >\n            {isTutorial\n              ? quizAnswers.passed\n                ? 'Nice job! You completed the tutorial.'\n                : 'That’s okay — this was just practice.'\n              : quizAnswers.passed\n              ? 'Well done! You passed the experiment.'\n              : 'You did not pass. Try again later.'}\n          </p>\n          <button\n            onClick={() => setPage('home')}\n            className=\"px-6 py-3 bg-blue-600 text-white rounded hover:bg-blue-700 transition\"\n          >\n            Back to Home\n          </button>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}