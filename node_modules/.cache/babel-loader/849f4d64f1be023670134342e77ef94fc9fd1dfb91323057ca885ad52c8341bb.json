{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsuna\\\\reading-experiment\\\\src\\\\components\\\\GlobalResults.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\n\n// Custom Tooltip to show key info only\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload\n}) => {\n  if (active && payload && payload.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-2 rounded shadow border text-sm\",\n      children: payload.map((entry, index) => {\n        var _entry$payload, _entry$name, _ref, _data$value, _data$accuracy;\n        const data = (_entry$payload = entry.payload) !== null && _entry$payload !== void 0 ? _entry$payload : {};\n        const isAverage = (_entry$name = entry.name) === null || _entry$name === void 0 ? void 0 : _entry$name.toLowerCase().includes(\"avg\");\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 border-b last:border-b-0 pb-1\",\n          children: [isAverage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-red-600 font-semibold mb-1\",\n            children: \"Global Average\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Reading Speed:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this), \" \", Math.round((_ref = (_data$value = data.value) !== null && _data$value !== void 0 ? _data$value : data.readingSpeed) !== null && _ref !== void 0 ? _ref : 0), \" WPM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Accuracy:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), \" \", (((_data$accuracy = data.accuracy) !== null && _data$accuracy !== void 0 ? _data$accuracy : 0) * 100).toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), typeof data.points === \"number\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Points:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this), \" \", data.points.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_c = CustomTooltip;\nconst GlobalStats = () => {\n  _s();\n  var _ref7, _ref8, _data$summaryAvg$effe, _data$summaryAvg, _data$summaryAvg2, _data$summaryAvg3, _ref9, _ref0, _data$summaryAvg$real, _data$summaryAvg4, _data$summaryAvg5, _data$summaryAvg6, _ref1, _data$passageAvg$real, _data$passageAvg, _data$passageAvg2, _data$summaryAvg$accu, _data$passageAvg$accu;\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [mode, setMode] = useState(\"effective\"); // \"effective\" or \"real\"\n\n  // Toggle for showing all global averages (stars)\n  const [showGlobalAvg, setShowGlobalAvg] = useState(true);\n  useEffect(() => {\n    fetch(\"https://read-racer.azurewebsites.net/api/getGlobalStats\").then(res => res.json()).then(json => {\n      setData({\n        summary: json.summaryAttempts || [],\n        passage: json.passageAttempts || [],\n        summaryAvg: json.summaryAvg,\n        passageAvg: json.passageAvg,\n        leaderboardSummary: json.leaderboardSummary || [],\n        leaderboardPassage: json.leaderboardPassage || []\n      });\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"Failed to fetch global stats:\", err);\n      setError(\"Failed to load data\");\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-6\",\n    children: \"Loading global stats...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 12\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-6 text-red-500\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 12\n  }, this);\n\n  // Prepare participant attempts data (always shown)\n  const summaryData = data.summary.map(a => {\n    var _ref2, _ref3, _a$effectiveWPM, _ref4, _ref5, _a$realWPM, _a$accuracy, _a$points;\n    return {\n      value: mode === \"effective\" ? (_ref2 = (_ref3 = (_a$effectiveWPM = a.effectiveWPM) !== null && _a$effectiveWPM !== void 0 ? _a$effectiveWPM : a.realWPM) !== null && _ref3 !== void 0 ? _ref3 : a.readingSpeed) !== null && _ref2 !== void 0 ? _ref2 : 0 : (_ref4 = (_ref5 = (_a$realWPM = a.realWPM) !== null && _a$realWPM !== void 0 ? _a$realWPM : a.effectiveWPM) !== null && _ref5 !== void 0 ? _ref5 : a.readingSpeed) !== null && _ref4 !== void 0 ? _ref4 : 0,\n      accuracy: (_a$accuracy = a.accuracy) !== null && _a$accuracy !== void 0 ? _a$accuracy : 0,\n      points: (_a$points = a.points) !== null && _a$points !== void 0 ? _a$points : null\n    };\n  });\n  const passageData = data.passage.map(a => {\n    var _ref6, _a$realWPM2, _a$accuracy2, _a$points2;\n    return {\n      value: (_ref6 = (_a$realWPM2 = a.realWPM) !== null && _a$realWPM2 !== void 0 ? _a$realWPM2 : a.readingSpeed) !== null && _ref6 !== void 0 ? _ref6 : 0,\n      accuracy: (_a$accuracy2 = a.accuracy) !== null && _a$accuracy2 !== void 0 ? _a$accuracy2 : 0,\n      points: (_a$points2 = a.points) !== null && _a$points2 !== void 0 ? _a$points2 : null\n    };\n  });\n\n  // Prepare global average values\n  const summaryAvgValue = mode === \"effective\" ? (_ref7 = (_ref8 = (_data$summaryAvg$effe = (_data$summaryAvg = data.summaryAvg) === null || _data$summaryAvg === void 0 ? void 0 : _data$summaryAvg.effectiveWPM) !== null && _data$summaryAvg$effe !== void 0 ? _data$summaryAvg$effe : (_data$summaryAvg2 = data.summaryAvg) === null || _data$summaryAvg2 === void 0 ? void 0 : _data$summaryAvg2.realWPM) !== null && _ref8 !== void 0 ? _ref8 : (_data$summaryAvg3 = data.summaryAvg) === null || _data$summaryAvg3 === void 0 ? void 0 : _data$summaryAvg3.readingSpeed) !== null && _ref7 !== void 0 ? _ref7 : 0 : (_ref9 = (_ref0 = (_data$summaryAvg$real = (_data$summaryAvg4 = data.summaryAvg) === null || _data$summaryAvg4 === void 0 ? void 0 : _data$summaryAvg4.realWPM) !== null && _data$summaryAvg$real !== void 0 ? _data$summaryAvg$real : (_data$summaryAvg5 = data.summaryAvg) === null || _data$summaryAvg5 === void 0 ? void 0 : _data$summaryAvg5.effectiveWPM) !== null && _ref0 !== void 0 ? _ref0 : (_data$summaryAvg6 = data.summaryAvg) === null || _data$summaryAvg6 === void 0 ? void 0 : _data$summaryAvg6.readingSpeed) !== null && _ref9 !== void 0 ? _ref9 : 0;\n  const passageAvgValue = (_ref1 = (_data$passageAvg$real = (_data$passageAvg = data.passageAvg) === null || _data$passageAvg === void 0 ? void 0 : _data$passageAvg.realWPM) !== null && _data$passageAvg$real !== void 0 ? _data$passageAvg$real : (_data$passageAvg2 = data.passageAvg) === null || _data$passageAvg2 === void 0 ? void 0 : _data$passageAvg2.readingSpeed) !== null && _ref1 !== void 0 ? _ref1 : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold text-center\",\n      children: \"Global Experiment Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 flex flex-wrap justify-center items-center gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"inline-flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: showGlobalAvg,\n          onChange: () => setShowGlobalAvg(prev => !prev),\n          className: \"form-checkbox h-5 w-5 rounded\",\n          style: {\n            accentColor: \"#2563eb\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Show Global Averages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"inline-flex items-center space-x-2 ml-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: \"Select Graph Mode:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: mode,\n          onChange: e => setMode(e.target.value),\n          className: \"border rounded p-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"effective\",\n            children: \"Effective WPM (AI Summaries)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"real\",\n            children: \"Real WPM (AI Summaries)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-2 text-indigo-700\",\n        children: mode === \"effective\" ? \"Effective WPM (AI Summaries) vs Reading Speed (Full Passage)\" : \"Real WPM (AI Summaries) vs Reading Speed (Full Passage)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 350,\n        children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n          margin: {\n            top: 10,\n            right: 20,\n            bottom: 20,\n            left: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            type: \"number\",\n            dataKey: \"value\",\n            name: \"Reading Speed (WPM)\",\n            unit: \" WPM\",\n            domain: [\"auto\", \"auto\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            type: \"number\",\n            dataKey: \"accuracy\",\n            name: \"Accuracy\",\n            domain: [0, 1],\n            tickFormatter: tick => `${(tick * 100).toFixed(0)}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 31\n            }, this),\n            cursor: {\n              strokeDasharray: \"3 3\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            formatter: value => {\n              if (value === \"AI Summaries\") return \"AI Summaries (Participants)\";\n              if (value === \"Full Passage\") return \"Full Passage (Participants)\";\n              if (value === \"Avg AI Summaries\") return \"Average AI Summaries\";\n              if (value === \"Avg Full Passage\") return \"Average Full Passage\";\n              return value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"AI Summaries\",\n            data: summaryData,\n            fill: \"#3b82f6\",\n            shape: \"circle\",\n            dataKey: {\n              x: \"value\",\n              y: \"accuracy\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Full Passage\",\n            data: passageData,\n            fill: \"#10b981\",\n            shape: \"circle\",\n            dataKey: {\n              x: \"value\",\n              y: \"accuracy\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), showGlobalAvg && data.summaryAvg && /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Avg AI Summaries\",\n            data: [{\n              value: summaryAvgValue,\n              accuracy: (_data$summaryAvg$accu = data.summaryAvg.accuracy) !== null && _data$summaryAvg$accu !== void 0 ? _data$summaryAvg$accu : 0\n            }],\n            fill: \"#ef4444\",\n            shape: \"star\",\n            dataKey: {\n              x: \"value\",\n              y: \"accuracy\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), showGlobalAvg && data.passageAvg && /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Avg Full Passage\",\n            data: [{\n              value: passageAvgValue,\n              accuracy: (_data$passageAvg$accu = data.passageAvg.accuracy) !== null && _data$passageAvg$accu !== void 0 ? _data$passageAvg$accu : 0\n            }],\n            fill: \"#fbbf24\",\n            shape: \"star\",\n            dataKey: {\n              x: \"value\",\n              y: \"accuracy\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-3\",\n        children: \"Leaderboard \\u2014 AI Summaries (Top 10 by Points)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full border rounded-xl overflow-hidden text-left mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-100\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Speed (WPM)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Accuracy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.leaderboardSummary.slice(0, 10).map((entry, index) => {\n            var _ref10, _entry$readingSpeed, _entry$accuracy;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"border-t\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4 font-bold\",\n                children: [\"#\", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4 font-mono text-sm\",\n                children: entry.userName || \"Anonymous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4\",\n                children: entry.points.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4\",\n                children: Math.round((_ref10 = (_entry$readingSpeed = entry.readingSpeed) !== null && _entry$readingSpeed !== void 0 ? _entry$readingSpeed : entry.realWPM) !== null && _ref10 !== void 0 ? _ref10 : 0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4\",\n                children: [(((_entry$accuracy = entry.accuracy) !== null && _entry$accuracy !== void 0 ? _entry$accuracy : 0) * 100).toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-3\",\n        children: \"Leaderboard \\u2014 Full Passages (Top 10 by Points)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full border rounded-xl overflow-hidden text-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-100\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Speed (WPM)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4\",\n              children: \"Accuracy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.leaderboardPassage.slice(0, 10).map((entry, index) => {\n            var _ref11, _entry$readingSpeed2, _entry$accuracy2;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"border-t\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4 font-bold\",\n                children: [\"#\", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4 font-mono text-sm\",\n                children: entry.userName || \"Anonymous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4\",\n                children: entry.points.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4\",\n                children: Math.round((_ref11 = (_entry$readingSpeed2 = entry.readingSpeed) !== null && _entry$readingSpeed2 !== void 0 ? _entry$readingSpeed2 : entry.realWPM) !== null && _ref11 !== void 0 ? _ref11 : 0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-2 px-4\",\n                children: [(((_entry$accuracy2 = entry.accuracy) !== null && _entry$accuracy2 !== void 0 ? _entry$accuracy2 : 0) * 100).toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(GlobalStats, \"8wyYflIGJZjvvODHpie+rhTfvyE=\");\n_c2 = GlobalStats;\nexport default GlobalStats;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"GlobalStats\");","map":{"version":3,"names":["React","useEffect","useState","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","CustomTooltip","active","payload","length","className","children","map","entry","index","_entry$payload","_entry$name","_ref","_data$value","_data$accuracy","data","isAverage","name","toLowerCase","includes","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","value","readingSpeed","accuracy","toFixed","points","_c","GlobalStats","_s","_ref7","_ref8","_data$summaryAvg$effe","_data$summaryAvg","_data$summaryAvg2","_data$summaryAvg3","_ref9","_ref0","_data$summaryAvg$real","_data$summaryAvg4","_data$summaryAvg5","_data$summaryAvg6","_ref1","_data$passageAvg$real","_data$passageAvg","_data$passageAvg2","_data$summaryAvg$accu","_data$passageAvg$accu","setData","loading","setLoading","error","setError","mode","setMode","showGlobalAvg","setShowGlobalAvg","fetch","then","res","json","summary","summaryAttempts","passage","passageAttempts","summaryAvg","passageAvg","leaderboardSummary","leaderboardPassage","catch","err","console","summaryData","a","_ref2","_ref3","_a$effectiveWPM","_ref4","_ref5","_a$realWPM","_a$accuracy","_a$points","effectiveWPM","realWPM","passageData","_ref6","_a$realWPM2","_a$accuracy2","_a$points2","summaryAvgValue","passageAvgValue","type","checked","onChange","prev","style","accentColor","e","target","width","height","margin","top","right","bottom","left","dataKey","unit","domain","tickFormatter","tick","content","cursor","strokeDasharray","formatter","fill","shape","x","y","slice","_ref10","_entry$readingSpeed","_entry$accuracy","userName","_ref11","_entry$readingSpeed2","_entry$accuracy2","_c2","$RefreshReg$"],"sources":["C:/Users/tsuna/reading-experiment/src/components/GlobalResults.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\n// Custom Tooltip to show key info only\r\nconst CustomTooltip = ({ active, payload }) => {\r\n  if (active && payload && payload.length > 0) {\r\n    return (\r\n      <div className=\"bg-white p-2 rounded shadow border text-sm\">\r\n        {payload.map((entry, index) => {\r\n          const data = entry.payload ?? {};\r\n          const isAverage = entry.name?.toLowerCase().includes(\"avg\");\r\n\r\n          return (\r\n            <div key={index} className=\"mb-2 border-b last:border-b-0 pb-1\">\r\n              {isAverage && (\r\n                <p className=\"text-xs text-red-600 font-semibold mb-1\">\r\n                  Global Average\r\n                </p>\r\n              )}\r\n              <p>\r\n                <strong>Reading Speed:</strong>{\" \"}\r\n                {Math.round(data.value ?? data.readingSpeed ?? 0)} WPM\r\n              </p>\r\n              <p>\r\n                <strong>Accuracy:</strong>{\" \"}\r\n                {((data.accuracy ?? 0) * 100).toFixed(1)}%\r\n              </p>\r\n              {typeof data.points === \"number\" && (\r\n                <p>\r\n                  <strong>Points:</strong> {data.points.toFixed(2)}\r\n                </p>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst GlobalStats = () => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [mode, setMode] = useState(\"effective\"); // \"effective\" or \"real\"\r\n\r\n  // Toggle for showing all global averages (stars)\r\n  const [showGlobalAvg, setShowGlobalAvg] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://read-racer.azurewebsites.net/api/getGlobalStats\")\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setData({\r\n          summary: json.summaryAttempts || [],\r\n          passage: json.passageAttempts || [],\r\n          summaryAvg: json.summaryAvg,\r\n          passageAvg: json.passageAvg,\r\n          leaderboardSummary: json.leaderboardSummary || [],\r\n          leaderboardPassage: json.leaderboardPassage || [],\r\n        });\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Failed to fetch global stats:\", err);\r\n        setError(\"Failed to load data\");\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  if (loading)\r\n    return <div className=\"text-center p-6\">Loading global stats...</div>;\r\n  if (error)\r\n    return <div className=\"text-center p-6 text-red-500\">{error}</div>;\r\n\r\n  // Prepare participant attempts data (always shown)\r\n  const summaryData = data.summary.map((a) => ({\r\n    value:\r\n      mode === \"effective\"\r\n        ? a.effectiveWPM ?? a.realWPM ?? a.readingSpeed ?? 0\r\n        : a.realWPM ?? a.effectiveWPM ?? a.readingSpeed ?? 0,\r\n    accuracy: a.accuracy ?? 0,\r\n    points: a.points ?? null,\r\n  }));\r\n\r\n  const passageData = data.passage.map((a) => ({\r\n    value: a.realWPM ?? a.readingSpeed ?? 0,\r\n    accuracy: a.accuracy ?? 0,\r\n    points: a.points ?? null,\r\n  }));\r\n\r\n  // Prepare global average values\r\n  const summaryAvgValue =\r\n    mode === \"effective\"\r\n      ? data.summaryAvg?.effectiveWPM ?? data.summaryAvg?.realWPM ?? data.summaryAvg?.readingSpeed ?? 0\r\n      : data.summaryAvg?.realWPM ?? data.summaryAvg?.effectiveWPM ?? data.summaryAvg?.readingSpeed ?? 0;\r\n\r\n  const passageAvgValue =\r\n    data.passageAvg?.realWPM ?? data.passageAvg?.readingSpeed ?? 0;\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-4xl mx-auto space-y-8\">\r\n      <h2 className=\"text-3xl font-bold text-center\">Global Experiment Stats</h2>\r\n\r\n      {/* Controls: Single checkbox for global averages and mode selector */}\r\n      <div className=\"mb-4 flex flex-wrap justify-center items-center gap-6\">\r\n        <label className=\"inline-flex items-center space-x-2\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={showGlobalAvg}\r\n            onChange={() => setShowGlobalAvg((prev) => !prev)}\r\n            className=\"form-checkbox h-5 w-5 rounded\"\r\n            style={{ accentColor: \"#2563eb\" }}\r\n          />\r\n          <span>Show Global Averages</span>\r\n        </label>\r\n\r\n        <label className=\"inline-flex items-center space-x-2 ml-auto\">\r\n          <span className=\"font-semibold\">Select Graph Mode:</span>\r\n          <select\r\n            value={mode}\r\n            onChange={(e) => setMode(e.target.value)}\r\n            className=\"border rounded p-1\"\r\n          >\r\n            <option value=\"effective\">Effective WPM (AI Summaries)</option>\r\n            <option value=\"real\">Real WPM (AI Summaries)</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n\r\n      {/* Combined Scatter Chart */}\r\n      <div>\r\n        <h3 className=\"text-xl font-semibold mb-2 text-indigo-700\">\r\n          {mode === \"effective\"\r\n            ? \"Effective WPM (AI Summaries) vs Reading Speed (Full Passage)\"\r\n            : \"Real WPM (AI Summaries) vs Reading Speed (Full Passage)\"}\r\n        </h3>\r\n        <ResponsiveContainer width=\"100%\" height={350}>\r\n          <ScatterChart margin={{ top: 10, right: 20, bottom: 20, left: 0 }}>\r\n            <CartesianGrid />\r\n            <XAxis\r\n              type=\"number\"\r\n              dataKey=\"value\"\r\n              name=\"Reading Speed (WPM)\"\r\n              unit=\" WPM\"\r\n              domain={[\"auto\", \"auto\"]}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              dataKey=\"accuracy\"\r\n              name=\"Accuracy\"\r\n              domain={[0, 1]}\r\n              tickFormatter={(tick) => `${(tick * 100).toFixed(0)}%`}\r\n            />\r\n            <Tooltip content={<CustomTooltip />} cursor={{ strokeDasharray: \"3 3\" }} />\r\n            <Legend\r\n              formatter={(value) => {\r\n                if (value === \"AI Summaries\") return \"AI Summaries (Participants)\";\r\n                if (value === \"Full Passage\") return \"Full Passage (Participants)\";\r\n                if (value === \"Avg AI Summaries\") return \"Average AI Summaries\";\r\n                if (value === \"Avg Full Passage\") return \"Average Full Passage\";\r\n                return value;\r\n              }}\r\n            />\r\n\r\n            {/* Participant Attempts - always visible */}\r\n            <Scatter\r\n              name=\"AI Summaries\"\r\n              data={summaryData}\r\n              fill=\"#3b82f6\"\r\n              shape=\"circle\"\r\n              dataKey={{ x: \"value\", y: \"accuracy\" }}\r\n            />\r\n            <Scatter\r\n              name=\"Full Passage\"\r\n              data={passageData}\r\n              fill=\"#10b981\"\r\n              shape=\"circle\"\r\n              dataKey={{ x: \"value\", y: \"accuracy\" }}\r\n            />\r\n\r\n            {/* Global averages toggled by one checkbox */}\r\n            {showGlobalAvg && data.summaryAvg && (\r\n              <Scatter\r\n                name=\"Avg AI Summaries\"\r\n                data={[{ value: summaryAvgValue, accuracy: data.summaryAvg.accuracy ?? 0 }]}\r\n                fill=\"#ef4444\"\r\n                shape=\"star\"\r\n                dataKey={{ x: \"value\", y: \"accuracy\" }}\r\n              />\r\n            )}\r\n            {showGlobalAvg && data.passageAvg && (\r\n              <Scatter\r\n                name=\"Avg Full Passage\"\r\n                data={[{ value: passageAvgValue, accuracy: data.passageAvg.accuracy ?? 0 }]}\r\n                fill=\"#fbbf24\"\r\n                shape=\"star\"\r\n                dataKey={{ x: \"value\", y: \"accuracy\" }}\r\n              />\r\n            )}\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n\r\n      {/* Leaderboards */}\r\n      <div>\r\n        <h3 className=\"text-xl font-semibold mb-3\">Leaderboard — AI Summaries (Top 10 by Points)</h3>\r\n        <table className=\"w-full border rounded-xl overflow-hidden text-left mb-8\">\r\n          <thead className=\"bg-gray-100\">\r\n            <tr>\r\n              <th className=\"py-2 px-4\">Rank</th>\r\n              <th className=\"py-2 px-4\">User</th>\r\n              <th className=\"py-2 px-4\">Points</th>\r\n              <th className=\"py-2 px-4\">Speed (WPM)</th>\r\n              <th className=\"py-2 px-4\">Accuracy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.leaderboardSummary.slice(0, 10).map((entry, index) => (\r\n              <tr key={index} className=\"border-t\">\r\n                <td className=\"py-2 px-4 font-bold\">#{index + 1}</td>\r\n                <td className=\"py-2 px-4 font-mono text-sm\">{entry.userName || \"Anonymous\"}</td>\r\n                <td className=\"py-2 px-4\">{entry.points.toFixed(2)}</td>\r\n                <td className=\"py-2 px-4\">{Math.round(entry.readingSpeed ?? entry.realWPM ?? 0)}</td>\r\n                <td className=\"py-2 px-4\">{((entry.accuracy ?? 0) * 100).toFixed(1)}%</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <h3 className=\"text-xl font-semibold mb-3\">Leaderboard — Full Passages (Top 10 by Points)</h3>\r\n        <table className=\"w-full border rounded-xl overflow-hidden text-left\">\r\n          <thead className=\"bg-gray-100\">\r\n            <tr>\r\n              <th className=\"py-2 px-4\">Rank</th>\r\n              <th className=\"py-2 px-4\">User</th>\r\n              <th className=\"py-2 px-4\">Points</th>\r\n              <th className=\"py-2 px-4\">Speed (WPM)</th>\r\n              <th className=\"py-2 px-4\">Accuracy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.leaderboardPassage.slice(0, 10).map((entry, index) => (\r\n              <tr key={index} className=\"border-t\">\r\n                <td className=\"py-2 px-4 font-bold\">#{index + 1}</td>\r\n                <td className=\"py-2 px-4 font-mono text-sm\">{entry.userName || \"Anonymous\"}</td>\r\n                <td className=\"py-2 px-4\">{entry.points.toFixed(2)}</td>\r\n                <td className=\"py-2 px-4\">{Math.round(entry.readingSpeed ?? entry.realWPM ?? 0)}</td>\r\n                <td className=\"py-2 px-4\">{((entry.accuracy ?? 0) * 100).toFixed(1)}%</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GlobalStats;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,YAAY,EACZC,OAAO,EACPC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,MAAM,EACNC,mBAAmB,QACd,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EAC7C,IAAID,MAAM,IAAIC,OAAO,IAAIA,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;IAC3C,oBACEJ,OAAA;MAAKK,SAAS,EAAC,4CAA4C;MAAAC,QAAA,EACxDH,OAAO,CAACI,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;QAAA,IAAAC,cAAA,EAAAC,WAAA,EAAAC,IAAA,EAAAC,WAAA,EAAAC,cAAA;QAC7B,MAAMC,IAAI,IAAAL,cAAA,GAAGF,KAAK,CAACL,OAAO,cAAAO,cAAA,cAAAA,cAAA,GAAI,CAAC,CAAC;QAChC,MAAMM,SAAS,IAAAL,WAAA,GAAGH,KAAK,CAACS,IAAI,cAAAN,WAAA,uBAAVA,WAAA,CAAYO,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,KAAK,CAAC;QAE3D,oBACEnB,OAAA;UAAiBK,SAAS,EAAC,oCAAoC;UAAAC,QAAA,GAC5DU,SAAS,iBACRhB,OAAA;YAAGK,SAAS,EAAC,yCAAyC;YAAAC,QAAA,EAAC;UAEvD;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACJ,eACDvB,OAAA;YAAAM,QAAA,gBACEN,OAAA;cAAAM,QAAA,EAAQ;YAAc;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAAC,GAAG,EAClCC,IAAI,CAACC,KAAK,EAAAb,IAAA,IAAAC,WAAA,GAACE,IAAI,CAACW,KAAK,cAAAb,WAAA,cAAAA,WAAA,GAAIE,IAAI,CAACY,YAAY,cAAAf,IAAA,cAAAA,IAAA,GAAI,CAAC,CAAC,EAAC,MACpD;UAAA;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACJvB,OAAA;YAAAM,QAAA,gBACEN,OAAA;cAAAM,QAAA,EAAQ;YAAS;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAAC,GAAG,EAC7B,CAAC,EAAAT,cAAA,GAACC,IAAI,CAACa,QAAQ,cAAAd,cAAA,cAAAA,cAAA,GAAI,CAAC,IAAI,GAAG,EAAEe,OAAO,CAAC,CAAC,CAAC,EAAC,GAC3C;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,EACH,OAAOR,IAAI,CAACe,MAAM,KAAK,QAAQ,iBAC9B9B,OAAA;YAAAM,QAAA,gBACEN,OAAA;cAAAM,QAAA,EAAQ;YAAO;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACR,IAAI,CAACe,MAAM,CAACD,OAAO,CAAC,CAAC,CAAC;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CACJ;QAAA,GAlBOd,KAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAmBV,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;EACA,OAAO,IAAI;AACb,CAAC;AAACQ,EAAA,GAnCI9B,aAAa;AAqCnB,MAAM+B,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,KAAA,EAAAC,KAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,qBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,KAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,iBAAA,EAAAC,qBAAA,EAAAC,qBAAA;EACxB,MAAM,CAACpC,IAAI,EAAEqC,OAAO,CAAC,GAAG9D,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAAC+D,OAAO,EAAEC,UAAU,CAAC,GAAGhE,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiE,KAAK,EAAEC,QAAQ,CAAC,GAAGlE,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACmE,IAAI,EAAEC,OAAO,CAAC,GAAGpE,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAM,CAACqE,aAAa,EAAEC,gBAAgB,CAAC,GAAGtE,QAAQ,CAAC,IAAI,CAAC;EAExDD,SAAS,CAAC,MAAM;IACdwE,KAAK,CAAC,yDAAyD,CAAC,CAC7DC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEE,IAAI,IAAK;MACdZ,OAAO,CAAC;QACNa,OAAO,EAAED,IAAI,CAACE,eAAe,IAAI,EAAE;QACnCC,OAAO,EAAEH,IAAI,CAACI,eAAe,IAAI,EAAE;QACnCC,UAAU,EAAEL,IAAI,CAACK,UAAU;QAC3BC,UAAU,EAAEN,IAAI,CAACM,UAAU;QAC3BC,kBAAkB,EAAEP,IAAI,CAACO,kBAAkB,IAAI,EAAE;QACjDC,kBAAkB,EAAER,IAAI,CAACQ,kBAAkB,IAAI;MACjD,CAAC,CAAC;MACFlB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDmB,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACpB,KAAK,CAAC,+BAA+B,EAAEmB,GAAG,CAAC;MACnDlB,QAAQ,CAAC,qBAAqB,CAAC;MAC/BF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EACT,oBAAOrD,OAAA;IAAKK,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAAC;EAAuB;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACvE,IAAIgC,KAAK,EACP,oBAAOvD,OAAA;IAAKK,SAAS,EAAC,8BAA8B;IAAAC,QAAA,EAAEiD;EAAK;IAAAnC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;;EAEpE;EACA,MAAMqD,WAAW,GAAG7D,IAAI,CAACkD,OAAO,CAAC1D,GAAG,CAAEsE,CAAC;IAAA,IAAAC,KAAA,EAAAC,KAAA,EAAAC,eAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,UAAA,EAAAC,WAAA,EAAAC,SAAA;IAAA,OAAM;MAC3C3D,KAAK,EACH+B,IAAI,KAAK,WAAW,IAAAqB,KAAA,IAAAC,KAAA,IAAAC,eAAA,GAChBH,CAAC,CAACS,YAAY,cAAAN,eAAA,cAAAA,eAAA,GAAIH,CAAC,CAACU,OAAO,cAAAR,KAAA,cAAAA,KAAA,GAAIF,CAAC,CAAClD,YAAY,cAAAmD,KAAA,cAAAA,KAAA,GAAI,CAAC,IAAAG,KAAA,IAAAC,KAAA,IAAAC,UAAA,GAClDN,CAAC,CAACU,OAAO,cAAAJ,UAAA,cAAAA,UAAA,GAAIN,CAAC,CAACS,YAAY,cAAAJ,KAAA,cAAAA,KAAA,GAAIL,CAAC,CAAClD,YAAY,cAAAsD,KAAA,cAAAA,KAAA,GAAI,CAAC;MACxDrD,QAAQ,GAAAwD,WAAA,GAAEP,CAAC,CAACjD,QAAQ,cAAAwD,WAAA,cAAAA,WAAA,GAAI,CAAC;MACzBtD,MAAM,GAAAuD,SAAA,GAAER,CAAC,CAAC/C,MAAM,cAAAuD,SAAA,cAAAA,SAAA,GAAI;IACtB,CAAC;EAAA,CAAC,CAAC;EAEH,MAAMG,WAAW,GAAGzE,IAAI,CAACoD,OAAO,CAAC5D,GAAG,CAAEsE,CAAC;IAAA,IAAAY,KAAA,EAAAC,WAAA,EAAAC,YAAA,EAAAC,UAAA;IAAA,OAAM;MAC3ClE,KAAK,GAAA+D,KAAA,IAAAC,WAAA,GAAEb,CAAC,CAACU,OAAO,cAAAG,WAAA,cAAAA,WAAA,GAAIb,CAAC,CAAClD,YAAY,cAAA8D,KAAA,cAAAA,KAAA,GAAI,CAAC;MACvC7D,QAAQ,GAAA+D,YAAA,GAAEd,CAAC,CAACjD,QAAQ,cAAA+D,YAAA,cAAAA,YAAA,GAAI,CAAC;MACzB7D,MAAM,GAAA8D,UAAA,GAAEf,CAAC,CAAC/C,MAAM,cAAA8D,UAAA,cAAAA,UAAA,GAAI;IACtB,CAAC;EAAA,CAAC,CAAC;;EAEH;EACA,MAAMC,eAAe,GACnBpC,IAAI,KAAK,WAAW,IAAAvB,KAAA,IAAAC,KAAA,IAAAC,qBAAA,IAAAC,gBAAA,GAChBtB,IAAI,CAACsD,UAAU,cAAAhC,gBAAA,uBAAfA,gBAAA,CAAiBiD,YAAY,cAAAlD,qBAAA,cAAAA,qBAAA,IAAAE,iBAAA,GAAIvB,IAAI,CAACsD,UAAU,cAAA/B,iBAAA,uBAAfA,iBAAA,CAAiBiD,OAAO,cAAApD,KAAA,cAAAA,KAAA,IAAAI,iBAAA,GAAIxB,IAAI,CAACsD,UAAU,cAAA9B,iBAAA,uBAAfA,iBAAA,CAAiBZ,YAAY,cAAAO,KAAA,cAAAA,KAAA,GAAI,CAAC,IAAAM,KAAA,IAAAC,KAAA,IAAAC,qBAAA,IAAAC,iBAAA,GAC/F5B,IAAI,CAACsD,UAAU,cAAA1B,iBAAA,uBAAfA,iBAAA,CAAiB4C,OAAO,cAAA7C,qBAAA,cAAAA,qBAAA,IAAAE,iBAAA,GAAI7B,IAAI,CAACsD,UAAU,cAAAzB,iBAAA,uBAAfA,iBAAA,CAAiB0C,YAAY,cAAA7C,KAAA,cAAAA,KAAA,IAAAI,iBAAA,GAAI9B,IAAI,CAACsD,UAAU,cAAAxB,iBAAA,uBAAfA,iBAAA,CAAiBlB,YAAY,cAAAa,KAAA,cAAAA,KAAA,GAAI,CAAC;EAErG,MAAMsD,eAAe,IAAAhD,KAAA,IAAAC,qBAAA,IAAAC,gBAAA,GACnBjC,IAAI,CAACuD,UAAU,cAAAtB,gBAAA,uBAAfA,gBAAA,CAAiBuC,OAAO,cAAAxC,qBAAA,cAAAA,qBAAA,IAAAE,iBAAA,GAAIlC,IAAI,CAACuD,UAAU,cAAArB,iBAAA,uBAAfA,iBAAA,CAAiBtB,YAAY,cAAAmB,KAAA,cAAAA,KAAA,GAAI,CAAC;EAEhE,oBACE9C,OAAA;IAAKK,SAAS,EAAC,iCAAiC;IAAAC,QAAA,gBAC9CN,OAAA;MAAIK,SAAS,EAAC,gCAAgC;MAAAC,QAAA,EAAC;IAAuB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG3EvB,OAAA;MAAKK,SAAS,EAAC,uDAAuD;MAAAC,QAAA,gBACpEN,OAAA;QAAOK,SAAS,EAAC,oCAAoC;QAAAC,QAAA,gBACnDN,OAAA;UACE+F,IAAI,EAAC,UAAU;UACfC,OAAO,EAAErC,aAAc;UACvBsC,QAAQ,EAAEA,CAAA,KAAMrC,gBAAgB,CAAEsC,IAAI,IAAK,CAACA,IAAI,CAAE;UAClD7F,SAAS,EAAC,+BAA+B;UACzC8F,KAAK,EAAE;YAAEC,WAAW,EAAE;UAAU;QAAE;UAAAhF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC,eACFvB,OAAA;UAAAM,QAAA,EAAM;QAAoB;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eAERvB,OAAA;QAAOK,SAAS,EAAC,4CAA4C;QAAAC,QAAA,gBAC3DN,OAAA;UAAMK,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAkB;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACzDvB,OAAA;UACE0B,KAAK,EAAE+B,IAAK;UACZwC,QAAQ,EAAGI,CAAC,IAAK3C,OAAO,CAAC2C,CAAC,CAACC,MAAM,CAAC5E,KAAK,CAAE;UACzCrB,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBAE9BN,OAAA;YAAQ0B,KAAK,EAAC,WAAW;YAAApB,QAAA,EAAC;UAA4B;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC/DvB,OAAA;YAAQ0B,KAAK,EAAC,MAAM;YAAApB,QAAA,EAAC;UAAuB;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGNvB,OAAA;MAAAM,QAAA,gBACEN,OAAA;QAAIK,SAAS,EAAC,4CAA4C;QAAAC,QAAA,EACvDmD,IAAI,KAAK,WAAW,GACjB,8DAA8D,GAC9D;MAAyD;QAAArC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACLvB,OAAA,CAACF,mBAAmB;QAACyG,KAAK,EAAC,MAAM;QAACC,MAAM,EAAE,GAAI;QAAAlG,QAAA,eAC5CN,OAAA,CAACT,YAAY;UAACkH,MAAM,EAAE;YAAEC,GAAG,EAAE,EAAE;YAAEC,KAAK,EAAE,EAAE;YAAEC,MAAM,EAAE,EAAE;YAAEC,IAAI,EAAE;UAAE,CAAE;UAAAvG,QAAA,gBAChEN,OAAA,CAACL,aAAa;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACjBvB,OAAA,CAACP,KAAK;YACJsG,IAAI,EAAC,QAAQ;YACbe,OAAO,EAAC,OAAO;YACf7F,IAAI,EAAC,qBAAqB;YAC1B8F,IAAI,EAAC,MAAM;YACXC,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM;UAAE;YAAA5F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC,eACFvB,OAAA,CAACN,KAAK;YACJqG,IAAI,EAAC,QAAQ;YACbe,OAAO,EAAC,UAAU;YAClB7F,IAAI,EAAC,UAAU;YACf+F,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE;YACfC,aAAa,EAAGC,IAAI,IAAK,GAAG,CAACA,IAAI,GAAG,GAAG,EAAErF,OAAO,CAAC,CAAC,CAAC;UAAI;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CAAC,eACFvB,OAAA,CAACJ,OAAO;YAACuH,OAAO,eAAEnH,OAAA,CAACC,aAAa;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YAAC6F,MAAM,EAAE;cAAEC,eAAe,EAAE;YAAM;UAAE;YAAAjG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC3EvB,OAAA,CAACH,MAAM;YACLyH,SAAS,EAAG5F,KAAK,IAAK;cACpB,IAAIA,KAAK,KAAK,cAAc,EAAE,OAAO,6BAA6B;cAClE,IAAIA,KAAK,KAAK,cAAc,EAAE,OAAO,6BAA6B;cAClE,IAAIA,KAAK,KAAK,kBAAkB,EAAE,OAAO,sBAAsB;cAC/D,IAAIA,KAAK,KAAK,kBAAkB,EAAE,OAAO,sBAAsB;cAC/D,OAAOA,KAAK;YACd;UAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGFvB,OAAA,CAACR,OAAO;YACNyB,IAAI,EAAC,cAAc;YACnBF,IAAI,EAAE6D,WAAY;YAClB2C,IAAI,EAAC,SAAS;YACdC,KAAK,EAAC,QAAQ;YACdV,OAAO,EAAE;cAAEW,CAAC,EAAE,OAAO;cAAEC,CAAC,EAAE;YAAW;UAAE;YAAAtG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC,eACFvB,OAAA,CAACR,OAAO;YACNyB,IAAI,EAAC,cAAc;YACnBF,IAAI,EAAEyE,WAAY;YAClB+B,IAAI,EAAC,SAAS;YACdC,KAAK,EAAC,QAAQ;YACdV,OAAO,EAAE;cAAEW,CAAC,EAAE,OAAO;cAAEC,CAAC,EAAE;YAAW;UAAE;YAAAtG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC,EAGDoC,aAAa,IAAI5C,IAAI,CAACsD,UAAU,iBAC/BrE,OAAA,CAACR,OAAO;YACNyB,IAAI,EAAC,kBAAkB;YACvBF,IAAI,EAAE,CAAC;cAAEW,KAAK,EAAEmE,eAAe;cAAEjE,QAAQ,GAAAsB,qBAAA,GAAEnC,IAAI,CAACsD,UAAU,CAACzC,QAAQ,cAAAsB,qBAAA,cAAAA,qBAAA,GAAI;YAAE,CAAC,CAAE;YAC5EqE,IAAI,EAAC,SAAS;YACdC,KAAK,EAAC,MAAM;YACZV,OAAO,EAAE;cAAEW,CAAC,EAAE,OAAO;cAAEC,CAAC,EAAE;YAAW;UAAE;YAAAtG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CACF,EACAoC,aAAa,IAAI5C,IAAI,CAACuD,UAAU,iBAC/BtE,OAAA,CAACR,OAAO;YACNyB,IAAI,EAAC,kBAAkB;YACvBF,IAAI,EAAE,CAAC;cAAEW,KAAK,EAAEoE,eAAe;cAAElE,QAAQ,GAAAuB,qBAAA,GAAEpC,IAAI,CAACuD,UAAU,CAAC1C,QAAQ,cAAAuB,qBAAA,cAAAA,qBAAA,GAAI;YAAE,CAAC,CAAE;YAC5EoE,IAAI,EAAC,SAAS;YACdC,KAAK,EAAC,MAAM;YACZV,OAAO,EAAE;cAAEW,CAAC,EAAE,OAAO;cAAEC,CAAC,EAAE;YAAW;UAAE;YAAAtG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CACF;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACW;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eAGNvB,OAAA;MAAAM,QAAA,gBACEN,OAAA;QAAIK,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAC;MAA6C;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7FvB,OAAA;QAAOK,SAAS,EAAC,yDAAyD;QAAAC,QAAA,gBACxEN,OAAA;UAAOK,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC5BN,OAAA;YAAAM,QAAA,gBACEN,OAAA;cAAIK,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAAI;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnCvB,OAAA;cAAIK,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAAI;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnCvB,OAAA;cAAIK,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAAM;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrCvB,OAAA;cAAIK,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAAW;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1CvB,OAAA;cAAIK,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAAQ;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRvB,OAAA;UAAAM,QAAA,EACGS,IAAI,CAACwD,kBAAkB,CAACoD,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACpH,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK;YAAA,IAAAmH,MAAA,EAAAC,mBAAA,EAAAC,eAAA;YAAA,oBACrD9H,OAAA;cAAgBK,SAAS,EAAC,UAAU;cAAAC,QAAA,gBAClCN,OAAA;gBAAIK,SAAS,EAAC,qBAAqB;gBAAAC,QAAA,GAAC,GAAC,EAACG,KAAK,GAAG,CAAC;cAAA;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACrDvB,OAAA;gBAAIK,SAAS,EAAC,6BAA6B;gBAAAC,QAAA,EAAEE,KAAK,CAACuH,QAAQ,IAAI;cAAW;gBAAA3G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAChFvB,OAAA;gBAAIK,SAAS,EAAC,WAAW;gBAAAC,QAAA,EAAEE,KAAK,CAACsB,MAAM,CAACD,OAAO,CAAC,CAAC;cAAC;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACxDvB,OAAA;gBAAIK,SAAS,EAAC,WAAW;gBAAAC,QAAA,EAAEkB,IAAI,CAACC,KAAK,EAAAmG,MAAA,IAAAC,mBAAA,GAACrH,KAAK,CAACmB,YAAY,cAAAkG,mBAAA,cAAAA,mBAAA,GAAIrH,KAAK,CAAC+E,OAAO,cAAAqC,MAAA,cAAAA,MAAA,GAAI,CAAC;cAAC;gBAAAxG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACrFvB,OAAA;gBAAIK,SAAS,EAAC,WAAW;gBAAAC,QAAA,GAAE,CAAC,EAAAwH,eAAA,GAACtH,KAAK,CAACoB,QAAQ,cAAAkG,eAAA,cAAAA,eAAA,GAAI,CAAC,IAAI,GAAG,EAAEjG,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;cAAA;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA,GALnEd,KAAK;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMV,CAAC;UAAA,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAERvB,OAAA;QAAIK,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAC;MAA8C;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9FvB,OAAA;QAAOK,SAAS,EAAC,oDAAoD;QAAAC,QAAA,gBACnEN,OAAA;UAAOK,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC5BN,OAAA;YAAAM,QAAA,gBACEN,OAAA;cAAIK,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAAI;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnCvB,OAAA;cAAIK,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAAI;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnCvB,OAAA;cAAIK,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAAM;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrCvB,OAAA;cAAIK,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAAW;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1CvB,OAAA;cAAIK,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAAQ;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRvB,OAAA;UAAAM,QAAA,EACGS,IAAI,CAACyD,kBAAkB,CAACmD,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACpH,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK;YAAA,IAAAuH,MAAA,EAAAC,oBAAA,EAAAC,gBAAA;YAAA,oBACrDlI,OAAA;cAAgBK,SAAS,EAAC,UAAU;cAAAC,QAAA,gBAClCN,OAAA;gBAAIK,SAAS,EAAC,qBAAqB;gBAAAC,QAAA,GAAC,GAAC,EAACG,KAAK,GAAG,CAAC;cAAA;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACrDvB,OAAA;gBAAIK,SAAS,EAAC,6BAA6B;gBAAAC,QAAA,EAAEE,KAAK,CAACuH,QAAQ,IAAI;cAAW;gBAAA3G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAChFvB,OAAA;gBAAIK,SAAS,EAAC,WAAW;gBAAAC,QAAA,EAAEE,KAAK,CAACsB,MAAM,CAACD,OAAO,CAAC,CAAC;cAAC;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACxDvB,OAAA;gBAAIK,SAAS,EAAC,WAAW;gBAAAC,QAAA,EAAEkB,IAAI,CAACC,KAAK,EAAAuG,MAAA,IAAAC,oBAAA,GAACzH,KAAK,CAACmB,YAAY,cAAAsG,oBAAA,cAAAA,oBAAA,GAAIzH,KAAK,CAAC+E,OAAO,cAAAyC,MAAA,cAAAA,MAAA,GAAI,CAAC;cAAC;gBAAA5G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACrFvB,OAAA;gBAAIK,SAAS,EAAC,WAAW;gBAAAC,QAAA,GAAE,CAAC,EAAA4H,gBAAA,GAAC1H,KAAK,CAACoB,QAAQ,cAAAsG,gBAAA,cAAAA,gBAAA,GAAI,CAAC,IAAI,GAAG,EAAErG,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;cAAA;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA,GALnEd,KAAK;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMV,CAAC;UAAA,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACU,EAAA,CAxNID,WAAW;AAAAmG,GAAA,GAAXnG,WAAW;AA0NjB,eAAeA,WAAW;AAAC,IAAAD,EAAA,EAAAoG,GAAA;AAAAC,YAAA,CAAArG,EAAA;AAAAqG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}