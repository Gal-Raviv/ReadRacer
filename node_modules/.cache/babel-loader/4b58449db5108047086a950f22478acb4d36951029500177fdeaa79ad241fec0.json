{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsuna\\\\reading-experiment\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Home from './components/Home';\nimport TutorialReading from './tutorial/TutorialReading';\nimport TutorialQuiz from './tutorial/TutorialQuiz';\nimport TutorialResult from './tutorial/TutorialResult';\nimport ExperimentReading from './experiment/ExperimentReading';\nimport ExperimentQuiz from './experiment/ExperimentQuiz';\nimport ExperimentResult from './experiment/ExperimentResult';\nimport { getOrCreateUserId } from './utils/user';\nimport FAQ from './components/FAQ';\nimport Results from './components/Results';\nimport NavBar from './components/NavBar';\nimport { GoogleOAuthProvider, useGoogleLogin } from '@react-oauth/google';\nimport LoadingScreen from './components/LoadingScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\nconst tutorialText = `The History of the Compass\n\nThe compass is one of the most important inventions in human history. It allowed sailors to travel across oceans without getting lost. Before the compass, people used the sun and stars to find their way. This worked well on clear days and nights, but it was hard when the sky was cloudy.\n\nThe first compasses were invented in China around 2,000 years ago. They used a spoon-shaped piece of magnetic metal that pointed south. Later, people created compasses with a magnetic needle that floated in water or was placed on a pin. These versions were more accurate and easier to use.\n\nBy the 12th century, the compass spread to Europe and the Middle East. It helped explorers like Christopher Columbus and Vasco da Gama sail across unknown seas. With the compass, people could explore, trade, and connect with others around the world.\n\nToday, we have GPS, but the compass is still used in hiking, boating, and emergencies. Itâ€™s a simple tool that changed the world by helping people travel farther and safer.`;\nconst correctAnswers = {\n  q1: 'Navigating without clear skies',\n  q2: 'China',\n  q3Keywords: ['sun', 'star', 'sky', 'skies', 'cloudy', 'navigate']\n};\nfunction App() {\n  _s();\n  const [page, setPage] = useState('home');\n  const [mode, setMode] = useState(null);\n  const [user, setUser] = useState(null);\n  const [useSummary, setUseSummary] = useState(null);\n  const [experimentAnswers, setExperimentAnswers] = useState({});\n  const [experimentSummary, setExperimentSummary] = useState('');\n  const [experimentQuizAnswers, setExperimentQuizAnswers] = useState(null);\n  const [experimentText, setExperimentText] = useState('');\n  const [experimentQuestions, setExperimentQuestions] = useState([]);\n  const [experimentReadingTime, setExperimentReadingTime] = useState(null);\n  const [passageText, setPassageText] = useState('');\n  const [summaryText, setSummaryText] = useState('');\n  const [readingTime, setReadingTime] = useState(null);\n  const [quizAnswers, setQuizAnswers] = useState(null);\n  const [tutorialReadingTime, setTutorialReadingTime] = useState(null);\n  const [tutorialQuizAnswers, setTutorialQuizAnswers] = useState(null);\n  const userId = getOrCreateUserId();\n  const [loadingMessage, setLoadingMessage] = useState(\"Generating your reading content...\");\n  useEffect(() => {\n    const storedUserStr = localStorage.getItem(\"user\");\n    if (storedUserStr) {\n      const storedUser = JSON.parse(storedUserStr);\n      // Ensure uuid exists, fallback to getOrCreateUserId()\n      const uuid = storedUser.uuid || getOrCreateUserId();\n      const userWithUuid = {\n        ...storedUser,\n        uuid\n      };\n      setUser(userWithUuid);\n      // Update localStorage if uuid was missing\n      if (!storedUser.uuid) {\n        localStorage.setItem(\"user\", JSON.stringify(userWithUuid));\n      }\n    } else {\n      // No user stored, but make sure a UUID exists in localStorage\n      getOrCreateUserId();\n    }\n  }, []);\n\n  // Google Login Hook â€” **must be at top-level in component**\n  const login = useGoogleLogin({\n    onSuccess: async tokenResponse => {\n      try {\n        const res = await fetch('https://www.googleapis.com/oauth2/v3/userinfo', {\n          headers: {\n            Authorization: `Bearer ${tokenResponse.access_token}`\n          }\n        });\n        const userInfo = await res.json();\n        const uuid = getOrCreateUserId(); // ðŸ‘ˆ Get UUID\n        const userWithId = {\n          ...userInfo,\n          uuid\n        }; // ðŸ‘ˆ Attach UUID\n\n        setUser(userWithId);\n        localStorage.setItem(\"user\", JSON.stringify(userWithId));\n        setPage('home');\n      } catch (error) {\n        alert('Failed to fetch user info');\n        console.error(error);\n      }\n    }\n  });\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    setUser(null);\n    setPage('home');\n  };\n  const handleNavigate = targetPage => {\n    setPage(targetPage);\n    // You can reset mode or other state here if needed\n  };\n  function startTutorial() {\n    setMode('tutorial');\n    setPage('reading');\n  }\n  function finishTutorialReading(time) {\n    setTutorialReadingTime(time);\n    setPage('quiz');\n  }\n  function submitTutorialQuiz(answers) {\n    const result = checkAnswers(answers);\n    setTutorialQuizAnswers({\n      ...answers,\n      ...result\n    });\n    setPage('finished');\n  }\n  async function startExperiment() {\n    setMode('experiment');\n    setLoadingMessage(\"Generating your reading content...\");\n    setPage('loading');\n    const assignedSummary = Math.random() < 0.5;\n    setUseSummary(assignedSummary);\n    try {\n      const response = await fetch('https://read-racer.azurewebsites.net/api/generateContent', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: \"any prompt or your own prompt\"\n        })\n      });\n      const data = await response.json();\n      setExperimentText(data.passage || data.generatedText || '');\n      setExperimentQuestions(data.questions || []);\n      setExperimentAnswers(data.answers || {});\n      if (assignedSummary) {\n        try {\n          const summaryResponse = await fetch('https://read-racer.azurewebsites.net/api/summarizeText', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              text: data.passage || data.generatedText\n            })\n          });\n          const summaryData = await summaryResponse.json();\n          setExperimentSummary(summaryData.summary || summaryData.generatedText || '');\n          setSummaryText(summaryData.summary);\n          setPage('reading');\n        } catch (summaryError) {\n          alert('Failed to load summary. Showing full passage instead.');\n          setExperimentSummary('');\n          setPage('reading');\n        }\n      } else {\n        setPage('reading');\n      }\n    } catch (error) {\n      alert('Failed to load experiment data. Please try again.');\n      setMode(null);\n      setPage('home');\n      console.error(error);\n    }\n  }\n  async function submitExperimentQuiz(userAnswers) {\n    setLoadingMessage(\"Grading your answers...\");\n    setPage('loading');\n    try {\n      const res = await fetch('https://read-racer.azurewebsites.net/api/analyzeExperimentAnswers', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          answers: userAnswers,\n          questions: experimentQuestions\n        })\n      });\n      const result = await res.json();\n      setExperimentQuizAnswers(result);\n      setPage('finished');\n    } catch (err) {\n      alert('Failed to submit quiz. Please try again.');\n      setPage('quiz');\n    }\n  }\n  function finishExperimentReading(time) {\n    setExperimentReadingTime(time);\n    setPage('quiz');\n  }\n  function checkAnswers(userAnswers) {\n    let score = 0;\n    const total = 3;\n    if ((userAnswers.q1 || '').toLowerCase() === correctAnswers.q1.toLowerCase()) score++;\n    if ((userAnswers.q2 || '').toLowerCase() === correctAnswers.q2.toLowerCase()) score++;\n    const answerText = (userAnswers.q3 || '').toLowerCase();\n    const keywordMatches = correctAnswers.q3Keywords.filter(keyword => answerText.includes(keyword)).length;\n    if (keywordMatches >= correctAnswers.q3Keywords.length / 2) score++;\n    return {\n      score,\n      total,\n      passed: score / total >= 0.8\n    };\n  }\n  function backToHome() {\n    setMode(null);\n    setPage('home');\n    setTutorialReadingTime(null);\n    setTutorialQuizAnswers(null);\n    setExperimentText('');\n    setExperimentQuestions([]);\n    setExperimentQuizAnswers(null);\n    setExperimentReadingTime(null);\n    setUseSummary(null);\n  }\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: clientId,\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      onNavigate: handleNavigate,\n      user: user,\n      onLogin: () => login(),\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: true,\n      children: [page === 'home' && /*#__PURE__*/_jsxDEV(Home, {\n        onStartTutorial: startTutorial,\n        onStartExperiment: startExperiment,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), mode === 'tutorial' && page === 'reading' && /*#__PURE__*/_jsxDEV(TutorialReading, {\n        text: tutorialText,\n        onFinish: finishTutorialReading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), mode === 'tutorial' && page === 'quiz' && /*#__PURE__*/_jsxDEV(TutorialQuiz, {\n        onSubmit: submitTutorialQuiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 52\n      }, this), mode === 'tutorial' && page === 'finished' && /*#__PURE__*/_jsxDEV(TutorialResult, {\n        quizAnswers: tutorialQuizAnswers,\n        readingTime: tutorialReadingTime,\n        onBackHome: backToHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), mode === 'experiment' && page === 'loading' && /*#__PURE__*/_jsxDEV(LoadingScreen, {\n        message: loadingMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }, this), mode === 'experiment' && page === 'reading' && /*#__PURE__*/_jsxDEV(ExperimentReading, {\n        passageText: experimentText,\n        summaryText: summaryText,\n        onFinish: finishExperimentReading,\n        useSummary: useSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), mode === 'experiment' && page === 'quiz' && /*#__PURE__*/_jsxDEV(ExperimentQuiz, {\n        questions: experimentQuestions,\n        onSubmit: submitExperimentQuiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), mode === 'experiment' && page === 'finished' && /*#__PURE__*/_jsxDEV(ExperimentResult, {\n        quizAnswers: experimentQuizAnswers,\n        readingTime: experimentReadingTime,\n        passageText: experimentText,\n        summaryText: summaryText,\n        onBackHome: backToHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), page === 'faq' && /*#__PURE__*/_jsxDEV(FAQ, {\n        onBackHome: backToHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 28\n      }, this), page === 'results' && /*#__PURE__*/_jsxDEV(Results, {\n        user: user,\n        onBackHome: backToHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"k8zecEywYU92m64rO83WckvLEHI=\", false, function () {\n  return [useGoogleLogin];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Home","TutorialReading","TutorialQuiz","TutorialResult","ExperimentReading","ExperimentQuiz","ExperimentResult","getOrCreateUserId","FAQ","Results","NavBar","GoogleOAuthProvider","useGoogleLogin","LoadingScreen","jsxDEV","_jsxDEV","clientId","process","env","REACT_APP_GOOGLE_CLIENT_ID","tutorialText","correctAnswers","q1","q2","q3Keywords","App","_s","page","setPage","mode","setMode","user","setUser","useSummary","setUseSummary","experimentAnswers","setExperimentAnswers","experimentSummary","setExperimentSummary","experimentQuizAnswers","setExperimentQuizAnswers","experimentText","setExperimentText","experimentQuestions","setExperimentQuestions","experimentReadingTime","setExperimentReadingTime","passageText","setPassageText","summaryText","setSummaryText","readingTime","setReadingTime","quizAnswers","setQuizAnswers","tutorialReadingTime","setTutorialReadingTime","tutorialQuizAnswers","setTutorialQuizAnswers","userId","loadingMessage","setLoadingMessage","storedUserStr","localStorage","getItem","storedUser","JSON","parse","uuid","userWithUuid","setItem","stringify","login","onSuccess","tokenResponse","res","fetch","headers","Authorization","access_token","userInfo","json","userWithId","error","alert","console","handleLogout","removeItem","handleNavigate","targetPage","startTutorial","finishTutorialReading","time","submitTutorialQuiz","answers","result","checkAnswers","startExperiment","assignedSummary","Math","random","response","method","body","prompt","data","passage","generatedText","questions","summaryResponse","text","summaryData","summary","summaryError","submitExperimentQuiz","userAnswers","err","finishExperimentReading","score","total","toLowerCase","answerText","q3","keywordMatches","filter","keyword","includes","length","passed","backToHome","children","onNavigate","onLogin","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","className","onStartTutorial","onStartExperiment","onFinish","onSubmit","onBackHome","message","_c","$RefreshReg$"],"sources":["C:/Users/tsuna/reading-experiment/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Home from './components/Home';\nimport TutorialReading from './tutorial/TutorialReading';\nimport TutorialQuiz from './tutorial/TutorialQuiz';\nimport TutorialResult from './tutorial/TutorialResult';\nimport ExperimentReading from './experiment/ExperimentReading';\nimport ExperimentQuiz from './experiment/ExperimentQuiz';\nimport ExperimentResult from './experiment/ExperimentResult';\nimport { getOrCreateUserId } from './utils/user';\nimport FAQ from './components/FAQ';\nimport Results from './components/Results';\nimport NavBar from './components/NavBar';\nimport { GoogleOAuthProvider, useGoogleLogin } from '@react-oauth/google';\nimport LoadingScreen from './components/LoadingScreen';\n\n\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\n\nconst tutorialText = `The History of the Compass\n\nThe compass is one of the most important inventions in human history. It allowed sailors to travel across oceans without getting lost. Before the compass, people used the sun and stars to find their way. This worked well on clear days and nights, but it was hard when the sky was cloudy.\n\nThe first compasses were invented in China around 2,000 years ago. They used a spoon-shaped piece of magnetic metal that pointed south. Later, people created compasses with a magnetic needle that floated in water or was placed on a pin. These versions were more accurate and easier to use.\n\nBy the 12th century, the compass spread to Europe and the Middle East. It helped explorers like Christopher Columbus and Vasco da Gama sail across unknown seas. With the compass, people could explore, trade, and connect with others around the world.\n\nToday, we have GPS, but the compass is still used in hiking, boating, and emergencies. Itâ€™s a simple tool that changed the world by helping people travel farther and safer.`;\n\nconst correctAnswers = {\n  q1: 'Navigating without clear skies',\n  q2: 'China',\n  q3Keywords: ['sun', 'star', 'sky', 'skies', 'cloudy', 'navigate'],\n};\n\nfunction App() {\n  const [page, setPage] = useState('home');\n  const [mode, setMode] = useState(null);\n  const [user, setUser] = useState(null);\n  const [useSummary, setUseSummary] = useState(null);\n  const [experimentAnswers, setExperimentAnswers] = useState({});\n  const [experimentSummary, setExperimentSummary] = useState('');\n  const [experimentQuizAnswers, setExperimentQuizAnswers] = useState(null);\n  const [experimentText, setExperimentText] = useState('');\n  const [experimentQuestions, setExperimentQuestions] = useState([]);\n  const [experimentReadingTime, setExperimentReadingTime] = useState(null);\n  const [passageText, setPassageText] = useState('');\n  const [summaryText, setSummaryText] = useState('');\n  const [readingTime, setReadingTime] = useState(null);\n  const [quizAnswers, setQuizAnswers] = useState(null);\n  const [tutorialReadingTime, setTutorialReadingTime] = useState(null);\n  const [tutorialQuizAnswers, setTutorialQuizAnswers] = useState(null);\n  const userId = getOrCreateUserId();\n  const [loadingMessage, setLoadingMessage] = useState(\"Generating your reading content...\");\n\n  useEffect(() => {\n    const storedUserStr = localStorage.getItem(\"user\");\n    if (storedUserStr) {\n      const storedUser = JSON.parse(storedUserStr);\n      // Ensure uuid exists, fallback to getOrCreateUserId()\n      const uuid = storedUser.uuid || getOrCreateUserId();\n      const userWithUuid = { ...storedUser, uuid };\n      setUser(userWithUuid);\n      // Update localStorage if uuid was missing\n      if (!storedUser.uuid) {\n        localStorage.setItem(\"user\", JSON.stringify(userWithUuid));\n      }\n    } else {\n      // No user stored, but make sure a UUID exists in localStorage\n      getOrCreateUserId();\n    }\n  }, []);\n\n  // Google Login Hook â€” **must be at top-level in component**\nconst login = useGoogleLogin({\n  onSuccess: async (tokenResponse) => {\n    try {\n      const res = await fetch('https://www.googleapis.com/oauth2/v3/userinfo', {\n        headers: {\n          Authorization: `Bearer ${tokenResponse.access_token}`,\n        },\n      });\n      const userInfo = await res.json();\n      const uuid = getOrCreateUserId(); // ðŸ‘ˆ Get UUID\n      const userWithId = { ...userInfo, uuid }; // ðŸ‘ˆ Attach UUID\n\n      setUser(userWithId);\n      localStorage.setItem(\"user\", JSON.stringify(userWithId));\n      setPage('home');\n    } catch (error) {\n      alert('Failed to fetch user info');\n      console.error(error);\n    }\n  }\n});\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    setUser(null);\n    setPage('home');\n  };\n\n\n  const handleNavigate = (targetPage) => {\n    setPage(targetPage);\n    // You can reset mode or other state here if needed\n  };\n\n  function startTutorial() {\n    setMode('tutorial');\n    setPage('reading');\n  }\n\n  function finishTutorialReading(time) {\n    setTutorialReadingTime(time);\n    setPage('quiz');\n  }\n\n  function submitTutorialQuiz(answers) {\n    const result = checkAnswers(answers);\n    setTutorialQuizAnswers({ ...answers, ...result });\n    setPage('finished');\n  }\n\n  async function startExperiment() {\n    setMode('experiment');\n    setLoadingMessage(\"Generating your reading content...\");\n    setPage('loading');\n\n\n    const assignedSummary = Math.random() < 0.5;\n    setUseSummary(assignedSummary);\n\n    try {\n      const response = await fetch('https://read-racer.azurewebsites.net/api/generateContent', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ prompt: \"any prompt or your own prompt\" }),\n      });\n      const data = await response.json();\n      setExperimentText(data.passage || data.generatedText || '');\n      setExperimentQuestions(data.questions || []);\n      setExperimentAnswers(data.answers || {});\n\n      if (assignedSummary) {\n        try {\n          const summaryResponse = await fetch('https://read-racer.azurewebsites.net/api/summarizeText', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ text: data.passage || data.generatedText }),\n          });\n          const summaryData = await summaryResponse.json();\n          setExperimentSummary(summaryData.summary || summaryData.generatedText || '');\n          setSummaryText(summaryData.summary);\n          setPage('reading');\n        } catch (summaryError) {\n          alert('Failed to load summary. Showing full passage instead.');\n          setExperimentSummary('');\n          setPage('reading');\n        }\n      } else {\n        setPage('reading');\n      }\n    } catch (error) {\n      alert('Failed to load experiment data. Please try again.');\n      setMode(null);\n      setPage('home');\n      console.error(error);\n    }\n  }\n\n  async function submitExperimentQuiz(userAnswers) {\n  setLoadingMessage(\"Grading your answers...\");\n  setPage('loading');\n  try {\n    const res = await fetch('https://read-racer.azurewebsites.net/api/analyzeExperimentAnswers', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        answers: userAnswers,\n        questions: experimentQuestions,\n      }),\n    });\n    const result = await res.json();\n    setExperimentQuizAnswers(result);\n    setPage('finished');\n  } catch (err) {\n    alert('Failed to submit quiz. Please try again.');\n    setPage('quiz');\n  }\n}\n\n\n  function finishExperimentReading(time) {\n    setExperimentReadingTime(time);\n    setPage('quiz');\n  }\n\n  function checkAnswers(userAnswers) {\n    let score = 0;\n    const total = 3;\n\n    if ((userAnswers.q1 || '').toLowerCase() === correctAnswers.q1.toLowerCase()) score++;\n    if ((userAnswers.q2 || '').toLowerCase() === correctAnswers.q2.toLowerCase()) score++;\n\n    const answerText = (userAnswers.q3 || '').toLowerCase();\n    const keywordMatches = correctAnswers.q3Keywords.filter((keyword) =>\n      answerText.includes(keyword)\n    ).length;\n\n    if (keywordMatches >= correctAnswers.q3Keywords.length / 2) score++;\n\n    return { score, total, passed: score / total >= 0.8 };\n  }\n\n  function backToHome() {\n    setMode(null);\n    setPage('home');\n    setTutorialReadingTime(null);\n    setTutorialQuizAnswers(null);\n    setExperimentText('');\n    setExperimentQuestions([]);\n    setExperimentQuizAnswers(null);\n    setExperimentReadingTime(null);\n    setUseSummary(null);\n  }\n\n  return (\n    <GoogleOAuthProvider clientId={clientId}>\n      <NavBar\n        onNavigate={handleNavigate}\n        user={user}\n        onLogin={() => login()}\n        onLogout={handleLogout}\n      />\n\n      <main className>\n        {page === 'home' && (\n          <Home\n            onStartTutorial={startTutorial}\n            onStartExperiment={startExperiment}\n            user={user}\n          />\n        )}\n\n        {/* Tutorial flow */}\n        {mode === 'tutorial' && page === 'reading' && (\n          <TutorialReading text={tutorialText} onFinish={finishTutorialReading} />\n        )}\n        {mode === 'tutorial' && page === 'quiz' && <TutorialQuiz onSubmit={submitTutorialQuiz} />}\n        {mode === 'tutorial' && page === 'finished' && (\n          <TutorialResult\n            quizAnswers={tutorialQuizAnswers}\n            readingTime={tutorialReadingTime}\n            onBackHome={backToHome}\n          />\n        )}\n\n        {/* Experiment flow */}\n        {mode === 'experiment' && page === 'loading' && (\n            <LoadingScreen message={loadingMessage} \n          />\n        )}\n        {mode === 'experiment' && page === 'reading' && (\n          <ExperimentReading\n            passageText={experimentText}\n            summaryText={summaryText}\n            onFinish={finishExperimentReading}\n            useSummary={useSummary}\n          />\n        )}\n        {mode === 'experiment' && page === 'quiz' && (\n          <ExperimentQuiz questions={experimentQuestions} onSubmit={submitExperimentQuiz} />\n        )}\n        {mode === 'experiment' && page === 'finished' && (\n          <ExperimentResult\n            quizAnswers={experimentQuizAnswers}\n            readingTime={experimentReadingTime}\n            passageText={experimentText}\n            summaryText={summaryText}\n            onBackHome={backToHome}\n          />\n        )}\n\n        {/* Other pages */}\n        {page === 'faq' && <FAQ onBackHome={backToHome} />}\n        {page === 'results' && <Results user={user} onBackHome={backToHome} />}\n      </main>\n    </GoogleOAuthProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}