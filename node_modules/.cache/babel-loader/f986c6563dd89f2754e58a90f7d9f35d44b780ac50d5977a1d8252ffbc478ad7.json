{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsuna\\\\reading-experiment\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Home from './components/Home';\nimport TutorialReading from './tutorial/TutorialReading';\nimport TutorialQuiz from './tutorial/TutorialQuiz';\nimport TutorialResult from './tutorial/TutorialResult';\nimport ExperimentSummary from './experiment/ExperimentSummary';\nimport ExperimentFullText from './experiment/ExperimentFullText';\nimport ExperimentQuiz from './experiment/ExperimentQuiz';\nimport ExperimentResult from './experiment/ExperimentResult';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst sampleText = `This is a sample AI-generated text for the reading experiment. \nUsers will read this and then answer questions.`;\nconst correctAnswers = {\n  q1: 'b',\n  q2: 'b',\n  q3Keywords: ['read', 'answer', 'questions', 'experiment']\n};\nfunction checkAnswers(userAnswers) {\n  let score = 0;\n  let total = 3;\n  if (userAnswers.q1 === correctAnswers.q1) score++;\n  if (userAnswers.q2 === correctAnswers.q2) score++;\n  const answerText = userAnswers.q3.toLowerCase();\n  let keywordMatches = 0;\n  correctAnswers.q3Keywords.forEach(keyword => {\n    if (answerText.includes(keyword)) keywordMatches++;\n  });\n  if (keywordMatches >= correctAnswers.q3Keywords.length / 2) score++;\n  return {\n    score,\n    total,\n    passed: score / total >= 0.8\n  };\n}\nfunction App() {\n  _s();\n  const [page, setPage] = useState('home'); // 'home' | 'reading' | 'quiz' | 'finished'\n  const [mode, setMode] = useState(null); // 'tutorial' | 'experiment'\n  const [readingTime, setReadingTime] = useState(null);\n  const [quizAnswers, setQuizAnswers] = useState(null);\n  const startTutorial = () => {\n    setMode('tutorial');\n    setPage('reading');\n  };\n  const startExperiment = () => {\n    setMode('experiment');\n    setPage('reading');\n  };\n  const finishReading = time => {\n    setReadingTime(time);\n    setPage('quiz');\n  };\n  const submitQuiz = answers => {\n    const result = checkAnswers(answers);\n    setQuizAnswers({\n      ...answers,\n      ...result\n    });\n    setPage('finished');\n  };\n  const backToHome = () => {\n    setPage('home');\n    setMode(null);\n    setReadingTime(null);\n    setQuizAnswers(null);\n  };\n  const sampleText = `This is a long AI-generated article that the user would read during the experiment. It has several ideas and paragraphs designed to simulate real reading.`;\n  const sampleSummary = `This is a brief AI-generated summary of the longer article above.`;\n  const showSummary = useState(() => Math.random() < 0.5)[0];\n  const [experimentQuestions, setExperimentQuestions] = useState([]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [page === 'home' && /*#__PURE__*/_jsxDEV(Home, {\n      onStartTutorial: startTutorial,\n      onStartExperiment: startExperiment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), mode === 'tutorial' && page === 'reading' && /*#__PURE__*/_jsxDEV(TutorialReading, {\n      text: sampleText,\n      onFinish: finishReading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), mode === 'tutorial' && page === 'quiz' && /*#__PURE__*/_jsxDEV(TutorialQuiz, {\n      onSubmit: submitQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), mode === 'tutorial' && page === 'finished' && /*#__PURE__*/_jsxDEV(TutorialResult, {\n      readingTime: readingTime,\n      quizAnswers: quizAnswers,\n      onBackHome: backToHome\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), mode === 'experiment' && page === 'reading' && (showSummary ? /*#__PURE__*/_jsxDEV(ExperimentSummary, {\n      summary: sampleSummary,\n      onFinish: finishReading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(ExperimentFullText, {\n      text: sampleText,\n      onFinish: finishReading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this)), mode === 'experiment' && page === 'quiz' && /*#__PURE__*/_jsxDEV(ExperimentQuiz, {\n      onSubmit: submitQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), mode === 'experiment' && page === 'finished' && /*#__PURE__*/_jsxDEV(ExperimentResult, {\n      readingTime: readingTime,\n      quizAnswers: quizAnswers,\n      onBackHome: backToHome\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"HWdU3cyyOIjcZQeg2A1p8jbgaz0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Home","TutorialReading","TutorialQuiz","TutorialResult","ExperimentSummary","ExperimentFullText","ExperimentQuiz","ExperimentResult","jsxDEV","_jsxDEV","Fragment","_Fragment","sampleText","correctAnswers","q1","q2","q3Keywords","checkAnswers","userAnswers","score","total","answerText","q3","toLowerCase","keywordMatches","forEach","keyword","includes","length","passed","App","_s","page","setPage","mode","setMode","readingTime","setReadingTime","quizAnswers","setQuizAnswers","startTutorial","startExperiment","finishReading","time","submitQuiz","answers","result","backToHome","sampleSummary","showSummary","Math","random","experimentQuestions","setExperimentQuestions","children","onStartTutorial","onStartExperiment","fileName","_jsxFileName","lineNumber","columnNumber","text","onFinish","onSubmit","onBackHome","summary","_c","$RefreshReg$"],"sources":["C:/Users/tsuna/reading-experiment/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Home from './components/Home';\nimport TutorialReading from './tutorial/TutorialReading';\nimport TutorialQuiz from './tutorial/TutorialQuiz';\nimport TutorialResult from './tutorial/TutorialResult';\nimport ExperimentSummary from './experiment/ExperimentSummary';\nimport ExperimentFullText from './experiment/ExperimentFullText';\nimport ExperimentQuiz from './experiment/ExperimentQuiz';\nimport ExperimentResult from './experiment/ExperimentResult';\n\nconst sampleText = `This is a sample AI-generated text for the reading experiment. \nUsers will read this and then answer questions.`;\n\nconst correctAnswers = {\n  q1: 'b',\n  q2: 'b',\n  q3Keywords: ['read', 'answer', 'questions', 'experiment'],\n};\n\nfunction checkAnswers(userAnswers) {\n  let score = 0;\n  let total = 3;\n\n  if (userAnswers.q1 === correctAnswers.q1) score++;\n  if (userAnswers.q2 === correctAnswers.q2) score++;\n\n  const answerText = userAnswers.q3.toLowerCase();\n  let keywordMatches = 0;\n  correctAnswers.q3Keywords.forEach((keyword) => {\n    if (answerText.includes(keyword)) keywordMatches++;\n  });\n\n  if (keywordMatches >= correctAnswers.q3Keywords.length / 2) score++;\n\n  return { score, total, passed: score / total >= 0.8 };\n}\n\nfunction App() {\n  const [page, setPage] = useState('home'); // 'home' | 'reading' | 'quiz' | 'finished'\n  const [mode, setMode] = useState(null); // 'tutorial' | 'experiment'\n  const [readingTime, setReadingTime] = useState(null);\n  const [quizAnswers, setQuizAnswers] = useState(null);\n\n  const startTutorial = () => {\n    setMode('tutorial');\n    setPage('reading');\n  };\n\n  const startExperiment = () => {\n    setMode('experiment');\n    setPage('reading');\n  };\n\n  const finishReading = (time) => {\n    setReadingTime(time);\n    setPage('quiz');\n  };\n\n  const submitQuiz = (answers) => {\n    const result = checkAnswers(answers);\n    setQuizAnswers({ ...answers, ...result });\n    setPage('finished');\n  };\n\n  const backToHome = () => {\n    setPage('home');\n    setMode(null);\n    setReadingTime(null);\n    setQuizAnswers(null);\n  };\n  const sampleText = `This is a long AI-generated article that the user would read during the experiment. It has several ideas and paragraphs designed to simulate real reading.`;\n  const sampleSummary = `This is a brief AI-generated summary of the longer article above.`;\n\n  const showSummary = useState(() => Math.random() < 0.5)[0];\n\n  const [experimentQuestions, setExperimentQuestions] = useState([]);\n\n  return (\n    <>\n      {page === 'home' && (\n        <Home\n          onStartTutorial={startTutorial}\n          onStartExperiment={startExperiment}\n        />\n      )}\n\n      {/* TUTORIAL FLOW */}\n      {mode === 'tutorial' && page === 'reading' && (\n        <TutorialReading text={sampleText} onFinish={finishReading} />\n      )}\n      {mode === 'tutorial' && page === 'quiz' && (\n        <TutorialQuiz onSubmit={submitQuiz} />\n      )}\n      {mode === 'tutorial' && page === 'finished' && (\n        <TutorialResult\n          readingTime={readingTime}\n          quizAnswers={quizAnswers}\n          onBackHome={backToHome}\n        />\n      )}\n\n      {/* EXPERIMENT FLOW */}\n      {mode === 'experiment' && page === 'reading' && (\n        showSummary ? (\n          <ExperimentSummary summary={sampleSummary} onFinish={finishReading} />\n        ) : (\n          <ExperimentFullText text={sampleText} onFinish={finishReading} />\n        )\n      )}\n      {mode === 'experiment' && page === 'quiz' && (\n        <ExperimentQuiz onSubmit={submitQuiz} />\n      )}\n      {mode === 'experiment' && page === 'finished' && (\n        <ExperimentResult\n          readingTime={readingTime}\n          quizAnswers={quizAnswers}\n          onBackHome={backToHome}\n        />\n      )}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}