{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsuna\\\\reading-experiment\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Home from './components/Home';\nimport TutorialReading from './tutorial/TutorialReading';\nimport TutorialQuiz from './tutorial/TutorialQuiz';\nimport TutorialResult from './tutorial/TutorialResult';\nimport ExperimentReading from './experiment/ExperimentReading';\nimport ExperimentQuiz from './experiment/ExperimentQuiz';\nimport ExperimentResult from './experiment/ExperimentResult';\nimport FAQ from './components/FAQ';\nimport Results from './components/Results';\nimport NavBar from './components/NavBar';\nimport LoadingScreen from './components/LoadingScreen';\nimport Profile from './components/Profile';\nimport { getOrCreateUserId } from './utils/user';\nimport { useGoogleLogin } from '@react-oauth/google';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst tutorialText = `Welcome to Read Racer!\n\nIn this tutorial, you'll experience how our experiment works. \nYou will read a short passage and then answer a few questions to test your understanding.\n\nThe goal is to see how well you comprehend what you read, whether you read the full passage or a summary. \n\nThis helps us study reading speed and accuracy, and you'll get to see your own results at the end!\n\nLet's get started!`;\nconst correctAnswers = {\n  q1: 'Read a passage and answer questions',\n  q2: 'How well you understand what you read',\n  q3Keywords: ['full passage', 'summary', 'summary passage', 'passage', 'short summary']\n};\nfunction App() {\n  _s();\n  const [page, setPage] = useState('home');\n  const [mode, setMode] = useState(null);\n  const [user, setUser] = useState(null);\n  const [useSummary, setUseSummary] = useState(null);\n  const [experimentAnswers, setExperimentAnswers] = useState({});\n  const [experimentSummary, setExperimentSummary] = useState('');\n  const [experimentQuizAnswers, setExperimentQuizAnswers] = useState(null);\n  const [experimentText, setExperimentText] = useState('');\n  const [experimentQuestions, setExperimentQuestions] = useState([]);\n  const [experimentReadingTime, setExperimentReadingTime] = useState(null);\n  const [summaryText, setSummaryText] = useState('');\n  const [tutorialReadingTime, setTutorialReadingTime] = useState(null);\n  const [tutorialQuizAnswers, setTutorialQuizAnswers] = useState(null);\n  const [loadingMessage, setLoadingMessage] = useState(\"Generating your reading content...\");\n  useEffect(() => {\n    const storedUserStr = localStorage.getItem(\"user\");\n    console.log(\"[App] Loaded user from localStorage:\", storedUserStr);\n    if (!storedUserStr) {\n      setUser(null);\n      return;\n    }\n    try {\n      const storedUser = JSON.parse(storedUserStr);\n      const uuid = storedUser.uuid || getOrCreateUserId();\n      const userWithUuid = {\n        ...storedUser,\n        uuid\n      };\n      setUser(userWithUuid);\n      if (!storedUser.uuid) {\n        localStorage.setItem(\"user\", JSON.stringify(userWithUuid));\n      }\n      console.log(\"[App] Final user state after parsing:\", userWithUuid);\n    } catch (e) {\n      console.warn(\"[App] Invalid localStorage user. Clearing.\", e);\n      localStorage.removeItem(\"user\");\n      setUser(null);\n    }\n  }, []);\n  const login = useGoogleLogin({\n    onSuccess: async tokenResponse => {\n      console.log(\"[Login] Google token received:\", tokenResponse);\n      try {\n        const res = await fetch('https://www.googleapis.com/oauth2/v3/userinfo', {\n          headers: {\n            Authorization: `Bearer ${tokenResponse.access_token}`\n          }\n        });\n        const userInfo = await res.json();\n        const uuid = getOrCreateUserId();\n        const mergedUser = {\n          ...userInfo,\n          uuid\n        };\n        const profileRes = await fetch(\"https://read-racer.azurewebsites.net/api/getUserProfile\", {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: userInfo.email,\n            uuid\n          })\n        });\n        const profileData = await profileRes.json();\n        const userWithProfile = {\n          ...mergedUser,\n          displayName: profileData.displayName || '',\n          leaderboardOptIn: profileData.leaderboardOptIn || false,\n          totalExperiments: profileData.totalExperiments || 0,\n          summaryExperiments: profileData.summaryExperiments || 0,\n          fullPassageExperiments: profileData.fullPassageExperiments || 0,\n          dateJoined: profileData.dateJoined || new Date().toISOString().slice(0, 10)\n        };\n        setUser(userWithProfile);\n        localStorage.setItem(\"user\", JSON.stringify(userWithProfile));\n        setPage('home');\n      } catch (error) {\n        alert('Failed to fetch user info');\n        console.error(\"[Login] Error:\", error);\n      }\n    },\n    onError: () => alert('Login Failed')\n  });\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    setUser(null);\n    if (page === \"profile\") setPage(\"home\");\n  };\n  const handleNavigate = targetPage => {\n    if (targetPage === \"profile\" && !user) {\n      alert(\"Please sign in to view your profile.\");\n      return;\n    }\n    setPage(targetPage);\n  };\n  function startTutorial() {\n    setMode('tutorial');\n    setPage('reading');\n  }\n  function finishTutorialReading(time) {\n    setTutorialReadingTime(time);\n    setPage('quiz');\n  }\n  function submitTutorialQuiz(answers) {\n    const result = checkAnswers(answers);\n    setTutorialQuizAnswers({\n      ...answers,\n      ...result\n    });\n    setPage('finished');\n  }\n  async function startExperiment() {\n    if (!user) {\n      alert(\"Please sign in to participate in the experiment.\");\n      return;\n    }\n    setMode('experiment');\n    setLoadingMessage(\"Generating your reading content...\");\n    setPage('loading');\n    const assignedSummary = Math.random() < 0.5;\n    setUseSummary(assignedSummary);\n    try {\n      const response = await fetch('https://read-racer.azurewebsites.net/api/generateContent', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: \"any prompt or your own prompt\"\n        })\n      });\n      if (!response.ok) throw new Error('Failed to fetch content');\n      const data = await response.json();\n      setExperimentText(data.passage || data.generatedText || '');\n      setExperimentQuestions(data.questions || []);\n      setExperimentAnswers(data.answers || {});\n      if (assignedSummary) {\n        const summaryResponse = await fetch('https://read-racer.azurewebsites.net/api/summarizeText', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text: data.passage || data.generatedText\n          })\n        });\n        const summaryData = await summaryResponse.json();\n        setExperimentSummary(summaryData.summary || '');\n        setSummaryText(summaryData.summary || '');\n      }\n      setPage('reading');\n    } catch (error) {\n      alert('Failed to load experiment data. Please try again.');\n      setMode(null);\n      setPage('home');\n      console.error(error);\n    }\n  }\n  async function submitExperimentQuiz(userAnswers) {\n    setLoadingMessage(\"Grading your answers...\");\n    setPage('loading');\n    try {\n      const res = await fetch('https://read-racer.azurewebsites.net/api/analyzeExperimentAnswers', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          answers: userAnswers,\n          questions: experimentQuestions\n        })\n      });\n      if (!res.ok) throw new Error('Failed to submit quiz');\n      const result = await res.json();\n      setExperimentQuizAnswers(result);\n      setPage('finished');\n    } catch (err) {\n      alert('Failed to submit quiz. Please try again.');\n      setPage('quiz');\n      console.error(err);\n    }\n  }\n  function finishExperimentReading(time) {\n    setExperimentReadingTime(time);\n    setPage('quiz');\n  }\n  function checkAnswers(userAnswers) {\n    let score = 0;\n    let total = 2; // q1 and q2\n\n    if ((userAnswers.q1 || '').toLowerCase() === correctAnswers.q1.toLowerCase()) score++;\n    if ((userAnswers.q2 || '').toLowerCase() === correctAnswers.q2.toLowerCase()) score++;\n    const answerText = (userAnswers.q3 || '').toLowerCase();\n    const keywordMatches = correctAnswers.q3Keywords.filter(keyword => answerText.includes(keyword)).length;\n    if (keywordMatches >= correctAnswers.q3Keywords.length / 2) score++;\n    total++;\n    return {\n      score,\n      total,\n      passed: score / total >= 0.8\n    };\n  }\n  function backToHome() {\n    setMode(null);\n    setPage('home');\n    setTutorialReadingTime(null);\n    setTutorialQuizAnswers(null);\n    setExperimentText('');\n    setExperimentQuestions([]);\n    setExperimentQuizAnswers(null);\n    setExperimentReadingTime(null);\n    setUseSummary(null);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      onNavigate: handleNavigate,\n      user: user,\n      onLogin: login,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [page === 'home' && /*#__PURE__*/_jsxDEV(Home, {\n        onStartTutorial: startTutorial,\n        onStartExperiment: startExperiment,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), page === 'profile' && user && /*#__PURE__*/_jsxDEV(Profile, {\n        user: user,\n        setUser: setUser,\n        onLogout: handleLogout,\n        onBackHome: backToHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), mode === 'tutorial' && page === 'reading' && /*#__PURE__*/_jsxDEV(TutorialReading, {\n        text: tutorialText,\n        onFinish: finishTutorialReading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 55\n      }, this), mode === 'tutorial' && page === 'quiz' && /*#__PURE__*/_jsxDEV(TutorialQuiz, {\n        onSubmit: submitTutorialQuiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 52\n      }, this), mode === 'tutorial' && page === 'finished' && /*#__PURE__*/_jsxDEV(TutorialResult, {\n        quizAnswers: tutorialQuizAnswers,\n        readingTime: tutorialReadingTime,\n        onBackHome: backToHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), mode === 'experiment' && page === 'loading' && /*#__PURE__*/_jsxDEV(LoadingScreen, {\n        message: loadingMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 57\n      }, this), mode === 'experiment' && page === 'reading' && /*#__PURE__*/_jsxDEV(ExperimentReading, {\n        passageText: experimentText,\n        summaryText: summaryText,\n        onFinish: finishExperimentReading,\n        useSummary: useSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), mode === 'experiment' && page === 'quiz' && /*#__PURE__*/_jsxDEV(ExperimentQuiz, {\n        questions: experimentQuestions,\n        onSubmit: submitExperimentQuiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 54\n      }, this), mode === 'experiment' && page === 'finished' && /*#__PURE__*/_jsxDEV(ExperimentResult, {\n        quizAnswers: experimentQuizAnswers,\n        readingTime: experimentReadingTime,\n        passageText: experimentText,\n        summaryText: summaryText,\n        onBackHome: backToHome,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), page === 'faq' && /*#__PURE__*/_jsxDEV(FAQ, {\n        onBackHome: backToHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 28\n      }, this), page === 'results' && /*#__PURE__*/_jsxDEV(Results, {\n        user: user,\n        onBackHome: backToHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"ydWydhruqjlSSWX9YBBh9X6/ak8=\", false, function () {\n  return [useGoogleLogin];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Home","TutorialReading","TutorialQuiz","TutorialResult","ExperimentReading","ExperimentQuiz","ExperimentResult","FAQ","Results","NavBar","LoadingScreen","Profile","getOrCreateUserId","useGoogleLogin","jsxDEV","_jsxDEV","Fragment","_Fragment","tutorialText","correctAnswers","q1","q2","q3Keywords","App","_s","page","setPage","mode","setMode","user","setUser","useSummary","setUseSummary","experimentAnswers","setExperimentAnswers","experimentSummary","setExperimentSummary","experimentQuizAnswers","setExperimentQuizAnswers","experimentText","setExperimentText","experimentQuestions","setExperimentQuestions","experimentReadingTime","setExperimentReadingTime","summaryText","setSummaryText","tutorialReadingTime","setTutorialReadingTime","tutorialQuizAnswers","setTutorialQuizAnswers","loadingMessage","setLoadingMessage","storedUserStr","localStorage","getItem","console","log","storedUser","JSON","parse","uuid","userWithUuid","setItem","stringify","e","warn","removeItem","login","onSuccess","tokenResponse","res","fetch","headers","Authorization","access_token","userInfo","json","mergedUser","profileRes","method","body","email","profileData","userWithProfile","displayName","leaderboardOptIn","totalExperiments","summaryExperiments","fullPassageExperiments","dateJoined","Date","toISOString","slice","error","alert","onError","handleLogout","handleNavigate","targetPage","startTutorial","finishTutorialReading","time","submitTutorialQuiz","answers","result","checkAnswers","startExperiment","assignedSummary","Math","random","response","prompt","ok","Error","data","passage","generatedText","questions","summaryResponse","text","summaryData","summary","submitExperimentQuiz","userAnswers","err","finishExperimentReading","score","total","toLowerCase","answerText","q3","keywordMatches","filter","keyword","includes","length","passed","backToHome","children","onNavigate","onLogin","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onStartTutorial","onStartExperiment","onBackHome","onFinish","onSubmit","quizAnswers","readingTime","message","passageText","_c","$RefreshReg$"],"sources":["C:/Users/tsuna/reading-experiment/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Home from './components/Home';\nimport TutorialReading from './tutorial/TutorialReading';\nimport TutorialQuiz from './tutorial/TutorialQuiz';\nimport TutorialResult from './tutorial/TutorialResult';\nimport ExperimentReading from './experiment/ExperimentReading';\nimport ExperimentQuiz from './experiment/ExperimentQuiz';\nimport ExperimentResult from './experiment/ExperimentResult';\nimport FAQ from './components/FAQ';\nimport Results from './components/Results';\nimport NavBar from './components/NavBar';\nimport LoadingScreen from './components/LoadingScreen';\nimport Profile from './components/Profile';\nimport { getOrCreateUserId } from './utils/user';\nimport { useGoogleLogin } from '@react-oauth/google';\n\nconst tutorialText = `Welcome to Read Racer!\n\nIn this tutorial, you'll experience how our experiment works. \nYou will read a short passage and then answer a few questions to test your understanding.\n\nThe goal is to see how well you comprehend what you read, whether you read the full passage or a summary. \n\nThis helps us study reading speed and accuracy, and you'll get to see your own results at the end!\n\nLet's get started!`;\n\nconst correctAnswers = {\n  q1: 'Read a passage and answer questions',\n  q2: 'How well you understand what you read',\n  q3Keywords: ['full passage', 'summary', 'summary passage', 'passage', 'short summary'],\n};\n\nfunction App() {\n  const [page, setPage] = useState('home');\n  const [mode, setMode] = useState(null);\n  const [user, setUser] = useState(null);\n  const [useSummary, setUseSummary] = useState(null);\n  const [experimentAnswers, setExperimentAnswers] = useState({});\n  const [experimentSummary, setExperimentSummary] = useState('');\n  const [experimentQuizAnswers, setExperimentQuizAnswers] = useState(null);\n  const [experimentText, setExperimentText] = useState('');\n  const [experimentQuestions, setExperimentQuestions] = useState([]);\n  const [experimentReadingTime, setExperimentReadingTime] = useState(null);\n  const [summaryText, setSummaryText] = useState('');\n  const [tutorialReadingTime, setTutorialReadingTime] = useState(null);\n  const [tutorialQuizAnswers, setTutorialQuizAnswers] = useState(null);\n  const [loadingMessage, setLoadingMessage] = useState(\"Generating your reading content...\");\n\n  useEffect(() => {\n    const storedUserStr = localStorage.getItem(\"user\");\n    console.log(\"[App] Loaded user from localStorage:\", storedUserStr);\n\n    if (!storedUserStr) {\n      setUser(null);\n      return;\n    }\n\n    try {\n      const storedUser = JSON.parse(storedUserStr);\n      const uuid = storedUser.uuid || getOrCreateUserId();\n      const userWithUuid = { ...storedUser, uuid };\n      setUser(userWithUuid);\n\n      if (!storedUser.uuid) {\n        localStorage.setItem(\"user\", JSON.stringify(userWithUuid));\n      }\n\n      console.log(\"[App] Final user state after parsing:\", userWithUuid);\n    } catch (e) {\n      console.warn(\"[App] Invalid localStorage user. Clearing.\", e);\n      localStorage.removeItem(\"user\");\n      setUser(null);\n    }\n  }, []);\n\n  const login = useGoogleLogin({\n    onSuccess: async (tokenResponse) => {\n      console.log(\"[Login] Google token received:\", tokenResponse);\n      try {\n        const res = await fetch('https://www.googleapis.com/oauth2/v3/userinfo', {\n          headers: { Authorization: `Bearer ${tokenResponse.access_token}` },\n        });\n        const userInfo = await res.json();\n\n        const uuid = getOrCreateUserId();\n        const mergedUser = { ...userInfo, uuid };\n\n        const profileRes = await fetch(\"https://read-racer.azurewebsites.net/api/getUserProfile\", {\n          method: \"POST\",\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ email: userInfo.email, uuid }),\n        });\n\n        const profileData = await profileRes.json();\n\n        const userWithProfile = {\n          ...mergedUser,\n          displayName: profileData.displayName || '',\n          leaderboardOptIn: profileData.leaderboardOptIn || false,\n          totalExperiments: profileData.totalExperiments || 0,\n          summaryExperiments: profileData.summaryExperiments || 0,\n          fullPassageExperiments: profileData.fullPassageExperiments || 0,\n          dateJoined: profileData.dateJoined || new Date().toISOString().slice(0, 10),\n        };\n\n        setUser(userWithProfile);\n        localStorage.setItem(\"user\", JSON.stringify(userWithProfile));\n        setPage('home');\n      } catch (error) {\n        alert('Failed to fetch user info');\n        console.error(\"[Login] Error:\", error);\n      }\n    },\n    onError: () => alert('Login Failed'),\n  });\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    setUser(null);\n    if (page === \"profile\") setPage(\"home\");\n  };\n\n  const handleNavigate = (targetPage) => {\n    if (targetPage === \"profile\" && !user) {\n      alert(\"Please sign in to view your profile.\");\n      return;\n    }\n    setPage(targetPage);\n  };\n\n  function startTutorial() {\n    setMode('tutorial');\n    setPage('reading');\n  }\n\n  function finishTutorialReading(time) {\n    setTutorialReadingTime(time);\n    setPage('quiz');\n  }\n\n  function submitTutorialQuiz(answers) {\n    const result = checkAnswers(answers);\n    setTutorialQuizAnswers({ ...answers, ...result });\n    setPage('finished');\n  }\n\n  async function startExperiment() {\n    if (!user) {\n      alert(\"Please sign in to participate in the experiment.\");\n      return;\n    }\n\n    setMode('experiment');\n    setLoadingMessage(\"Generating your reading content...\");\n    setPage('loading');\n\n    const assignedSummary = Math.random() < 0.5;\n    setUseSummary(assignedSummary);\n\n    try {\n      const response = await fetch('https://read-racer.azurewebsites.net/api/generateContent', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ prompt: \"any prompt or your own prompt\" }),\n      });\n\n      if (!response.ok) throw new Error('Failed to fetch content');\n      const data = await response.json();\n\n      setExperimentText(data.passage || data.generatedText || '');\n      setExperimentQuestions(data.questions || []);\n      setExperimentAnswers(data.answers || {});\n\n      if (assignedSummary) {\n        const summaryResponse = await fetch('https://read-racer.azurewebsites.net/api/summarizeText', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ text: data.passage || data.generatedText }),\n        });\n\n        const summaryData = await summaryResponse.json();\n        setExperimentSummary(summaryData.summary || '');\n        setSummaryText(summaryData.summary || '');\n      }\n\n      setPage('reading');\n    } catch (error) {\n      alert('Failed to load experiment data. Please try again.');\n      setMode(null);\n      setPage('home');\n      console.error(error);\n    }\n  }\n\n  async function submitExperimentQuiz(userAnswers) {\n    setLoadingMessage(\"Grading your answers...\");\n    setPage('loading');\n    try {\n      const res = await fetch('https://read-racer.azurewebsites.net/api/analyzeExperimentAnswers', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ answers: userAnswers, questions: experimentQuestions }),\n      });\n\n      if (!res.ok) throw new Error('Failed to submit quiz');\n      const result = await res.json();\n      setExperimentQuizAnswers(result);\n      setPage('finished');\n    } catch (err) {\n      alert('Failed to submit quiz. Please try again.');\n      setPage('quiz');\n      console.error(err);\n    }\n  }\n\n  function finishExperimentReading(time) {\n    setExperimentReadingTime(time);\n    setPage('quiz');\n  }\n\n  function checkAnswers(userAnswers) {\n    let score = 0;\n    let total = 2; // q1 and q2\n\n    if ((userAnswers.q1 || '').toLowerCase() === correctAnswers.q1.toLowerCase()) score++;\n    if ((userAnswers.q2 || '').toLowerCase() === correctAnswers.q2.toLowerCase()) score++;\n\n    const answerText = (userAnswers.q3 || '').toLowerCase();\n    const keywordMatches = correctAnswers.q3Keywords.filter(keyword => answerText.includes(keyword)).length;\n    if (keywordMatches >= correctAnswers.q3Keywords.length / 2) score++;\n    total++;\n\n    return { score, total, passed: score / total >= 0.8 };\n  }\n\n  function backToHome() {\n    setMode(null);\n    setPage('home');\n    setTutorialReadingTime(null);\n    setTutorialQuizAnswers(null);\n    setExperimentText('');\n    setExperimentQuestions([]);\n    setExperimentQuizAnswers(null);\n    setExperimentReadingTime(null);\n    setUseSummary(null);\n  }\n\n  return (\n    <>\n      <NavBar\n        onNavigate={handleNavigate}\n        user={user}\n        onLogin={login}\n        onLogout={handleLogout}\n      />\n\n      <main>\n        {page === 'home' && (\n          <Home onStartTutorial={startTutorial} onStartExperiment={startExperiment} user={user} />\n        )}\n        {page === 'profile' && user && (\n          <Profile user={user} setUser={setUser} onLogout={handleLogout} onBackHome={backToHome} />\n        )}\n\n        {mode === 'tutorial' && page === 'reading' && <TutorialReading text={tutorialText} onFinish={finishTutorialReading} />}\n        {mode === 'tutorial' && page === 'quiz' && <TutorialQuiz onSubmit={submitTutorialQuiz} />}\n        {mode === 'tutorial' && page === 'finished' && (\n          <TutorialResult quizAnswers={tutorialQuizAnswers} readingTime={tutorialReadingTime} onBackHome={backToHome} />\n        )}\n\n        {mode === 'experiment' && page === 'loading' && <LoadingScreen message={loadingMessage} />}\n        {mode === 'experiment' && page === 'reading' && (\n          <ExperimentReading passageText={experimentText} summaryText={summaryText} onFinish={finishExperimentReading} useSummary={useSummary} />\n        )}\n        {mode === 'experiment' && page === 'quiz' && <ExperimentQuiz questions={experimentQuestions} onSubmit={submitExperimentQuiz} />}\n        {mode === 'experiment' && page === 'finished' && (\n          <ExperimentResult\n            quizAnswers={experimentQuizAnswers}\n            readingTime={experimentReadingTime}\n            passageText={experimentText}\n            summaryText={summaryText}\n            onBackHome={backToHome}\n            user={user}\n          />\n        )}\n\n        {page === 'faq' && <FAQ onBackHome={backToHome} />}\n        {page === 'results' && <Results user={user} onBackHome={backToHome} />}\n      </main>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}