{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsuna\\\\reading-experiment\\\\src\\\\components\\\\PersonalResults.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\n\n// Custom Tooltip to show key info only\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload\n}) => {\n  if (active && payload && payload.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-2 rounded shadow border text-sm\",\n      children: payload.map((entry, index) => {\n        var _entry$payload, _entry$name, _entry$name2, _ref, _data$value, _data$accuracy;\n        const data = (_entry$payload = entry.payload) !== null && _entry$payload !== void 0 ? _entry$payload : {};\n        const isGlobal = (_entry$name = entry.name) === null || _entry$name === void 0 ? void 0 : _entry$name.toLowerCase().includes(\"global\");\n        const isPersonal = (_entry$name2 = entry.name) === null || _entry$name2 === void 0 ? void 0 : _entry$name2.toLowerCase().includes(\"personal\");\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 border-b last:border-b-0 pb-1\",\n          children: [(isGlobal || isPersonal) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs font-semibold mb-1\",\n            style: {\n              color: isGlobal ? \"red\" : \"blue\"\n            },\n            children: isGlobal ? \"Global Average\" : \"Personal Average\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Reading Speed:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), \" \", Math.round((_ref = (_data$value = data.value) !== null && _data$value !== void 0 ? _data$value : data.readingSpeed) !== null && _ref !== void 0 ? _ref : 0), \" WPM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Accuracy:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), \" \", (((_data$accuracy = data.accuracy) !== null && _data$accuracy !== void 0 ? _data$accuracy : 0) * 100).toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), typeof data.points === \"number\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Points:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this), \" \", data.points.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_c = CustomTooltip;\nconst PersonalResults = ({\n  userId\n}) => {\n  _s();\n  const [summaryAttempts, setSummaryAttempts] = useState([]);\n  const [fullPassageAttempts, setFullPassageAttempts] = useState([]);\n  const [globalAverages, setGlobalAverages] = useState({\n    summary: null,\n    full: null\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [mode, setMode] = useState(\"effective\"); // \"effective\" or \"real\"\n  const [showPersonalAvg, setShowPersonalAvg] = useState(true);\n  const [showGlobalAvg, setShowGlobalAvg] = useState(false);\n  useEffect(() => {\n    if (!userId) return;\n    async function fetchData() {\n      setLoading(true);\n      setError(null);\n      try {\n        const res = await fetch(`https://read-racer.azurewebsites.net/api/getUserResults?userId=${encodeURIComponent(userId)}`);\n        if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);\n        const data = await res.json();\n        const results = Array.isArray(data) ? data : data.results || [];\n        const summary = results.filter(r => r.useSummary === true || r.useSummary === \"true\" || r.useSummary === \"True\");\n        const full = results.filter(r => !(r.useSummary === true || r.useSummary === \"true\" || r.useSummary === \"True\"));\n        setSummaryAttempts(summary);\n        setFullPassageAttempts(full);\n        setGlobalAverages({\n          summary: data.summaryAvg || null,\n          full: data.passageAvg || null\n        });\n      } catch (err) {\n        console.error(\"Failed to load user results:\", err);\n        setError(err.message || \"Failed to load user results\");\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, [userId]);\n  const renderCombinedChart = () => {\n    var _ref1, _ref10, _globalAverages$summa, _globalAverages$summa2, _globalAverages$summa3, _globalAverages$summa4, _ref11, _ref12, _globalAverages$summa5, _globalAverages$summa6, _globalAverages$summa7, _globalAverages$summa8, _ref13, _globalAverages$full$, _globalAverages$full, _globalAverages$full2, _globalAverages$summa9, _globalAverages$full$2;\n    if (!summaryAttempts.length && !fullPassageAttempts.length || !globalAverages) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No attempts yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 14\n      }, this);\n    }\n    const summaryData = summaryAttempts.map((a, index) => {\n      var _ref2, _ref3, _a$effectiveWPM, _ref4, _ref5, _a$realWPM, _a$points;\n      return {\n        id: index,\n        value: mode === \"effective\" ? (_ref2 = (_ref3 = (_a$effectiveWPM = a.effectiveWPM) !== null && _a$effectiveWPM !== void 0 ? _a$effectiveWPM : a.realWPM) !== null && _ref3 !== void 0 ? _ref3 : a.readingSpeed) !== null && _ref2 !== void 0 ? _ref2 : 0 : (_ref4 = (_ref5 = (_a$realWPM = a.realWPM) !== null && _a$realWPM !== void 0 ? _a$realWPM : a.effectiveWPM) !== null && _ref5 !== void 0 ? _ref5 : a.readingSpeed) !== null && _ref4 !== void 0 ? _ref4 : 0,\n        accuracy: a.total > 0 ? a.score / a.total : 0,\n        points: (_a$points = a.points) !== null && _a$points !== void 0 ? _a$points : null\n      };\n    });\n    const passageData = fullPassageAttempts.map((a, index) => {\n      var _ref6, _a$realWPM2, _a$points2;\n      return {\n        id: index + 10000,\n        value: (_ref6 = (_a$realWPM2 = a.realWPM) !== null && _a$realWPM2 !== void 0 ? _a$realWPM2 : a.readingSpeed) !== null && _ref6 !== void 0 ? _ref6 : 0,\n        accuracy: a.total > 0 ? a.score / a.total : 0,\n        points: (_a$points2 = a.points) !== null && _a$points2 !== void 0 ? _a$points2 : null\n      };\n    });\n\n    // Personal averages from user's own data\n    const personalSummaryAvgValue = mode === \"effective\" ? summaryAttempts.length > 0 ? summaryAttempts.reduce((acc, cur) => {\n      var _ref7, _cur$effectiveWPM;\n      return acc + ((_ref7 = (_cur$effectiveWPM = cur.effectiveWPM) !== null && _cur$effectiveWPM !== void 0 ? _cur$effectiveWPM : cur.realWPM) !== null && _ref7 !== void 0 ? _ref7 : 0);\n    }, 0) / summaryAttempts.length : 0 : summaryAttempts.length > 0 ? summaryAttempts.reduce((acc, cur) => {\n      var _ref8, _cur$realWPM;\n      return acc + ((_ref8 = (_cur$realWPM = cur.realWPM) !== null && _cur$realWPM !== void 0 ? _cur$realWPM : cur.effectiveWPM) !== null && _ref8 !== void 0 ? _ref8 : 0);\n    }, 0) / summaryAttempts.length : 0;\n    const personalSummaryAvgAcc = summaryAttempts.length > 0 ? summaryAttempts.reduce((acc, cur) => {\n      var _ref9;\n      return acc + ((_ref9 = cur.total > 0 ? cur.score / cur.total : 0) !== null && _ref9 !== void 0 ? _ref9 : 0);\n    }, 0) / summaryAttempts.length : 0;\n    const personalPassageAvgValue = fullPassageAttempts.length > 0 ? fullPassageAttempts.reduce((acc, cur) => {\n      var _cur$realWPM2;\n      return acc + ((_cur$realWPM2 = cur.realWPM) !== null && _cur$realWPM2 !== void 0 ? _cur$realWPM2 : 0);\n    }, 0) / fullPassageAttempts.length : 0;\n    const personalPassageAvgAcc = fullPassageAttempts.length > 0 ? fullPassageAttempts.reduce((acc, cur) => {\n      var _ref0;\n      return acc + ((_ref0 = cur.total > 0 ? cur.score / cur.total : 0) !== null && _ref0 !== void 0 ? _ref0 : 0);\n    }, 0) / fullPassageAttempts.length : 0;\n    const summaryAvgValue = mode === \"effective\" ? (_ref1 = (_ref10 = (_globalAverages$summa = (_globalAverages$summa2 = globalAverages.summary) === null || _globalAverages$summa2 === void 0 ? void 0 : _globalAverages$summa2.effectiveWPM) !== null && _globalAverages$summa !== void 0 ? _globalAverages$summa : (_globalAverages$summa3 = globalAverages.summary) === null || _globalAverages$summa3 === void 0 ? void 0 : _globalAverages$summa3.realWPM) !== null && _ref10 !== void 0 ? _ref10 : (_globalAverages$summa4 = globalAverages.summary) === null || _globalAverages$summa4 === void 0 ? void 0 : _globalAverages$summa4.readingSpeed) !== null && _ref1 !== void 0 ? _ref1 : 0 : (_ref11 = (_ref12 = (_globalAverages$summa5 = (_globalAverages$summa6 = globalAverages.summary) === null || _globalAverages$summa6 === void 0 ? void 0 : _globalAverages$summa6.realWPM) !== null && _globalAverages$summa5 !== void 0 ? _globalAverages$summa5 : (_globalAverages$summa7 = globalAverages.summary) === null || _globalAverages$summa7 === void 0 ? void 0 : _globalAverages$summa7.effectiveWPM) !== null && _ref12 !== void 0 ? _ref12 : (_globalAverages$summa8 = globalAverages.summary) === null || _globalAverages$summa8 === void 0 ? void 0 : _globalAverages$summa8.readingSpeed) !== null && _ref11 !== void 0 ? _ref11 : 0;\n    const passageAvgValue = (_ref13 = (_globalAverages$full$ = (_globalAverages$full = globalAverages.full) === null || _globalAverages$full === void 0 ? void 0 : _globalAverages$full.realWPM) !== null && _globalAverages$full$ !== void 0 ? _globalAverages$full$ : (_globalAverages$full2 = globalAverages.full) === null || _globalAverages$full2 === void 0 ? void 0 : _globalAverages$full2.readingSpeed) !== null && _ref13 !== void 0 ? _ref13 : 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-2 text-gray-700\",\n        children: mode === \"effective\" ? \"Effective WPM (AI Summaries) vs Reading Speed (Full Passage)\" : \"Real WPM (AI Summaries) vs Reading Speed (Full Passage)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 flex flex-wrap items-center gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"inline-flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: showPersonalAvg,\n            onChange: () => setShowPersonalAvg(prev => !prev),\n            className: \"form-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Show Personal Averages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"inline-flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: showGlobalAvg,\n            onChange: () => setShowGlobalAvg(prev => !prev),\n            className: \"form-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Show Global Averages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"inline-flex items-center space-x-2 ml-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold mr-2\",\n            children: \"Select Graph Mode:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: mode,\n            onChange: e => setMode(e.target.value),\n            className: \"border rounded p-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"effective\",\n              children: \"Effective WPM (AI Summaries)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"real\",\n              children: \"Real WPM (AI Summaries)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 350,\n        children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n          margin: {\n            top: 10,\n            right: 20,\n            bottom: 20,\n            left: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            type: \"number\",\n            dataKey: \"value\",\n            name: \"Reading Speed (WPM)\",\n            unit: \" WPM\",\n            domain: [\"auto\", \"auto\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            type: \"number\",\n            dataKey: \"accuracy\",\n            name: \"Accuracy\",\n            domain: [0, 1],\n            tickFormatter: tick => `${(tick * 100).toFixed(0)}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 31\n            }, this),\n            cursor: {\n              strokeDasharray: \"3 3\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            formatter: value => {\n              if (value === \"AI Summaries\") return \"AI Summaries (Attempts)\";\n              if (value === \"Full Passage\") return \"Full Passage (Attempts)\";\n              if (value === \"Avg AI Summaries (Personal)\") return \"Personal Avg AI Summaries\";\n              if (value === \"Avg Full Passage (Personal)\") return \"Personal Avg Full Passage\";\n              if (value === \"Avg AI Summaries (Global)\") return \"Global Avg AI Summaries\";\n              if (value === \"Avg Full Passage (Global)\") return \"Global Avg Full Passage\";\n              return value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"AI Summaries\",\n            data: summaryData,\n            fill: \"#3b82f6\",\n            shape: \"circle\",\n            dataKey: {\n              x: \"value\",\n              y: \"accuracy\"\n            }\n          }, \"summary\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Full Passage\",\n            data: passageData,\n            fill: \"#10b981\",\n            shape: \"circle\",\n            dataKey: {\n              x: \"value\",\n              y: \"accuracy\"\n            }\n          }, \"passage\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), showPersonalAvg && summaryAttempts.length > 0 && /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Avg AI Summaries (Personal)\",\n            data: [{\n              value: personalSummaryAvgValue,\n              accuracy: personalSummaryAvgAcc\n            }],\n            fill: \"#3b82f6\",\n            shape: \"star\",\n            dataKey: {\n              x: \"value\",\n              y: \"accuracy\"\n            }\n          }, \"avg-summary-personal\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), showPersonalAvg && fullPassageAttempts.length > 0 && /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Avg Full Passage (Personal)\",\n            data: [{\n              value: personalPassageAvgValue,\n              accuracy: personalPassageAvgAcc\n            }],\n            fill: \"#10b981\",\n            shape: \"star\",\n            dataKey: {\n              x: \"value\",\n              y: \"accuracy\"\n            }\n          }, \"avg-passage-personal\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), showGlobalAvg && globalAverages.summary && /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Avg AI Summaries (Global)\",\n            data: [{\n              value: summaryAvgValue,\n              accuracy: (_globalAverages$summa9 = globalAverages.summary.accuracy) !== null && _globalAverages$summa9 !== void 0 ? _globalAverages$summa9 : 0\n            }],\n            fill: \"#ef4444\",\n            shape: \"star\",\n            dataKey: {\n              x: \"value\",\n              y: \"accuracy\"\n            }\n          }, \"avg-summary-global\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), showGlobalAvg && globalAverages.full && /*#__PURE__*/_jsxDEV(Scatter, {\n            name: \"Avg Full Passage (Global)\",\n            data: [{\n              value: passageAvgValue,\n              accuracy: (_globalAverages$full$2 = globalAverages.full.accuracy) !== null && _globalAverages$full$2 !== void 0 ? _globalAverages$full$2 : 0\n            }],\n            fill: \"#fbbf24\",\n            shape: \"star\",\n            dataKey: {\n              x: \"value\",\n              y: \"accuracy\"\n            }\n          }, \"avg-passage-global\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this);\n  };\n  if (!userId) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Please log in to see your personal results.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 23\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading your results...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-red-600 font-semibold\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-gray-800\",\n      children: \"Your Personal Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), renderCombinedChart()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 5\n  }, this);\n};\n_s(PersonalResults, \"05nYQzO1pp2AqXLQMDIFcYW8MGA=\");\n_c2 = PersonalResults;\nexport default PersonalResults;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"PersonalResults\");","map":{"version":3,"names":["React","useEffect","useState","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","CustomTooltip","active","payload","length","className","children","map","entry","index","_entry$payload","_entry$name","_entry$name2","_ref","_data$value","_data$accuracy","data","isGlobal","name","toLowerCase","includes","isPersonal","style","color","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","value","readingSpeed","accuracy","toFixed","points","_c","PersonalResults","userId","_s","summaryAttempts","setSummaryAttempts","fullPassageAttempts","setFullPassageAttempts","globalAverages","setGlobalAverages","summary","full","loading","setLoading","error","setError","mode","setMode","showPersonalAvg","setShowPersonalAvg","showGlobalAvg","setShowGlobalAvg","fetchData","res","fetch","encodeURIComponent","ok","Error","status","json","results","Array","isArray","filter","r","useSummary","summaryAvg","passageAvg","err","console","message","renderCombinedChart","_ref1","_ref10","_globalAverages$summa","_globalAverages$summa2","_globalAverages$summa3","_globalAverages$summa4","_ref11","_ref12","_globalAverages$summa5","_globalAverages$summa6","_globalAverages$summa7","_globalAverages$summa8","_ref13","_globalAverages$full$","_globalAverages$full","_globalAverages$full2","_globalAverages$summa9","_globalAverages$full$2","summaryData","a","_ref2","_ref3","_a$effectiveWPM","_ref4","_ref5","_a$realWPM","_a$points","id","effectiveWPM","realWPM","total","score","passageData","_ref6","_a$realWPM2","_a$points2","personalSummaryAvgValue","reduce","acc","cur","_ref7","_cur$effectiveWPM","_ref8","_cur$realWPM","personalSummaryAvgAcc","_ref9","personalPassageAvgValue","_cur$realWPM2","personalPassageAvgAcc","_ref0","summaryAvgValue","passageAvgValue","type","checked","onChange","prev","e","target","width","height","margin","top","right","bottom","left","dataKey","unit","domain","tickFormatter","tick","content","cursor","strokeDasharray","formatter","fill","shape","x","y","_c2","$RefreshReg$"],"sources":["C:/Users/tsuna/reading-experiment/src/components/PersonalResults.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\n// Custom Tooltip to show key info only\r\nconst CustomTooltip = ({ active, payload }) => {\r\n  if (active && payload && payload.length > 0) {\r\n    return (\r\n      <div className=\"bg-white p-2 rounded shadow border text-sm\">\r\n        {payload.map((entry, index) => {\r\n          const data = entry.payload ?? {};\r\n          const isGlobal = entry.name?.toLowerCase().includes(\"global\");\r\n          const isPersonal = entry.name?.toLowerCase().includes(\"personal\");\r\n\r\n          return (\r\n            <div key={index} className=\"mb-2 border-b last:border-b-0 pb-1\">\r\n              {(isGlobal || isPersonal) && (\r\n                <p className=\"text-xs font-semibold mb-1\" style={{color: isGlobal ? \"red\" : \"blue\"}}>\r\n                  {isGlobal ? \"Global Average\" : \"Personal Average\"}\r\n                </p>\r\n              )}\r\n              <p>\r\n                <strong>Reading Speed:</strong>{\" \"}\r\n                {Math.round(data.value ?? data.readingSpeed ?? 0)} WPM\r\n              </p>\r\n              <p>\r\n                <strong>Accuracy:</strong>{\" \"}\r\n                {((data.accuracy ?? 0) * 100).toFixed(1)}%\r\n              </p>\r\n              {typeof data.points === \"number\" && (\r\n                <p>\r\n                  <strong>Points:</strong> {data.points.toFixed(2)}\r\n                </p>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst PersonalResults = ({ userId }) => {\r\n  const [summaryAttempts, setSummaryAttempts] = useState([]);\r\n  const [fullPassageAttempts, setFullPassageAttempts] = useState([]);\r\n  const [globalAverages, setGlobalAverages] = useState({ summary: null, full: null });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [mode, setMode] = useState(\"effective\"); // \"effective\" or \"real\"\r\n  const [showPersonalAvg, setShowPersonalAvg] = useState(true);\r\n  const [showGlobalAvg, setShowGlobalAvg] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!userId) return;\r\n\r\n    async function fetchData() {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const res = await fetch(\r\n          `https://read-racer.azurewebsites.net/api/getUserResults?userId=${encodeURIComponent(userId)}`\r\n        );\r\n        if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);\r\n        const data = await res.json();\r\n\r\n        const results = Array.isArray(data) ? data : data.results || [];\r\n        const summary = results.filter(\r\n          (r) => r.useSummary === true || r.useSummary === \"true\" || r.useSummary === \"True\"\r\n        );\r\n        const full = results.filter(\r\n          (r) => !(r.useSummary === true || r.useSummary === \"true\" || r.useSummary === \"True\")\r\n        );\r\n\r\n        setSummaryAttempts(summary);\r\n        setFullPassageAttempts(full);\r\n\r\n        setGlobalAverages({\r\n          summary: data.summaryAvg || null,\r\n          full: data.passageAvg || null,\r\n        });\r\n      } catch (err) {\r\n        console.error(\"Failed to load user results:\", err);\r\n        setError(err.message || \"Failed to load user results\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, [userId]);\r\n\r\n  const renderCombinedChart = () => {\r\n    if ((!summaryAttempts.length && !fullPassageAttempts.length) || !globalAverages) {\r\n      return <p>No attempts yet.</p>;\r\n    }\r\n\r\n    const summaryData = summaryAttempts.map((a, index) => ({\r\n      id: index,\r\n      value:\r\n        mode === \"effective\"\r\n          ? a.effectiveWPM ?? a.realWPM ?? a.readingSpeed ?? 0\r\n          : a.realWPM ?? a.effectiveWPM ?? a.readingSpeed ?? 0,\r\n      accuracy: a.total > 0 ? a.score / a.total : 0,\r\n      points: a.points ?? null,\r\n    }));\r\n\r\n    const passageData = fullPassageAttempts.map((a, index) => ({\r\n      id: index + 10000,\r\n      value: a.realWPM ?? a.readingSpeed ?? 0,\r\n      accuracy: a.total > 0 ? a.score / a.total : 0,\r\n      points: a.points ?? null,\r\n    }));\r\n\r\n    // Personal averages from user's own data\r\n    const personalSummaryAvgValue =\r\n      mode === \"effective\"\r\n        ? summaryAttempts.length > 0\r\n          ? summaryAttempts.reduce((acc, cur) => acc + (cur.effectiveWPM ?? cur.realWPM ?? 0), 0) / summaryAttempts.length\r\n          : 0\r\n        : summaryAttempts.length > 0\r\n        ? summaryAttempts.reduce((acc, cur) => acc + (cur.realWPM ?? cur.effectiveWPM ?? 0), 0) / summaryAttempts.length\r\n        : 0;\r\n\r\n    const personalSummaryAvgAcc =\r\n      summaryAttempts.length > 0\r\n        ? summaryAttempts.reduce((acc, cur) => acc + ((cur.total > 0 ? cur.score / cur.total : 0) ?? 0), 0) / summaryAttempts.length\r\n        : 0;\r\n\r\n    const personalPassageAvgValue =\r\n      fullPassageAttempts.length > 0\r\n        ? fullPassageAttempts.reduce((acc, cur) => acc + (cur.realWPM ?? 0), 0) / fullPassageAttempts.length\r\n        : 0;\r\n\r\n    const personalPassageAvgAcc =\r\n      fullPassageAttempts.length > 0\r\n        ? fullPassageAttempts.reduce((acc, cur) => acc + ((cur.total > 0 ? cur.score / cur.total : 0) ?? 0), 0) / fullPassageAttempts.length\r\n        : 0;\r\n\r\n    const summaryAvgValue =\r\n      mode === \"effective\"\r\n        ? globalAverages.summary?.effectiveWPM ?? globalAverages.summary?.realWPM ?? globalAverages.summary?.readingSpeed ?? 0\r\n        : globalAverages.summary?.realWPM ?? globalAverages.summary?.effectiveWPM ?? globalAverages.summary?.readingSpeed ?? 0;\r\n\r\n    const passageAvgValue =\r\n      globalAverages.full?.realWPM ?? globalAverages.full?.readingSpeed ?? 0;\r\n\r\n    return (\r\n      <div className=\"mb-8\">\r\n        <h3 className=\"text-xl font-semibold mb-2 text-gray-700\">\r\n          {mode === \"effective\"\r\n            ? \"Effective WPM (AI Summaries) vs Reading Speed (Full Passage)\"\r\n            : \"Real WPM (AI Summaries) vs Reading Speed (Full Passage)\"}\r\n        </h3>\r\n\r\n        <div className=\"mb-4 flex flex-wrap items-center gap-6\">\r\n          <label className=\"inline-flex items-center space-x-2\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showPersonalAvg}\r\n              onChange={() => setShowPersonalAvg((prev) => !prev)}\r\n              className=\"form-checkbox\"\r\n            />\r\n            <span>Show Personal Averages</span>\r\n          </label>\r\n\r\n          <label className=\"inline-flex items-center space-x-2\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showGlobalAvg}\r\n              onChange={() => setShowGlobalAvg((prev) => !prev)}\r\n              className=\"form-checkbox\"\r\n            />\r\n            <span>Show Global Averages</span>\r\n          </label>\r\n\r\n          <label className=\"inline-flex items-center space-x-2 ml-auto\">\r\n            <span className=\"font-semibold mr-2\">Select Graph Mode:</span>\r\n            <select\r\n              value={mode}\r\n              onChange={(e) => setMode(e.target.value)}\r\n              className=\"border rounded p-1\"\r\n            >\r\n              <option value=\"effective\">Effective WPM (AI Summaries)</option>\r\n              <option value=\"real\">Real WPM (AI Summaries)</option>\r\n            </select>\r\n          </label>\r\n        </div>\r\n\r\n        <ResponsiveContainer width=\"100%\" height={350}>\r\n          <ScatterChart margin={{ top: 10, right: 20, bottom: 20, left: 0 }}>\r\n            <CartesianGrid />\r\n            <XAxis\r\n              type=\"number\"\r\n              dataKey=\"value\"\r\n              name=\"Reading Speed (WPM)\"\r\n              unit=\" WPM\"\r\n              domain={[\"auto\", \"auto\"]}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              dataKey=\"accuracy\"\r\n              name=\"Accuracy\"\r\n              domain={[0, 1]}\r\n              tickFormatter={(tick) => `${(tick * 100).toFixed(0)}%`}\r\n            />\r\n            <Tooltip content={<CustomTooltip />} cursor={{ strokeDasharray: \"3 3\" }} />\r\n            <Legend\r\n              formatter={(value) => {\r\n                if (value === \"AI Summaries\") return \"AI Summaries (Attempts)\";\r\n                if (value === \"Full Passage\") return \"Full Passage (Attempts)\";\r\n                if (value === \"Avg AI Summaries (Personal)\") return \"Personal Avg AI Summaries\";\r\n                if (value === \"Avg Full Passage (Personal)\") return \"Personal Avg Full Passage\";\r\n                if (value === \"Avg AI Summaries (Global)\") return \"Global Avg AI Summaries\";\r\n                if (value === \"Avg Full Passage (Global)\") return \"Global Avg Full Passage\";\r\n                return value;\r\n              }}\r\n            />\r\n            <Scatter\r\n              name=\"AI Summaries\"\r\n              data={summaryData}\r\n              fill=\"#3b82f6\"\r\n              shape=\"circle\"\r\n              key=\"summary\"\r\n              dataKey={{ x: \"value\", y: \"accuracy\" }}\r\n            />\r\n            <Scatter\r\n              name=\"Full Passage\"\r\n              data={passageData}\r\n              fill=\"#10b981\"\r\n              shape=\"circle\"\r\n              key=\"passage\"\r\n              dataKey={{ x: \"value\", y: \"accuracy\" }}\r\n            />\r\n            {showPersonalAvg && summaryAttempts.length > 0 && (\r\n              <Scatter\r\n                name=\"Avg AI Summaries (Personal)\"\r\n                data={[{ value: personalSummaryAvgValue, accuracy: personalSummaryAvgAcc }]}\r\n                fill=\"#3b82f6\"\r\n                shape=\"star\"\r\n                key=\"avg-summary-personal\"\r\n                dataKey={{ x: \"value\", y: \"accuracy\" }}\r\n              />\r\n            )}\r\n            {showPersonalAvg && fullPassageAttempts.length > 0 && (\r\n              <Scatter\r\n                name=\"Avg Full Passage (Personal)\"\r\n                data={[{ value: personalPassageAvgValue, accuracy: personalPassageAvgAcc }]}\r\n                fill=\"#10b981\"\r\n                shape=\"star\"\r\n                key=\"avg-passage-personal\"\r\n                dataKey={{ x: \"value\", y: \"accuracy\" }}\r\n              />\r\n            )}\r\n            {showGlobalAvg && globalAverages.summary && (\r\n              <Scatter\r\n                name=\"Avg AI Summaries (Global)\"\r\n                data={[{ value: summaryAvgValue, accuracy: globalAverages.summary.accuracy ?? 0 }]}\r\n                fill=\"#ef4444\"\r\n                shape=\"star\"\r\n                key=\"avg-summary-global\"\r\n                dataKey={{ x: \"value\", y: \"accuracy\" }}\r\n              />\r\n            )}\r\n            {showGlobalAvg && globalAverages.full && (\r\n              <Scatter\r\n                name=\"Avg Full Passage (Global)\"\r\n                data={[{ value: passageAvgValue, accuracy: globalAverages.full.accuracy ?? 0 }]}\r\n                fill=\"#fbbf24\"\r\n                shape=\"star\"\r\n                key=\"avg-passage-global\"\r\n                dataKey={{ x: \"value\", y: \"accuracy\" }}\r\n              />\r\n            )}\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (!userId) return <p>Please log in to see your personal results.</p>;\r\n  if (loading) return <p>Loading your results...</p>;\r\n  if (error) return <p className=\"text-red-600 font-semibold\">Error: {error}</p>;\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-4xl mx-auto\">\r\n      <h2 className=\"text-3xl font-bold mb-6 text-gray-800\">Your Personal Results</h2>\r\n      {renderCombinedChart()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalResults;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}